Timeout in resolving values
Timeout in running neo4j query
Running Main.py on wp-monsters

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.450089.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.189375.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.383575.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 7 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:01.054927.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1017 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.515526.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.719696.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.117415.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 283 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:06.202430.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 10762
Added 9455 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 10762
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.128388.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-monsters/templates.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-monsters/wp-cities.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-monsters/wp-feats.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-monsters/wp-magic-items.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-monsters/wp-monsters.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-monsters/wp-spells.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-monsters/wp-traps.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-monsters/wp-weapons.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.726729.

7 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
10755 PHP_REACHES edges created
10762 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 3362 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.634408.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.316703.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 214 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:05.765065.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 41 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.190279.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.137732.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.574617.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.011263.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.050218.

255 PHP_REACHES edges created
255 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 214 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.190839.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.300127.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'[city id=$post" name="$post" title="yes" description="yes" image="yes"]'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'{"1": ["lawful good"], "2": ["neutral good"], "3": ["chaotic good"], "4": ["lawful neutral"], "5": ["neutral"], "6": ["chaotic neutral"], "7": ["lawful evil"], "8": ["neutral evil"], "9": ["chaotic evil"]}'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$size'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(-5, 15, 1, "corruption", get_post_meta($post->ID, "corruption", true), false)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(-5, 15, 1, "crime", get_post_meta($post->ID, "crime", true), false)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(-5, 15, 1, "economy", get_post_meta($post->ID, "economy", true), false)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(-5, 15, 1, "law", get_post_meta($post->ID, "law", true), false)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(-5, 15, 1, "lore", get_post_meta($post->ID, "lore", true), false)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(-5, 15, 1, "society", get_post_meta($post->ID, "society", true), false)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "qualities", true)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(-5, 15, 1, "danger", get_post_meta($post->ID, "danger", true), false)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "goverment", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "population", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "basevalue", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "purchaselimit", true)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(0, 10, 1, "spellcasting", get_post_meta($post->ID, "spellcasting", true), false)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "minoritems", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "mediumitems", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "mayoritems", true)'' cannot be parsed correct.
HTML code '$'[city id=$post" name="$post" title="yes" description="yes" image="yes"]'' cannot be parsed correct.
HTML code '$'join(", ", $term_slugs_arr)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "prerequisites", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "normal", true)'' cannot be parsed correct.
HTML code '$'[feat id=$post" name="$post"'' cannot be parsed correct.
HTML code '$'[feat id=$post" name="$post"'' cannot be parsed correct.
HTML code '$'join(", ", $term_slugs_arr)'' cannot be parsed correct.
HTML code '$'[magic_item id=$post" name="$post" title="yes" description="yes" image="yes"]'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "cost", true)'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$slot'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "weight", true)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(1, 10, 1, "cl", get_post_meta($post->ID, "cl", true), false)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "aura", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "constructioncost", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "constructionrequirements", true)'' cannot be parsed correct.
HTML code '$'[magic_item id=$post" name="$post" title="yes" description="yes" image="yes"]'' cannot be parsed correct.
HTML code '$'join(", ", $term_slugs_arr)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "type", true)'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'{"1": ["lawful good"], "2": ["neutral good"], "3": ["chaotic good"], "4": ["lawful neutral"], "5": ["neutral"], "6": ["chaotic neutral"], "7": ["lawful evil"], "8": ["neutral evil"], "9": ["chaotic evil"]}'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$size'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(0, 20, 1, "cr", get_post_meta($post->ID, "cr", true))'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "xp", true)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(-5, 15, 1, "init", get_post_meta($post->ID, "init", true), true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "senses", true)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(-5, 20, 1, "fort", get_post_meta($post->ID, "fort", true), true)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(-5, 20, 1, "ref", get_post_meta($post->ID, "ref", true), true)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(-5, 20, 1, "will", get_post_meta($post->ID, "will", true), true)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(0, 50, 1, "sr", get_post_meta($post->ID, "sr", true), false)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(1, 100, 1, "ca", get_post_meta($post->ID, "ca", true), false)'' cannot be parsed correct.
HTML code '$'[monster id=$post" name="$post" title="yes" description="yes" image="yes"]'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "weaknesses", true)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(1, 100, 1, "touched", get_post_meta($post->ID, "touched", true), false)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(1, 100, 1, "flat-footed", get_post_meta($post->ID, "flat-footed", true), false)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "infoca", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "hp", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "dr", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "inmmune", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "resist", true)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(0, 100, 1, "str", get_post_meta($post->ID, "str", true), false)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(0, 100, 1, "dex", get_post_meta($post->ID, "dex", true), false)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(0, 100, 1, "con", get_post_meta($post->ID, "con", true), false)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(0, 100, 1, "int", get_post_meta($post->ID, "int", true), false)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(0, 100, 1, "wis", get_post_meta($post->ID, "wis", true), false)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(0, 100, 1, "cha", get_post_meta($post->ID, "cha", true), false)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(0, 20, 1, "ba", get_post_meta($post->ID, "ba", true), true)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(0, 20, 1, "cmb", get_post_meta($post->ID, "cmb", true), true)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(0, 50, 1, "cmd", get_post_meta($post->ID, "cmd", true), false)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(0, 120, $measures, "speed", get_post_meta($post->ID, "speed", true), false)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(0, 120, $measures, "fly", get_post_meta($post->ID, "fly", true), false)'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$flytype'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "melee", true)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select($measures, 50, $measures, "space", get_post_meta($post->ID, "space", true), false)'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select($measures, 50, $measures, "reach", get_post_meta($post->ID, "reach", true), false)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "ranged", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "special-attacks", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "spell-like-abilities", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "feats", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "skills", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "languages", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "sq", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "environment", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "organization", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "treasure", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "special-abilities", true)'' cannot be parsed correct.
HTML code '$'[monster id=$post" name="$post" title="yes" description="yes" image="yes"]'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "type", true)'' cannot be parsed correct.
HTML code '$'join(", ", $term_slugs_arr)'' cannot be parsed correct.
HTML code '$'magic_items'' cannot be parsed correct.
HTML code '$'magic_items'' cannot be parsed correct.
HTML code '$'stripslashes($template_monster)'' cannot be parsed correct.
HTML code '$'implode("], [", $codes_monster)'' cannot be parsed correct.
HTML code '$'[spell id=$post" name="$post"'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "school", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "level", true)'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$time'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "components", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "range", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "target", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "duration", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "savingthrow", true)'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$sr'' cannot be parsed correct.
HTML code '$'[spell id=$post" name="$post"'' cannot be parsed correct.
HTML code '$'join(", ", $term_slugs_arr)'' cannot be parsed correct.
HTML code '$'[trap id=$post" name="$post" title="yes" description="yes" image="yes"]'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$type'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(0, 20, 1, "cr", get_post_meta($post->ID, "cr", true))'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "xp", true)'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$bypass'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(1, 100, 1, "perception", get_post_meta($post->ID, "perception", true))'' cannot be parsed correct.
HTML code '$'wp_monsters_generate_select(1, 100, 1, "disable", get_post_meta($post->ID, "disable", true))'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$trigger'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "duration", true)'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$reset'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "resetautomatictime", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "effect", true)'' cannot be parsed correct.
HTML code '$'[trap id=$post" name="$post" title="yes" description="yes" image="yes"]'' cannot be parsed correct.
HTML code '$'join(", ", $term_slugs_arr)'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$generaltype'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'[weapon id=$post" name="$post" title="yes" description="yes" image="yes"]'' cannot be parsed correct.
HTML code '$'join(", ", $term_slugs_arr)'' cannot be parsed correct.
HTML code '$'$subtype'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "cost", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "dmgs", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "dmgm", true)'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$critical'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "range", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "weight", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "special", true)'' cannot be parsed correct.
HTML code '$'[weapon id=$post" name="$post"'' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
HTML code '$' selected=\'selected\''' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:18.773673.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.054192.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 19 do_action/apply_filters calls and 105 add_action/add_filter calls. Now connecting do-add pairs.
Added 6 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:03.551932.

6 PHP_REACHES edges created
6 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running FirebirdInterBaseDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running DbplusDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MySQLDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ArrayElementDetector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running HashDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
### Finish running PHPRetrievalDetector
### Start running PropertyDetector
### Finish running OpenSSLDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running PropertyDetector
### Start running TokyoTyrantDetector
### Finish running PhpVarDetector
### Start running UserInputDetector
### Finish running SybaseDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running SqlServerDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running MySQLiDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running VariableDetector
### Start running DeletionDetector
### Finish running UserInputDetector
### Start running UninstallDetector
### Finish running GenericEncryptionDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
templates.php:83
  - RETRIEVAL call to get_option("wp_monsters_template_monster") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-cities.php:11
  - RETRIEVAL call to get_option("wp_cities_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-cities.php:87
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
wp-cities.php:101
  - RETRIEVAL call to get_option("wp_cities_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-cities.php:148
  - RETRIEVAL call to get_post_meta($post->ID, "alignment", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:157
  - RETRIEVAL call to get_post_meta($post->ID, "size", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:164
  - RETRIEVAL call to get_post_meta($post->ID, "corruption", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:165
  - RETRIEVAL call to get_post_meta($post->ID, "crime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:166
  - RETRIEVAL call to get_post_meta($post->ID, "economy", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:167
  - RETRIEVAL call to get_post_meta($post->ID, "law", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:168
  - RETRIEVAL call to get_post_meta($post->ID, "lore", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:169
  - RETRIEVAL call to get_post_meta($post->ID, "society", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:172
  - RETRIEVAL call to get_post_meta($post->ID, "qualities", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:173
  - RETRIEVAL call to get_post_meta($post->ID, "danger", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:209
  - RETRIEVAL call to get_post_meta($post->ID, "goverment", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:210
  - RETRIEVAL call to get_post_meta($post->ID, "population", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:236
  - RETRIEVAL call to get_post_meta($post->ID, "basevalue", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:237
  - RETRIEVAL call to get_post_meta($post->ID, "purchaselimit", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:238
  - RETRIEVAL call to get_post_meta($post->ID, "spellcasting", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:245
  - RETRIEVAL call to get_post_meta($post->ID, "minoritems", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:246
  - RETRIEVAL call to get_post_meta($post->ID, "mediumitems", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:247
  - RETRIEVAL call to get_post_meta($post->ID, "mayoritems", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-cities.php:321
  - RETRIEVAL call to get_post($atts["id"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
wp-cities.php:399
  - RETRIEVAL call to get_post_meta($post->ID, $code, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-feats.php:11
  - RETRIEVAL call to get_option("wp_feats_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-feats.php:87
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
wp-feats.php:101
  - RETRIEVAL call to get_option("wp_feats_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-feats.php:139
  - RETRIEVAL call to get_post_meta($post->ID, "prerequisites", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-feats.php:140
  - RETRIEVAL call to get_post_meta($post->ID, "normal", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-feats.php:203
  - RETRIEVAL call to get_post($atts["id"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
wp-feats.php:210
  - RETRIEVAL call to get_post_meta($post->ID, $code, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-magic-items.php:11
  - RETRIEVAL call to get_option("wp_magic_items_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-magic-items.php:87
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
wp-magic-items.php:101
  - RETRIEVAL call to get_option("wp_magic_items_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-magic-items.php:142
  - RETRIEVAL call to get_post_meta($post->ID, "cost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-magic-items.php:147
  - RETRIEVAL call to get_post_meta($post->ID, "slot", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-magic-items.php:152
  - RETRIEVAL call to get_post_meta($post->ID, "weight", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-magic-items.php:153
  - RETRIEVAL call to get_post_meta($post->ID, "cl", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-magic-items.php:154
  - RETRIEVAL call to get_post_meta($post->ID, "aura", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-magic-items.php:155
  - RETRIEVAL call to get_post_meta($post->ID, "constructioncost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-magic-items.php:156
  - RETRIEVAL call to get_post_meta($post->ID, "constructionrequirements", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-magic-items.php:224
  - RETRIEVAL call to get_post($atts["id"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
wp-magic-items.php:266
  - RETRIEVAL call to get_post_meta($post->ID, $code, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:31
  - RETRIEVAL call to get_option("wp_monsters_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-monsters.php:107
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
wp-monsters.php:121
  - RETRIEVAL call to get_option("wp_monsters_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-monsters.php:163
  - RETRIEVAL call to get_post_meta($post->ID, "type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:168
  - RETRIEVAL call to get_post_meta($post->ID, "alignment", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:177
  - RETRIEVAL call to get_post_meta($post->ID, "size", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:182
  - RETRIEVAL call to get_post_meta($post->ID, "cr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:183
  - RETRIEVAL call to get_post_meta($post->ID, "xp", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:184
  - RETRIEVAL call to get_post_meta($post->ID, "init", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:185
  - RETRIEVAL call to get_post_meta($post->ID, "senses", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:215
  - RETRIEVAL call to get_post_meta($post->ID, "fort", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:216
  - RETRIEVAL call to get_post_meta($post->ID, "ref", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:217
  - RETRIEVAL call to get_post_meta($post->ID, "will", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:218
  - RETRIEVAL call to get_post_meta($post->ID, "sr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:221
  - RETRIEVAL call to get_post_meta($post->ID, "ca", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:222
  - RETRIEVAL call to get_post_meta($post->ID, "touched", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:223
  - RETRIEVAL call to get_post_meta($post->ID, "flat-footed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:224
  - RETRIEVAL call to get_post_meta($post->ID, "infoca", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:225
  - RETRIEVAL call to get_post_meta($post->ID, "hp", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:226
  - RETRIEVAL call to get_post_meta($post->ID, "dr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:227
  - RETRIEVAL call to get_post_meta($post->ID, "inmmune", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:228
  - RETRIEVAL call to get_post_meta($post->ID, "resist", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:229
  - RETRIEVAL call to get_post_meta($post->ID, "weaknesses", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:268
  - RETRIEVAL call to get_option("wp_monsters_measures") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-monsters.php:274
  - RETRIEVAL call to get_post_meta($post->ID, "speed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:275
  - RETRIEVAL call to get_post_meta($post->ID, "fly", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:280
  - RETRIEVAL call to get_post_meta($post->ID, "flytype", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:285
  - RETRIEVAL call to get_post_meta($post->ID, "melee", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:287
  - RETRIEVAL call to get_post_meta($post->ID, "space", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:288
  - RETRIEVAL call to get_post_meta($post->ID, "reach", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:290
  - RETRIEVAL call to get_post_meta($post->ID, "ranged", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:292
  - RETRIEVAL call to get_post_meta($post->ID, "special-attacks", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:294
  - RETRIEVAL call to get_post_meta($post->ID, "spell-like-abilities", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:327
  - RETRIEVAL call to get_post_meta($post->ID, "str", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:328
  - RETRIEVAL call to get_post_meta($post->ID, "dex", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:329
  - RETRIEVAL call to get_post_meta($post->ID, "con", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:330
  - RETRIEVAL call to get_post_meta($post->ID, "int", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:331
  - RETRIEVAL call to get_post_meta($post->ID, "wis", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:332
  - RETRIEVAL call to get_post_meta($post->ID, "cha", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:335
  - RETRIEVAL call to get_post_meta($post->ID, "ba", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:336
  - RETRIEVAL call to get_post_meta($post->ID, "cmb", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:337
  - RETRIEVAL call to get_post_meta($post->ID, "cmd", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:340
  - RETRIEVAL call to get_post_meta($post->ID, "feats", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:341
  - RETRIEVAL call to get_post_meta($post->ID, "skills", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:342
  - RETRIEVAL call to get_post_meta($post->ID, "languages", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:343
  - RETRIEVAL call to get_post_meta($post->ID, "sq", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:382
  - RETRIEVAL call to get_post_meta($post->ID, "environment", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:383
  - RETRIEVAL call to get_post_meta($post->ID, "organization", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:384
  - RETRIEVAL call to get_post_meta($post->ID, "treasure", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:412
  - RETRIEVAL call to get_post_meta($post->ID, "special-abilities", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:437
  - RETRIEVAL call to get_post_meta($post->ID, "type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:484
  - RETRIEVAL call to get_post($atts["id"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
wp-monsters.php:492
  - RETRIEVAL call to get_post_meta($post->ID, $code, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-monsters.php:495
  - RETRIEVAL call to get_option("wp_monsters_measures") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-monsters.php:591
  - RETRIEVAL call to get_option("wp_monsters_template_monster") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-monsters.php:606
  - RETRIEVAL call to get_option("wp_monsters_measures") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-monsters.php:607
  - RETRIEVAL call to get_option("wp_monsters_measures") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-spells.php:11
  - RETRIEVAL call to get_option("wp_spells_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-spells.php:85
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
wp-spells.php:99
  - RETRIEVAL call to get_option("wp_spells_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-spells.php:143
  - RETRIEVAL call to get_post_meta($post->ID, "school", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-spells.php:144
  - RETRIEVAL call to get_post_meta($post->ID, "level", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-spells.php:149
  - RETRIEVAL call to get_post_meta($post->ID, "castingtime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-spells.php:154
  - RETRIEVAL call to get_post_meta($post->ID, "components", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-spells.php:155
  - RETRIEVAL call to get_post_meta($post->ID, "range", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-spells.php:156
  - RETRIEVAL call to get_post_meta($post->ID, "target", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-spells.php:157
  - RETRIEVAL call to get_post_meta($post->ID, "duration", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-spells.php:158
  - RETRIEVAL call to get_post_meta($post->ID, "savingthrow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-spells.php:163
  - RETRIEVAL call to get_post_meta($post->ID, "sr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-spells.php:237
  - RETRIEVAL call to get_post($atts["id"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
wp-spells.php:285
  - RETRIEVAL call to get_post_meta($post->ID, $code, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-traps.php:11
  - RETRIEVAL call to get_option("wp_traps_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-traps.php:88
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
wp-traps.php:102
  - RETRIEVAL call to get_option("wp_traps_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-traps.php:148
  - RETRIEVAL call to get_post_meta($post->ID, "type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-traps.php:153
  - RETRIEVAL call to get_post_meta($post->ID, "cr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-traps.php:154
  - RETRIEVAL call to get_post_meta($post->ID, "xp", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-traps.php:159
  - RETRIEVAL call to get_post_meta($post->ID, "bypass", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-traps.php:164
  - RETRIEVAL call to get_post_meta($post->ID, "perception", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-traps.php:165
  - RETRIEVAL call to get_post_meta($post->ID, "disable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-traps.php:202
  - RETRIEVAL call to get_post_meta($post->ID, "trigger", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-traps.php:207
  - RETRIEVAL call to get_post_meta($post->ID, "duration", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-traps.php:212
  - RETRIEVAL call to get_post_meta($post->ID, "reset", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-traps.php:217
  - RETRIEVAL call to get_post_meta($post->ID, "resetautomatictime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-traps.php:218
  - RETRIEVAL call to get_post_meta($post->ID, "effect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-traps.php:283
  - RETRIEVAL call to get_post($atts["id"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
wp-traps.php:330
  - RETRIEVAL call to get_post_meta($post->ID, $code, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-weapons.php:11
  - RETRIEVAL call to get_option("wp_weapons_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-weapons.php:87
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
wp-weapons.php:101
  - RETRIEVAL call to get_option("wp_weapons_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-weapons.php:150
  - RETRIEVAL call to get_post_meta($post->ID, "generaltype", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-weapons.php:159
  - RETRIEVAL call to get_post_meta($post->ID, "subtype", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-weapons.php:164
  - RETRIEVAL call to get_post_meta($post->ID, "cost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-weapons.php:165
  - RETRIEVAL call to get_post_meta($post->ID, "dmgs", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-weapons.php:166
  - RETRIEVAL call to get_post_meta($post->ID, "dmgm", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-weapons.php:171
  - RETRIEVAL call to get_post_meta($post->ID, "critical", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-weapons.php:176
  - RETRIEVAL call to get_post_meta($post->ID, "range", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-weapons.php:177
  - RETRIEVAL call to get_post_meta($post->ID, "weight", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-weapons.php:180
  - RETRIEVAL call to get_post_meta($post->ID, "typedamageb", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-weapons.php:181
  - RETRIEVAL call to get_post_meta($post->ID, "typedamagep", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-weapons.php:182
  - RETRIEVAL call to get_post_meta($post->ID, "typedamages", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-weapons.php:198
  - RETRIEVAL call to get_post_meta($post->ID, "special", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-weapons.php:270
  - RETRIEVAL call to get_post($atts["id"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
wp-weapons.php:305
  - RETRIEVAL call to get_post_meta($post->ID, $code, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta 

wp-cities.php:12
  - STORAGE call to add_option("wp_cities_flush_rewrite_rules_flag", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wp-cities.php:103
  - STORAGE call to delete_option("wp_cities_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-cities.php:179
  - STORAGE call to update_post_meta($post_id, "alignment", sanitize_text_field($_POST["alignment"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:180
  - STORAGE call to update_post_meta($post_id, "size", sanitize_text_field($_POST["size"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:182
  - STORAGE call to update_post_meta($post_id, "corruption", sanitize_text_field($_POST["corruption"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:183
  - STORAGE call to update_post_meta($post_id, "crime", sanitize_text_field($_POST["crime"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:184
  - STORAGE call to update_post_meta($post_id, "economy", sanitize_text_field($_POST["economy"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:185
  - STORAGE call to update_post_meta($post_id, "law", sanitize_text_field($_POST["law"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:186
  - STORAGE call to update_post_meta($post_id, "lore", sanitize_text_field($_POST["lore"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:187
  - STORAGE call to update_post_meta($post_id, "society", sanitize_text_field($_POST["society"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:189
  - STORAGE call to update_post_meta($post_id, "qualities", sanitize_text_field($_POST["qualities"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:190
  - STORAGE call to update_post_meta($post_id, "danger", sanitize_text_field($_POST["danger"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:216
  - STORAGE call to update_post_meta($post_id, "goverment", sanitize_text_field($_POST["goverment"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:217
  - STORAGE call to update_post_meta($post_id, "population", sanitize_text_field($_POST["population"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:254
  - STORAGE call to update_post_meta($post_id, "basevalue", sanitize_text_field($_POST["basevalue"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:255
  - STORAGE call to update_post_meta($post_id, "purchaselimit", sanitize_text_field($_POST["purchaselimit"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:256
  - STORAGE call to update_post_meta($post_id, "spellcasting", sanitize_text_field($_POST["spellcasting"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:257
  - STORAGE call to update_post_meta($post_id, "minoritems", sanitize_text_field($_POST["minoritems"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:258
  - STORAGE call to update_post_meta($post_id, "mediumitems", sanitize_text_field($_POST["mediumitems"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-cities.php:259
  - STORAGE call to update_post_meta($post_id, "mayoritems", sanitize_text_field($_POST["mayoritems"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-feats.php:12
  - STORAGE call to add_option("wp_feats_flush_rewrite_rules_flag", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wp-feats.php:103
  - STORAGE call to delete_option("wp_feats_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-feats.php:146
  - STORAGE call to update_post_meta($post_id, "prerequisites", sanitize_text_field($_POST["prerequisites"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-feats.php:147
  - STORAGE call to update_post_meta($post_id, "normal", sanitize_text_field($_POST["normal"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-magic-items.php:12
  - STORAGE call to add_option("wp_magic_items_flush_rewrite_rules_flag", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wp-magic-items.php:103
  - STORAGE call to delete_option("wp_magic_items_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-magic-items.php:162
  - STORAGE call to update_post_meta($post_id, "cost", sanitize_text_field($_POST["cost"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-magic-items.php:163
  - STORAGE call to update_post_meta($post_id, "weight", sanitize_text_field($_POST["weight"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-magic-items.php:164
  - STORAGE call to update_post_meta($post_id, "slot", sanitize_text_field($_POST["slot"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-magic-items.php:165
  - STORAGE call to update_post_meta($post_id, "cl", sanitize_text_field($_POST["cl"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-magic-items.php:166
  - STORAGE call to update_post_meta($post_id, "aura", sanitize_text_field($_POST["aura"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-magic-items.php:167
  - STORAGE call to update_post_meta($post_id, "constructioncost", sanitize_text_field($_POST["constructioncost"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-magic-items.php:168
  - STORAGE call to update_post_meta($post_id, "constructionrequirements", sanitize_text_field($_POST["constructionrequirements"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:32
  - STORAGE call to add_option("wp_monsters_flush_rewrite_rules_flag", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wp-monsters.php:123
  - STORAGE call to delete_option("wp_monsters_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-monsters.php:190
  - STORAGE call to update_post_meta($post_id, "type", sanitize_text_field($_POST["type"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:191
  - STORAGE call to update_post_meta($post_id, "alignment", sanitize_text_field($_POST["alignment"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:192
  - STORAGE call to update_post_meta($post_id, "size", sanitize_text_field($_POST["size"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:193
  - STORAGE call to update_post_meta($post_id, "cr", sanitize_text_field($_POST["cr"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:194
  - STORAGE call to update_post_meta($post_id, "xp", sanitize_text_field($_POST["xp"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:195
  - STORAGE call to update_post_meta($post_id, "init", sanitize_text_field($_POST["init"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:196
  - STORAGE call to update_post_meta($post_id, "senses", sanitize_text_field($_POST["senses"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:237
  - STORAGE call to update_post_meta($post_id, "fort", sanitize_text_field($_POST["fort"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:238
  - STORAGE call to update_post_meta($post_id, "ref", sanitize_text_field($_POST["ref"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:239
  - STORAGE call to update_post_meta($post_id, "will", sanitize_text_field($_POST["will"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:240
  - STORAGE call to update_post_meta($post_id, "sr", sanitize_text_field($_POST["sr"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:241
  - STORAGE call to update_post_meta($post_id, "ca", sanitize_text_field($_POST["ca"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:242
  - STORAGE call to update_post_meta($post_id, "touched", sanitize_text_field($_POST["touched"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:243
  - STORAGE call to update_post_meta($post_id, "flat-footed", sanitize_text_field($_POST["flat-footed"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:244
  - STORAGE call to update_post_meta($post_id, "infoca", sanitize_text_field($_POST["infoca"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:245
  - STORAGE call to update_post_meta($post_id, "hp", sanitize_text_field($_POST["hp"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:246
  - STORAGE call to update_post_meta($post_id, "dr", sanitize_text_field($_POST["dr"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:247
  - STORAGE call to update_post_meta($post_id, "inmmune", sanitize_text_field($_POST["inmmune"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:248
  - STORAGE call to update_post_meta($post_id, "resist", sanitize_text_field($_POST["resist"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:249
  - STORAGE call to update_post_meta($post_id, "weaknesses", sanitize_text_field($_POST["weaknesses"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:300
  - STORAGE call to update_post_meta($post_id, "speed", sanitize_text_field($_POST["speed"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:301
  - STORAGE call to update_post_meta($post_id, "fly", sanitize_text_field($_POST["fly"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:302
  - STORAGE call to update_post_meta($post_id, "flytype", sanitize_text_field($_POST["flytype"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:303
  - STORAGE call to update_post_meta($post_id, "space", sanitize_text_field($_POST["space"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:304
  - STORAGE call to update_post_meta($post_id, "melee", sanitize_text_field($_POST["melee"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:305
  - STORAGE call to update_post_meta($post_id, "reach", sanitize_text_field($_POST["reach"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:306
  - STORAGE call to update_post_meta($post_id, "ranged", sanitize_text_field($_POST["ranged"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:307
  - STORAGE call to update_post_meta($post_id, "spell-like-abilities", $_POST["spell-like-abilities"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:308
  - STORAGE call to update_post_meta($post_id, "special-attacks", $_POST["special-attacks"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:350
  - STORAGE call to update_post_meta($post_id, "str", sanitize_text_field($_POST["str"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:351
  - STORAGE call to update_post_meta($post_id, "dex", sanitize_text_field($_POST["dex"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:352
  - STORAGE call to update_post_meta($post_id, "con", sanitize_text_field($_POST["con"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:353
  - STORAGE call to update_post_meta($post_id, "int", sanitize_text_field($_POST["int"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:354
  - STORAGE call to update_post_meta($post_id, "wis", sanitize_text_field($_POST["wis"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:355
  - STORAGE call to update_post_meta($post_id, "cha", sanitize_text_field($_POST["cha"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:356
  - STORAGE call to update_post_meta($post_id, "ba", sanitize_text_field($_POST["ba"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:357
  - STORAGE call to update_post_meta($post_id, "cmb", sanitize_text_field($_POST["cmb"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:358
  - STORAGE call to update_post_meta($post_id, "cmd", sanitize_text_field($_POST["cmd"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:359
  - STORAGE call to update_post_meta($post_id, "feats", sanitize_text_field($_POST["feats"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:360
  - STORAGE call to update_post_meta($post_id, "skills", sanitize_text_field($_POST["skills"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:361
  - STORAGE call to update_post_meta($post_id, "languages", sanitize_text_field($_POST["languages"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:362
  - STORAGE call to update_post_meta($post_id, "sq", sanitize_text_field($_POST["sq"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:390
  - STORAGE call to update_post_meta($post_id, "environment", sanitize_text_field($_POST["environment"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:391
  - STORAGE call to update_post_meta($post_id, "organization", sanitize_text_field($_POST["organization"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:392
  - STORAGE call to update_post_meta($post_id, "treasure", sanitize_text_field($_POST["treasure"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:417
  - STORAGE call to update_post_meta($post_id, "special-abilities", $_POST["special-abilities"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-monsters.php:588
  - STORAGE call to update_option("wp_monsters_measures", $_REQUEST["wp_monsters_measures"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wp-monsters.php:590
  - STORAGE call to update_option("wp_monsters_template_monster", $_REQUEST["template_monster"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wp-monsters.php:593
  - STORAGE call to delete_option("wp_monsters_template_monster") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-spells.php:12
  - STORAGE call to add_option("wp_spells_flush_rewrite_rules_flag", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wp-spells.php:101
  - STORAGE call to delete_option("wp_spells_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-spells.php:172
  - STORAGE call to update_post_meta($post_id, "school", sanitize_text_field($_POST["school"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-spells.php:173
  - STORAGE call to update_post_meta($post_id, "level", sanitize_text_field($_POST["level"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-spells.php:174
  - STORAGE call to update_post_meta($post_id, "castingtime", sanitize_text_field($_POST["castingtime"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-spells.php:175
  - STORAGE call to update_post_meta($post_id, "components", sanitize_text_field($_POST["components"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-spells.php:176
  - STORAGE call to update_post_meta($post_id, "range", sanitize_text_field($_POST["range"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-spells.php:177
  - STORAGE call to update_post_meta($post_id, "target", sanitize_text_field($_POST["target"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-spells.php:178
  - STORAGE call to update_post_meta($post_id, "duration", sanitize_text_field($_POST["duration"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-spells.php:179
  - STORAGE call to update_post_meta($post_id, "savingthrow", sanitize_text_field($_POST["savingthrow"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-spells.php:180
  - STORAGE call to update_post_meta($post_id, "sr", sanitize_text_field($_POST["sr"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-traps.php:12
  - STORAGE call to add_option("wp_traps_flush_rewrite_rules_flag", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wp-traps.php:104
  - STORAGE call to delete_option("wp_traps_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-traps.php:170
  - STORAGE call to update_post_meta($post_id, "cr", sanitize_text_field($_POST["cr"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-traps.php:171
  - STORAGE call to update_post_meta($post_id, "xp", sanitize_text_field($_POST["xp"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-traps.php:172
  - STORAGE call to update_post_meta($post_id, "bypass", sanitize_text_field($_POST["bypass"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-traps.php:173
  - STORAGE call to update_post_meta($post_id, "perception", sanitize_text_field($_POST["perception"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-traps.php:174
  - STORAGE call to update_post_meta($post_id, "disable", sanitize_text_field($_POST["disable"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-traps.php:223
  - STORAGE call to update_post_meta($post_id, "trigger", sanitize_text_field($_POST["trigger"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-traps.php:224
  - STORAGE call to update_post_meta($post_id, "effect", sanitize_text_field($_POST["effect"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-traps.php:225
  - STORAGE call to update_post_meta($post_id, "duration", sanitize_text_field($_POST["duration"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-traps.php:226
  - STORAGE call to update_post_meta($post_id, "reset", sanitize_text_field($_POST["reset"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-traps.php:227
  - STORAGE call to update_post_meta($post_id, "resetautomatictime", sanitize_text_field($_POST["resetautomatictime"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-weapons.php:12
  - STORAGE call to add_option("wp_weapons_flush_rewrite_rules_flag", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wp-weapons.php:103
  - STORAGE call to delete_option("wp_weapons_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-weapons.php:203
  - STORAGE call to update_post_meta($post_id, "generaltype", sanitize_text_field($_POST["generaltype"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-weapons.php:204
  - STORAGE call to update_post_meta($post_id, "subtype", sanitize_text_field($_POST["subtype"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-weapons.php:205
  - STORAGE call to update_post_meta($post_id, "cost", sanitize_text_field($_POST["cost"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-weapons.php:206
  - STORAGE call to update_post_meta($post_id, "dmgs", sanitize_text_field($_POST["dmgs"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-weapons.php:207
  - STORAGE call to update_post_meta($post_id, "dmgm", sanitize_text_field($_POST["dmgm"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-weapons.php:208
  - STORAGE call to update_post_meta($post_id, "critical", sanitize_text_field($_POST["critical"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-weapons.php:209
  - STORAGE call to update_post_meta($post_id, "range", sanitize_text_field($_POST["range"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-weapons.php:210
  - STORAGE call to update_post_meta($post_id, "weight", sanitize_text_field($_POST["weight"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-weapons.php:211
  - STORAGE call to update_post_meta($post_id, "typedamageb", $_POST["typedamageb"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-weapons.php:212
  - STORAGE call to update_post_meta($post_id, "typedamagep", $_POST["typedamagep"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-weapons.php:213
  - STORAGE call to update_post_meta($post_id, "typedamages", $_POST["typedamages"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-weapons.php:214
  - STORAGE call to update_post_meta($post_id, "special", sanitize_text_field($_POST["special"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

wp-cities.php:103
  - DELETION call to delete_option("wp_cities_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-feats.php:103
  - DELETION call to delete_option("wp_feats_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-magic-items.php:103
  - DELETION call to delete_option("wp_magic_items_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-monsters.php:123
  - DELETION call to delete_option("wp_monsters_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-monsters.php:593
  - DELETION call to delete_option("wp_monsters_template_monster") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-spells.php:101
  - DELETION call to delete_option("wp_spells_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-traps.php:104
  - DELETION call to delete_option("wp_traps_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-weapons.php:103
  - DELETION call to delete_option("wp_weapons_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
option
	WordPressRetrievalDetector.get_option("wp_traps_flush_rewrite_rules_flag") - {'option'}
	DeletionDetector.delete_option("wp_weapons_flush_rewrite_rules_flag") - {'option'}
	WordPressStorageDetector.delete_option("wp_monsters_template_monster") - {'option'}
	WordPressRetrievalDetector.get_option("wp_monsters_measures") - {'option'}
	DeletionDetector.delete_option("wp_traps_flush_rewrite_rules_flag") - {'option'}
	WordPressRetrievalDetector.get_option("wp_magic_items_flush_rewrite_rules_flag") - {'option'}
	WordPressRetrievalDetector.get_option("wp_feats_flush_rewrite_rules_flag") - {'option'}
	WordPressRetrievalDetector.get_option("wp_magic_items_flush_rewrite_rules_flag") - {'option'}
	WordPressStorageDetector.update_option("wp_monsters_template_monster", $_REQUEST["template_monster"]) - {'option'}
	WordPressRetrievalDetector.get_option("wp_weapons_flush_rewrite_rules_flag") - {'option'}
	WordPressRetrievalDetector.get_option("wp_feats_flush_rewrite_rules_flag") - {'option'}
	WordPressStorageDetector.add_option("wp_spells_flush_rewrite_rules_flag", true) - {'option'}
	DeletionDetector.delete_option("wp_cities_flush_rewrite_rules_flag") - {'option'}
	WordPressRetrievalDetector.get_option("wp_monsters_flush_rewrite_rules_flag") - {'option'}
	DeletionDetector.delete_option("wp_feats_flush_rewrite_rules_flag") - {'option'}
	WordPressRetrievalDetector.get_option("wp_cities_flush_rewrite_rules_flag") - {'option'}
	DeletionDetector.delete_option("wp_spells_flush_rewrite_rules_flag") - {'option'}
	WordPressStorageDetector.add_option("wp_weapons_flush_rewrite_rules_flag", true) - {'option'}
	DeletionDetector.delete_option("wp_monsters_template_monster") - {'option'}
	WordPressStorageDetector.delete_option("wp_spells_flush_rewrite_rules_flag") - {'option'}
	WordPressStorageDetector.add_option("wp_traps_flush_rewrite_rules_flag", true) - {'option'}
	WordPressRetrievalDetector.get_option("wp_monsters_measures") - {'option'}
	DeletionDetector.delete_option("wp_magic_items_flush_rewrite_rules_flag") - {'option'}
	DeletionDetector.delete_option("wp_monsters_flush_rewrite_rules_flag") - {'option'}
	WordPressRetrievalDetector.get_option("wp_monsters_flush_rewrite_rules_flag") - {'option'}
	WordPressRetrievalDetector.get_option("wp_monsters_measures") - {'option'}
	WordPressStorageDetector.delete_option("wp_feats_flush_rewrite_rules_flag") - {'option'}
	WordPressStorageDetector.update_option("wp_monsters_measures", $_REQUEST["wp_monsters_measures"]) - {'option'}
	WordPressRetrievalDetector.get_option("wp_monsters_template_monster") - {'option'}
	WordPressStorageDetector.delete_option("wp_traps_flush_rewrite_rules_flag") - {'option'}
	WordPressStorageDetector.add_option("wp_feats_flush_rewrite_rules_flag", true) - {'option'}
	WordPressRetrievalDetector.get_option("wp_cities_flush_rewrite_rules_flag") - {'option'}
	WordPressStorageDetector.delete_option("wp_weapons_flush_rewrite_rules_flag") - {'option'}
	WordPressStorageDetector.add_option("wp_magic_items_flush_rewrite_rules_flag", true) - {'option'}
	WordPressRetrievalDetector.get_option("wp_monsters_template_monster") - {'option'}
	WordPressStorageDetector.delete_option("wp_monsters_flush_rewrite_rules_flag") - {'option'}
	WordPressStorageDetector.delete_option("wp_cities_flush_rewrite_rules_flag") - {'option'}
	WordPressStorageDetector.add_option("wp_cities_flush_rewrite_rules_flag", true) - {'option'}
	WordPressStorageDetector.delete_option("wp_magic_items_flush_rewrite_rules_flag") - {'option'}
	WordPressRetrievalDetector.get_option("wp_traps_flush_rewrite_rules_flag") - {'option'}
	WordPressRetrievalDetector.get_option("wp_spells_flush_rewrite_rules_flag") - {'option'}
	WordPressRetrievalDetector.get_option("wp_monsters_measures") - {'option'}
	WordPressRetrievalDetector.get_option("wp_weapons_flush_rewrite_rules_flag") - {'option'}
	WordPressStorageDetector.add_option("wp_monsters_flush_rewrite_rules_flag", true) - {'option'}
	WordPressRetrievalDetector.get_option("wp_spells_flush_rewrite_rules_flag") - {'option'}
post
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
post_meta
	WordPressRetrievalDetector.get_post_meta($post->ID, "constructionrequirements", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "ca", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "inmmune", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "infoca", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "speed", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "castingtime", sanitize_text_field($_POST["castingtime"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "xp", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "population", sanitize_text_field($_POST["population"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "environment", sanitize_text_field($_POST["environment"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "goverment", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "range", sanitize_text_field($_POST["range"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "typedamageb", $_POST["typedamageb"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "reach", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "touched", sanitize_text_field($_POST["touched"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "sr", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "resist", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "cr", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "aura", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $code, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "flat-footed", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "purchaselimit", sanitize_text_field($_POST["purchaselimit"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "society", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "duration", sanitize_text_field($_POST["duration"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "subtype", sanitize_text_field($_POST["subtype"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "reach", sanitize_text_field($_POST["reach"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $code, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "skills", sanitize_text_field($_POST["skills"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "weight", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "typedamages", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "duration", sanitize_text_field($_POST["duration"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "basevalue", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "typedamagep", $_POST["typedamagep"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "minoritems", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "melee", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "sq", sanitize_text_field($_POST["sq"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "fly", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "cr", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "sr", sanitize_text_field($_POST["sr"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "danger", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "str", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "ba", sanitize_text_field($_POST["ba"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "sr", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "mayoritems", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "normal", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $code, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "touched", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "dex", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "typedamagep", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "goverment", sanitize_text_field($_POST["goverment"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "languages", sanitize_text_field($_POST["languages"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "typedamageb", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "purchaselimit", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "flytype", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "mediumitems", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "xp", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "qualities", sanitize_text_field($_POST["qualities"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "typedamages", $_POST["typedamages"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "hp", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "cl", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "special", sanitize_text_field($_POST["special"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "ba", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "ranged", sanitize_text_field($_POST["ranged"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "sr", sanitize_text_field($_POST["sr"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "will", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "con", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "mayoritems", sanitize_text_field($_POST["mayoritems"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "level", sanitize_text_field($_POST["level"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "int", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "will", sanitize_text_field($_POST["will"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "dr", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "cmd", sanitize_text_field($_POST["cmd"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "population", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "organization", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "alignment", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "bypass", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "init", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $code, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "range", sanitize_text_field($_POST["range"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "economy", sanitize_text_field($_POST["economy"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "components", sanitize_text_field($_POST["components"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "ref", sanitize_text_field($_POST["ref"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "ca", sanitize_text_field($_POST["ca"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "constructioncost", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "cost", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "range", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "savingthrow", sanitize_text_field($_POST["savingthrow"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "weaknesses", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "law", sanitize_text_field($_POST["law"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "space", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "qualities", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "mediumitems", sanitize_text_field($_POST["mediumitems"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "cost", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "flat-footed", sanitize_text_field($_POST["flat-footed"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "spellcasting", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "prerequisites", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "lore", sanitize_text_field($_POST["lore"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "perception", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "prerequisites", sanitize_text_field($_POST["prerequisites"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "target", sanitize_text_field($_POST["target"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "size", sanitize_text_field($_POST["size"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "dmgm", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $code, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "critical", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "cl", sanitize_text_field($_POST["cl"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "feats", sanitize_text_field($_POST["feats"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "dmgs", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "cmd", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "environment", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "cost", sanitize_text_field($_POST["cost"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "space", sanitize_text_field($_POST["space"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "cmb", sanitize_text_field($_POST["cmb"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "weight", sanitize_text_field($_POST["weight"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "type", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "resetautomatictime", sanitize_text_field($_POST["resetautomatictime"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "cmb", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "slot", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "spell-like-abilities", $_POST["spell-like-abilities"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "special-attacks", $_POST["special-attacks"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.update_post_meta($post_id, "cha", sanitize_text_field($_POST["cha"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "components", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "special-abilities", $_POST["special-abilities"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "cr", sanitize_text_field($_POST["cr"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "cha", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "range", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "alignment", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "treasure", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "fort", sanitize_text_field($_POST["fort"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "senses", sanitize_text_field($_POST["senses"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "generaltype", sanitize_text_field($_POST["generaltype"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "law", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "cost", sanitize_text_field($_POST["cost"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "hp", sanitize_text_field($_POST["hp"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "cr", sanitize_text_field($_POST["cr"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "trigger", sanitize_text_field($_POST["trigger"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "size", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "resist", sanitize_text_field($_POST["resist"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.update_post_meta($post_id, "inmmune", sanitize_text_field($_POST["inmmune"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "type", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "duration", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "xp", sanitize_text_field($_POST["xp"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "flytype", sanitize_text_field($_POST["flytype"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "type", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "duration", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "generaltype", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "lore", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "organization", sanitize_text_field($_POST["organization"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "spell-like-abilities", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "weaknesses", sanitize_text_field($_POST["weaknesses"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "speed", sanitize_text_field($_POST["speed"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "reset", sanitize_text_field($_POST["reset"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "basevalue", sanitize_text_field($_POST["basevalue"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "aura", sanitize_text_field($_POST["aura"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "weight", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "alignment", sanitize_text_field($_POST["alignment"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "castingtime", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "str", sanitize_text_field($_POST["str"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "skills", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "treasure", sanitize_text_field($_POST["treasure"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "dmgm", sanitize_text_field($_POST["dmgm"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "size", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "infoca", sanitize_text_field($_POST["infoca"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "disable", sanitize_text_field($_POST["disable"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "normal", sanitize_text_field($_POST["normal"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "special-attacks", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "effect", sanitize_text_field($_POST["effect"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "languages", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "dex", sanitize_text_field($_POST["dex"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "size", sanitize_text_field($_POST["size"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "corruption", sanitize_text_field($_POST["corruption"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "type", sanitize_text_field($_POST["type"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "economy", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "constructioncost", sanitize_text_field($_POST["constructioncost"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "school", sanitize_text_field($_POST["school"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "special-abilities", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "alignment", sanitize_text_field($_POST["alignment"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "critical", sanitize_text_field($_POST["critical"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "crime", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "level", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "target", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.update_post_meta($post_id, "danger", sanitize_text_field($_POST["danger"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "society", sanitize_text_field($_POST["society"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $code, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "xp", sanitize_text_field($_POST["xp"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "ranged", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "special", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "savingthrow", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "constructionrequirements", sanitize_text_field($_POST["constructionrequirements"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "trigger", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "melee", sanitize_text_field($_POST["melee"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "disable", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "senses", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "resetautomatictime", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "effect", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "school", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.update_post_meta($post_id, "slot", sanitize_text_field($_POST["slot"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "dr", sanitize_text_field($_POST["dr"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "fly", sanitize_text_field($_POST["fly"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "corruption", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "ref", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "init", sanitize_text_field($_POST["init"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $code, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "con", sanitize_text_field($_POST["con"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "spellcasting", sanitize_text_field($_POST["spellcasting"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "subtype", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "crime", sanitize_text_field($_POST["crime"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "int", sanitize_text_field($_POST["int"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "reset", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "bypass", sanitize_text_field($_POST["bypass"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "minoritems", sanitize_text_field($_POST["minoritems"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "weight", sanitize_text_field($_POST["weight"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "dmgs", sanitize_text_field($_POST["dmgs"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "fort", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "feats", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "wis", sanitize_text_field($_POST["wis"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "perception", sanitize_text_field($_POST["perception"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "sq", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "wis", true) - {'post_meta'}
wp_post
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($atts["id"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:39.195315.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 13548 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:01.766584.

1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
3000 STORE_REACHES edges created
4000 STORE_REACHES edges created
5000 STORE_REACHES edges created
6000 STORE_REACHES edges created
7000 STORE_REACHES edges created
8000 STORE_REACHES edges created
9000 STORE_REACHES edges created
10000 STORE_REACHES edges created
11000 STORE_REACHES edges created
12000 STORE_REACHES edges created
13000 STORE_REACHES edges created
13548 STORE_REACHES edges created
13548 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.008833.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:45.063154!
DELETION call to delete_option("wp_cities_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("wp_feats_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("wp_magic_items_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("wp_monsters_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("wp_monsters_template_monster") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("wp_spells_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("wp_traps_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("wp_weapons_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
RETRIEVAL call to get_option("wp_monsters_template_monster") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_cities_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_cities_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "alignment", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "size", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "corruption", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "crime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "economy", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "law", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "lore", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "society", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "qualities", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "danger", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "goverment", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "population", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "basevalue", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "purchaselimit", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "spellcasting", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "minoritems", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "mediumitems", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "mayoritems", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($atts["id"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, $code, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("wp_feats_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_feats_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "prerequisites", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "normal", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($atts["id"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, $code, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("wp_magic_items_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_magic_items_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "cost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "slot", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "weight", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "cl", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "aura", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "constructioncost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "constructionrequirements", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($atts["id"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, $code, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("wp_monsters_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "alignment", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "size", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "cr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "xp", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "init", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "senses", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "fort", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "ref", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "will", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "sr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "ca", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "touched", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "flat-footed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "infoca", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "hp", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "dr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "inmmune", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "resist", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "weaknesses", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_monsters_measures") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "speed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "fly", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "flytype", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "melee", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "space", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "reach", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "ranged", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "special-attacks", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "spell-like-abilities", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_monsters_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "str", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "dex", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "con", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "int", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "wis", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "cha", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "ba", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "cmb", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "cmd", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "feats", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "skills", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "languages", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "sq", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "environment", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "organization", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "treasure", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "special-abilities", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($atts["id"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, $code, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_monsters_measures") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_monsters_template_monster") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_monsters_measures") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_monsters_measures") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_spells_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "school", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "level", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "castingtime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "components", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "range", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "target", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "duration", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "savingthrow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "sr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($atts["id"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, $code, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("wp_spells_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_traps_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_traps_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "cr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "xp", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "bypass", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "perception", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "disable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "trigger", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "duration", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "reset", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "resetautomatictime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "effect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($atts["id"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, $code, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("wp_weapons_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_weapons_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "generaltype", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "subtype", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "cost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "dmgs", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "dmgm", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "critical", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "range", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "weight", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "typedamageb", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "typedamagep", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "typedamages", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "special", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($atts["id"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, $code, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
STORAGE call to delete_option("wp_cities_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to add_option("wp_cities_flush_rewrite_rules_flag", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "alignment", sanitize_text_field($_POST["alignment"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "size", sanitize_text_field($_POST["size"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "corruption", sanitize_text_field($_POST["corruption"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "crime", sanitize_text_field($_POST["crime"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "economy", sanitize_text_field($_POST["economy"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "law", sanitize_text_field($_POST["law"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "lore", sanitize_text_field($_POST["lore"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "society", sanitize_text_field($_POST["society"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "qualities", sanitize_text_field($_POST["qualities"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "danger", sanitize_text_field($_POST["danger"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "goverment", sanitize_text_field($_POST["goverment"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "population", sanitize_text_field($_POST["population"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "basevalue", sanitize_text_field($_POST["basevalue"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "purchaselimit", sanitize_text_field($_POST["purchaselimit"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "spellcasting", sanitize_text_field($_POST["spellcasting"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "minoritems", sanitize_text_field($_POST["minoritems"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "mediumitems", sanitize_text_field($_POST["mediumitems"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "mayoritems", sanitize_text_field($_POST["mayoritems"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_option("wp_feats_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to add_option("wp_feats_flush_rewrite_rules_flag", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "prerequisites", sanitize_text_field($_POST["prerequisites"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "normal", sanitize_text_field($_POST["normal"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_option("wp_magic_items_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to add_option("wp_magic_items_flush_rewrite_rules_flag", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "cost", sanitize_text_field($_POST["cost"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "weight", sanitize_text_field($_POST["weight"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "slot", sanitize_text_field($_POST["slot"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "cl", sanitize_text_field($_POST["cl"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "aura", sanitize_text_field($_POST["aura"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "constructioncost", sanitize_text_field($_POST["constructioncost"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "constructionrequirements", sanitize_text_field($_POST["constructionrequirements"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_option("wp_monsters_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "type", sanitize_text_field($_POST["type"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "alignment", sanitize_text_field($_POST["alignment"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "size", sanitize_text_field($_POST["size"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "cr", sanitize_text_field($_POST["cr"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "xp", sanitize_text_field($_POST["xp"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "init", sanitize_text_field($_POST["init"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "senses", sanitize_text_field($_POST["senses"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "fort", sanitize_text_field($_POST["fort"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "ref", sanitize_text_field($_POST["ref"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "will", sanitize_text_field($_POST["will"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "sr", sanitize_text_field($_POST["sr"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "ca", sanitize_text_field($_POST["ca"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "touched", sanitize_text_field($_POST["touched"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "flat-footed", sanitize_text_field($_POST["flat-footed"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "infoca", sanitize_text_field($_POST["infoca"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "hp", sanitize_text_field($_POST["hp"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "dr", sanitize_text_field($_POST["dr"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "inmmune", sanitize_text_field($_POST["inmmune"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "resist", sanitize_text_field($_POST["resist"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "weaknesses", sanitize_text_field($_POST["weaknesses"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "speed", sanitize_text_field($_POST["speed"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "fly", sanitize_text_field($_POST["fly"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "flytype", sanitize_text_field($_POST["flytype"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "space", sanitize_text_field($_POST["space"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "melee", sanitize_text_field($_POST["melee"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "reach", sanitize_text_field($_POST["reach"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "ranged", sanitize_text_field($_POST["ranged"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "spell-like-abilities", $_POST["spell-like-abilities"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "special-attacks", $_POST["special-attacks"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_option("wp_monsters_flush_rewrite_rules_flag", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "str", sanitize_text_field($_POST["str"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "dex", sanitize_text_field($_POST["dex"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "con", sanitize_text_field($_POST["con"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "int", sanitize_text_field($_POST["int"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "wis", sanitize_text_field($_POST["wis"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "cha", sanitize_text_field($_POST["cha"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "ba", sanitize_text_field($_POST["ba"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "cmb", sanitize_text_field($_POST["cmb"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "cmd", sanitize_text_field($_POST["cmd"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "feats", sanitize_text_field($_POST["feats"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "skills", sanitize_text_field($_POST["skills"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "languages", sanitize_text_field($_POST["languages"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "sq", sanitize_text_field($_POST["sq"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "environment", sanitize_text_field($_POST["environment"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "organization", sanitize_text_field($_POST["organization"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "treasure", sanitize_text_field($_POST["treasure"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "special-abilities", $_POST["special-abilities"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("wp_monsters_measures", $_REQUEST["wp_monsters_measures"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wp_monsters_template_monster", $_REQUEST["template_monster"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("wp_monsters_template_monster") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("wp_spells_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to add_option("wp_spells_flush_rewrite_rules_flag", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "school", sanitize_text_field($_POST["school"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "level", sanitize_text_field($_POST["level"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "castingtime", sanitize_text_field($_POST["castingtime"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "components", sanitize_text_field($_POST["components"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "range", sanitize_text_field($_POST["range"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "target", sanitize_text_field($_POST["target"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "duration", sanitize_text_field($_POST["duration"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "savingthrow", sanitize_text_field($_POST["savingthrow"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "sr", sanitize_text_field($_POST["sr"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_option("wp_traps_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to add_option("wp_traps_flush_rewrite_rules_flag", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "cr", sanitize_text_field($_POST["cr"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "xp", sanitize_text_field($_POST["xp"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "bypass", sanitize_text_field($_POST["bypass"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "perception", sanitize_text_field($_POST["perception"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "disable", sanitize_text_field($_POST["disable"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "trigger", sanitize_text_field($_POST["trigger"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "effect", sanitize_text_field($_POST["effect"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "duration", sanitize_text_field($_POST["duration"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "reset", sanitize_text_field($_POST["reset"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "resetautomatictime", sanitize_text_field($_POST["resetautomatictime"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_option("wp_weapons_flush_rewrite_rules_flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to add_option("wp_weapons_flush_rewrite_rules_flag", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "generaltype", sanitize_text_field($_POST["generaltype"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "subtype", sanitize_text_field($_POST["subtype"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "cost", sanitize_text_field($_POST["cost"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "dmgs", sanitize_text_field($_POST["dmgs"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "dmgm", sanitize_text_field($_POST["dmgm"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "critical", sanitize_text_field($_POST["critical"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "range", sanitize_text_field($_POST["range"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "weight", sanitize_text_field($_POST["weight"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "typedamageb", $_POST["typedamageb"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "typedamagep", $_POST["typedamagep"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "typedamages", $_POST["typedamages"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "special", sanitize_text_field($_POST["special"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
