Timeout in resolving values
Timeout in running neo4j query
Running Main.py on smart-watermark

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.571058.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.090120.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 421 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:01.548494.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 2 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.686270.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1478 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.280592.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 87 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.812713.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.081652.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 634 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:10.327142.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 11447
Added 8825 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 11707
Added 260 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.966086.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/smart-watermark.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/includes/class-wp-image-editor-gd.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/includes/class-wp-image-editor-imagick.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/includes/class-wp-image-editor.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SmartWatermark/ImageEditor.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SmartWatermark/SmartWatermark.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SmartWatermark/Page/Admin/Bulk.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SmartWatermark/Page/Admin/Settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SmartWatermark/Page/Admin/Tabs.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SmartWatermark/View/Renderer/Form/Position.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SmartWatermarkPro/SmartWatermarkPro.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SmartWatermarkPro/Page/Admin/Restore.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SmartWatermarkPro/View/Element/Metabox/Media.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/SWL.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Action/Action.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Action/Ajax.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Action/Manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Alert/Alert.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Alert/Manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Alert/Renderer/Alert.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Filter/Filter.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Filter/Manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Boolean.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Checkbox.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Color.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Container.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Fieldset.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Hidden.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Multi.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Radiochoice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Radio.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Select.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Submit.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Textarea.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Text.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Renderer/Boolean.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Renderer/Checkbox.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Renderer/Color.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Renderer/Fieldset.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Renderer/Hidden.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Renderer/Radiochoice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Renderer/Radio.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Renderer/Renderer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Renderer/Select.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Renderer/Submit.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Renderer/Textarea.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Element/Renderer/Text.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Form/Renderer/Form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Menu/Admin/Item.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Menu/Admin/Menu.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Metabox/Metabox.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Metabox/Renderer/Metabox.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Page/Admin/Page.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Page/Admin/Settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Page/Admin/Tabs.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Plugin/Plugin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Post/Metabox.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/Post/Post.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Decorator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Element.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Renderable.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Renderer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Decorator/Tag.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Element/Container.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Element/Form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Element/Metabox.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Element/Form/Boolean.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Element/Form/CheckboxMulti.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Element/Form/Checkbox.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Element/Form/Element.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Element/Form/Image.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Element/Form/RadioMulti.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Element/Form/Radio.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Element/Form/Select.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Element/Form/Submit.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Element/Form/Text.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Renderer/Container.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Renderer/Form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Renderer/Form/Boolean.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Renderer/Form/CheckboxMulti.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Renderer/Form/Checkbox.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Renderer/Form/Element.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Renderer/Form/Image.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Renderer/Form/RadioMulti.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Renderer/Form/Radio.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smart-watermark/library/SWL/View/Renderer/Form/Select.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:08.243655.

421 PHP_REACHES edges created
2 REACHES edges created
1000 PHP_REACHES edges created
1478 PHP_REACHES edges created
87 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
9459 PHP_REACHES edges created
260 PHP_REACHES edges created
11707 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 4380 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.421898.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 31 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:07.791560.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 462 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:16.866895.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 172 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.193301.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:04.060043.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:09.672450.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.056892.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.030549.

31 CALLS edges created
634 PHP_REACHES edges created
665 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 704 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.150266.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.215582.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<input type="hidden" name="$this_id_meta_box_nonce" value="wp_create_nonce(basename())" /'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this_page'' cannot be parsed correct.
HTML code '$'$tabName'' cannot be parsed correct.
HTML code '$' nav-tab-active'' cannot be parsed correct.
HTML code '$'$tab->getTitle()'' cannot be parsed correct.
HTML code '$'$this->renderer->render()'' cannot be parsed correct.
HTML code '$'$this->renderer->render()'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'plugins_url("assets/default/images/watermark.jpg?" . time(), SMARTWATERMARK_PATH . "/dummy")'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$tabName'' cannot be parsed correct.
HTML code '$' nav-tab-active'' cannot be parsed correct.
HTML code '$'$tab->getTitle()'' cannot be parsed correct.
HTML code '$'<div id="message" class="error"><p>$error->get_error_message()</p></div>'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:02.991467.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.043203.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 17 do_action/apply_filters calls and 5 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.741288.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ArrayElementDetector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PasswordHashingDetector
### Start running PHPIncludedDetector
### Finish running PHPDataObjectDetector
### Start running PHPRetrievalDetector
### Finish running HashDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running OpenSSLDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running maxdbDetector
### Start running SqliteDetector
### Finish running MySQLiDetector
### Start running SqlServerDetector
### Finish running PropertyDetector
### Start running SybaseDetector
### Finish running PHPStorageDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running SqliteDetector
### Start running VariableDetector
### Finish running SybaseDetector
### Start running WordpressHashingFnDetector
### Finish running TokyoTyrantDetector
### Start running WordPressRemoteDetector
### Finish running PHPRetrievalDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running SqlServerDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running UserInputDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
includes/class-wp-image-editor-gd.php:91
  - RETRIEVAL call to file_get_contents($this->file).
  - Data types: file
library/SmartWatermark/ImageEditor.php:46
  - RETRIEVAL call to file_get_contents($this->file, false, $context).
  - Data types: file 

includes/class-wp-image-editor.php:367
  - STORAGE call to fwrite($fp, $contents).
  - Data types: file 

library/SWL/Page/Admin/Settings.php:67
  - RETRIEVAL call to get_option($name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
library/SWL/Page/Admin/Settings.php:117
  - RETRIEVAL call to get_option($name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
library/SWL/Plugin/Plugin.php:39
  - RETRIEVAL call to get_option($optionBaseName . "_installed", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SWL/Plugin/Plugin.php:42
  - RETRIEVAL call to get_option($optionBaseName . "_installed", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SWL/Plugin/Plugin.php:43
  - RETRIEVAL call to get_option($optionBaseName . "_installed", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SWL/Post/Metabox.php:91
  - RETRIEVAL call to get_post_meta($post->ID, $field->getName(), true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
library/SmartWatermark/SmartWatermark.php:68
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
library/SmartWatermark/SmartWatermark.php:101
  - RETRIEVAL call to get_option("smartwatermark_images", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:106
  - RETRIEVAL call to get_option("smartwatermark_images", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:120
  - RETRIEVAL call to get_option("smartwatermark_watermark", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:129
  - RETRIEVAL call to get_option("smartwatermark_watermark", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:140
  - RETRIEVAL call to get_option("smartwatermark_image_min_width", 300) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:141
  - RETRIEVAL call to get_option("smartwatermark_image_min_height", 300) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:163
  - RETRIEVAL call to get_option("smartwatermark_position", "bottom-right") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:203
  - RETRIEVAL call to get_option("smartwatermark_offset_left", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:204
  - RETRIEVAL call to get_option("smartwatermark_offset_top", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:256
  - RETRIEVAL call to get_option("position", "bottom-right") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:257
  - RETRIEVAL call to get_option("offset_top", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:258
  - RETRIEVAL call to get_option("offset_left", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:259
  - RETRIEVAL call to get_option("image_min_width", 300) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:260
  - RETRIEVAL call to get_option("image_min_height", 300) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:261
  - RETRIEVAL call to get_option("images", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:262
  - RETRIEVAL call to get_option("watermark", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermarkPro/SmartWatermarkPro.php:49
  - RETRIEVAL call to get_option("smartwatermark_image_formats", ["jpg", "jpeg", "gif", "png"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermarkPro/SmartWatermarkPro.php:61
  - RETRIEVAL call to get_post_meta($attachmentId, "smartwatermark_position", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
library/SmartWatermarkPro/SmartWatermarkPro.php:67
  - RETRIEVAL call to get_post_meta($attachmentId, "smartwatermark_offset_left", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
library/SmartWatermarkPro/SmartWatermarkPro.php:73
  - RETRIEVAL call to get_post_meta($attachmentId, "smartwatermark_offset_top", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
library/SmartWatermarkPro/SmartWatermarkPro.php:152
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
library/SmartWatermarkPro/View/Element/Metabox/Media.php:17
  - RETRIEVAL call to get_post_meta($post->ID, "smartwatermark_add_watermark", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
library/SmartWatermarkPro/View/Element/Metabox/Media.php:32
  - RETRIEVAL call to get_post_meta($post->ID, "smartwatermark_position", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
library/SmartWatermarkPro/View/Element/Metabox/Media.php:33
  - RETRIEVAL call to get_option("smartwatermark_position", "bottom-right") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermarkPro/View/Element/Metabox/Media.php:37
  - RETRIEVAL call to get_post_meta($post->ID, "smartwatermark_offset_top", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
library/SmartWatermarkPro/View/Element/Metabox/Media.php:38
  - RETRIEVAL call to get_option("smartwatermark_offset_top", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
library/SmartWatermarkPro/View/Element/Metabox/Media.php:39
  - RETRIEVAL call to get_post_meta($post->ID, "smartwatermark_offset_left", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
library/SmartWatermarkPro/View/Element/Metabox/Media.php:40
  - RETRIEVAL call to get_option("smartwatermark_offset_left", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option 

library/SWL/Page/Admin/Settings.php:68
  - STORAGE call to add_option($name, $defValue) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
library/SWL/Page/Admin/Settings.php:91
  - STORAGE call to update_option($name, $_POST[$name]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
library/SWL/Plugin/Plugin.php:44
  - STORAGE call to update_option($optionBaseName . "_installed", $this->version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
library/SWL/Plugin/Plugin.php:71
  - STORAGE call to add_option($optionBaseName . "_installed", $this->version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
library/SWL/Post/Metabox.php:75
  - STORAGE call to delete_post_meta($postId, $field->getName()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
library/SWL/Post/Metabox.php:76
  - STORAGE call to add_post_meta($postId, $field->getName(), $_POST[$field->getName()], true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: post_meta
library/SmartWatermark/SmartWatermark.php:256
  - STORAGE call to add_option("smartwatermark_position", get_option("position", "bottom-right")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:257
  - STORAGE call to add_option("smartwatermark_offset_top", get_option("offset_top", 0)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:258
  - STORAGE call to add_option("smartwatermark_offset_left", get_option("offset_left", 0)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:259
  - STORAGE call to add_option("smartwatermark_image_min_width", get_option("image_min_width", 300)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:260
  - STORAGE call to add_option("smartwatermark_image_min_height", get_option("image_min_height", 300)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:261
  - STORAGE call to add_option("smartwatermark_images", get_option("images", [])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:262
  - STORAGE call to add_option("smartwatermark_watermark", get_option("watermark", "")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:263
  - STORAGE call to delete_option("position") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:264
  - STORAGE call to delete_option("offset_top") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:265
  - STORAGE call to delete_option("offset_left") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:266
  - STORAGE call to delete_option("image_min_width") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:267
  - STORAGE call to delete_option("image_min_height") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:268
  - STORAGE call to delete_option("images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:269
  - STORAGE call to delete_option("watermark") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
library/SmartWatermarkPro/SmartWatermarkPro.php:85
  - STORAGE call to delete_post_meta($postId, "smartwatermark_add_watermark") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
library/SmartWatermarkPro/SmartWatermarkPro.php:86
  - STORAGE call to add_post_meta($postId, "smartwatermark_add_watermark", sanitize_text_field($addWatermark), true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: post_meta
library/SmartWatermarkPro/SmartWatermarkPro.php:87
  - STORAGE call to delete_post_meta($postId, "smartwatermark_position") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
library/SmartWatermarkPro/SmartWatermarkPro.php:88
  - STORAGE call to add_post_meta($postId, "smartwatermark_position", sanitize_text_field($_POST["smartwatermark_position"]), true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: post_meta
library/SmartWatermarkPro/SmartWatermarkPro.php:89
  - STORAGE call to delete_post_meta($postId, "smartwatermark_offset_top") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
library/SmartWatermarkPro/SmartWatermarkPro.php:90
  - STORAGE call to add_post_meta($postId, "smartwatermark_offset_top", sanitize_text_field($_POST["smartwatermark_offset_top"]), true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: post_meta
library/SmartWatermarkPro/SmartWatermarkPro.php:91
  - STORAGE call to delete_post_meta($postId, "smartwatermark_offset_left") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
library/SmartWatermarkPro/SmartWatermarkPro.php:92
  - STORAGE call to add_post_meta($postId, "smartwatermark_offset_left", sanitize_text_field($_POST["smartwatermark_offset_left"]), true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: post_meta 

library/SWL/Post/Metabox.php:75
  - DELETION call to delete_post_meta($postId, $field->getName()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
library/SmartWatermark/SmartWatermark.php:263
  - DELETION call to delete_option("position") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:264
  - DELETION call to delete_option("offset_top") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:265
  - DELETION call to delete_option("offset_left") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:266
  - DELETION call to delete_option("image_min_width") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:267
  - DELETION call to delete_option("image_min_height") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:268
  - DELETION call to delete_option("images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
library/SmartWatermark/SmartWatermark.php:269
  - DELETION call to delete_option("watermark") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
library/SmartWatermarkPro/SmartWatermarkPro.php:85
  - DELETION call to delete_post_meta($postId, "smartwatermark_add_watermark") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
library/SmartWatermarkPro/SmartWatermarkPro.php:87
  - DELETION call to delete_post_meta($postId, "smartwatermark_position") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
library/SmartWatermarkPro/SmartWatermarkPro.php:89
  - DELETION call to delete_post_meta($postId, "smartwatermark_offset_top") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
library/SmartWatermarkPro/SmartWatermarkPro.php:91
  - DELETION call to delete_post_meta($postId, "smartwatermark_offset_left") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta 

By data type:
file
	PHPStorageDetector.fwrite($fp, $contents) - {'file'}
	PHPRetrievalDetector.file_get_contents($this->file, false, $context) - {'file'}
	PHPRetrievalDetector.file_get_contents($this->file) - {'file'}
none
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
option
	WordPressRetrievalDetector.get_option("smartwatermark_image_formats", ["jpg", "jpeg", "gif", "png"]) - {'option'}
	DeletionDetector.delete_option("offset_left") - {'option'}
	WordPressRetrievalDetector.get_option("offset_top", 0) - {'option'}
	WordPressRetrievalDetector.get_option("smartwatermark_offset_left", 0) - {'option'}
	DeletionDetector.delete_option("image_min_width") - {'option'}
	WordPressRetrievalDetector.get_option("smartwatermark_offset_top", 0) - {'option'}
	WordPressRetrievalDetector.get_option("smartwatermark_images", []) - {'option'}
	WordPressStorageDetector.add_option("smartwatermark_image_min_width", get_option("image_min_width", 300)) - {'option'}
	WordPressRetrievalDetector.get_option("smartwatermark_watermark", "") - {'option'}
	DeletionDetector.delete_option("offset_top") - {'option'}
	WordPressRetrievalDetector.get_option("smartwatermark_position", "bottom-right") - {'option'}
	WordPressRetrievalDetector.get_option("position", "bottom-right") - {'option'}
	WordPressStorageDetector.add_option("smartwatermark_images", get_option("images", [])) - {'option'}
	DeletionDetector.delete_option("watermark") - {'option'}
	WordPressStorageDetector.add_option("smartwatermark_offset_left", get_option("offset_left", 0)) - {'option'}
	WordPressRetrievalDetector.get_option("smartwatermark_watermark", "") - {'option'}
	WordPressRetrievalDetector.get_option("smartwatermark_position", "bottom-right") - {'option'}
	WordPressStorageDetector.add_option($optionBaseName . "_installed", $this->version) - {'option'}
	WordPressRetrievalDetector.get_option("smartwatermark_image_min_height", 300) - {'option'}
	WordPressStorageDetector.update_option($optionBaseName . "_installed", $this->version) - {'option'}
	WordPressStorageDetector.add_option("smartwatermark_image_min_height", get_option("image_min_height", 300)) - {'option'}
	WordPressStorageDetector.update_option($name, $_POST[$name]) - {'option'}
	WordPressStorageDetector.add_option($name, $defValue) - {'option'}
	DeletionDetector.delete_option("images") - {'option'}
	WordPressStorageDetector.add_option("smartwatermark_position", get_option("position", "bottom-right")) - {'option'}
	DeletionDetector.delete_option("image_min_height") - {'option'}
	WordPressStorageDetector.delete_option("offset_left") - {'option'}
	WordPressRetrievalDetector.get_option("image_min_height", 300) - {'option'}
	WordPressStorageDetector.add_option("smartwatermark_offset_top", get_option("offset_top", 0)) - {'option'}
	WordPressStorageDetector.delete_option("watermark") - {'option'}
	WordPressRetrievalDetector.get_option("smartwatermark_offset_left", 0) - {'option'}
	WordPressRetrievalDetector.get_option($optionBaseName . "_installed", false) - {'option'}
	WordPressRetrievalDetector.get_option("images", []) - {'option'}
	WordPressStorageDetector.delete_option("position") - {'option'}
	WordPressRetrievalDetector.get_option("smartwatermark_images", []) - {'option'}
	WordPressRetrievalDetector.get_option($optionBaseName . "_installed", false) - {'option'}
	WordPressRetrievalDetector.get_option("smartwatermark_image_min_width", 300) - {'option'}
	WordPressRetrievalDetector.get_option("image_min_width", 300) - {'option'}
	WordPressRetrievalDetector.get_option("watermark", "") - {'option'}
	WordPressRetrievalDetector.get_option($optionBaseName . "_installed", false) - {'option'}
	WordPressRetrievalDetector.get_option("offset_left", 0) - {'option'}
	WordPressStorageDetector.delete_option("images") - {'option'}
	WordPressStorageDetector.delete_option("offset_top") - {'option'}
	WordPressRetrievalDetector.get_option("smartwatermark_offset_top", 0) - {'option'}
	WordPressStorageDetector.delete_option("image_min_height") - {'option'}
	WordPressRetrievalDetector.get_option($name) - {'option'}
	WordPressStorageDetector.add_option("smartwatermark_watermark", get_option("watermark", "")) - {'option'}
	WordPressRetrievalDetector.get_option($name) - {'option'}
	WordPressStorageDetector.delete_option("image_min_width") - {'option'}
	DeletionDetector.delete_option("position") - {'option'}
post_meta
	WordPressStorageDetector.delete_post_meta($postId, $field->getName()) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($postId, $field->getName(), $_POST[$field->getName()], true) - {'post_meta'}
	DeletionDetector.delete_post_meta($postId, "smartwatermark_add_watermark") - {'post_meta'}
	WordPressStorageDetector.add_post_meta($postId, "smartwatermark_offset_top", sanitize_text_field($_POST["smartwatermark_offset_top"]), true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "smartwatermark_position", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($attachmentId, "smartwatermark_position", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($attachmentId, "smartwatermark_offset_left", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "smartwatermark_add_watermark", true) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($postId, "smartwatermark_position", sanitize_text_field($_POST["smartwatermark_position"]), true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postId, "smartwatermark_offset_top") - {'post_meta'}
	DeletionDetector.delete_post_meta($postId, $field->getName()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($attachmentId, "smartwatermark_offset_top", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postId, "smartwatermark_position") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "smartwatermark_offset_left", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($postId, "smartwatermark_offset_top") - {'post_meta'}
	DeletionDetector.delete_post_meta($postId, "smartwatermark_position") - {'post_meta'}
	WordPressStorageDetector.add_post_meta($postId, "smartwatermark_add_watermark", sanitize_text_field($addWatermark), true) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($postId, "smartwatermark_offset_left", sanitize_text_field($_POST["smartwatermark_offset_left"]), true) - {'post_meta'}
	DeletionDetector.delete_post_meta($postId, "smartwatermark_offset_left") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postId, "smartwatermark_offset_left") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "smartwatermark_offset_top", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postId, "smartwatermark_add_watermark") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $field->getName(), true) - {'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:15.094418.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 532 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.395499.

532 STORE_REACHES edges created
532 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.006366.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:54.600254!
DELETION call to delete_post_meta($postId, $field->getName()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_option("position") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("offset_top") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("offset_left") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("image_min_width") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("image_min_height") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("watermark") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_post_meta($postId, "smartwatermark_add_watermark") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($postId, "smartwatermark_position") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($postId, "smartwatermark_offset_top") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($postId, "smartwatermark_offset_left") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
RETRIEVAL call to file_get_contents($this->file).,None,None
RETRIEVAL call to file_get_contents($this->file, false, $context).,None,None
STORAGE call to fwrite($fp, $contents).,None,None
RETRIEVAL call to get_option($name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($optionBaseName . "_installed", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($optionBaseName . "_installed", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($optionBaseName . "_installed", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, $field->getName(), true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartwatermark_images", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartwatermark_images", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartwatermark_watermark", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartwatermark_watermark", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartwatermark_image_min_width", 300) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartwatermark_image_min_height", 300) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartwatermark_position", "bottom-right") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartwatermark_offset_left", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartwatermark_offset_top", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("position", "bottom-right") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("offset_top", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("offset_left", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("image_min_width", 300) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("image_min_height", 300) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("images", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("watermark", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("smartwatermark_image_formats", ["jpg", "jpeg", "gif", "png"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($attachmentId, "smartwatermark_position", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($attachmentId, "smartwatermark_offset_left", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($attachmentId, "smartwatermark_offset_top", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "smartwatermark_add_watermark", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "smartwatermark_position", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartwatermark_position", "bottom-right") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "smartwatermark_offset_top", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartwatermark_offset_top", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "smartwatermark_offset_left", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartwatermark_offset_left", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
STORAGE call to add_option($name, $defValue) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($name, $_POST[$name]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($optionBaseName . "_installed", $this->version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option($optionBaseName . "_installed", $this->version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_post_meta($postId, $field->getName()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_post_meta($postId, $field->getName(), $_POST[$field->getName()], true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to add_option("smartwatermark_position", get_option("position", "bottom-right")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("smartwatermark_offset_top", get_option("offset_top", 0)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("smartwatermark_offset_left", get_option("offset_left", 0)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("smartwatermark_image_min_width", get_option("image_min_width", 300)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("smartwatermark_image_min_height", get_option("image_min_height", 300)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("smartwatermark_images", get_option("images", [])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("smartwatermark_watermark", get_option("watermark", "")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("position") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("offset_top") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("offset_left") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("image_min_width") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("image_min_height") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("watermark") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($postId, "smartwatermark_add_watermark") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_post_meta($postId, "smartwatermark_add_watermark", sanitize_text_field($addWatermark), true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to delete_post_meta($postId, "smartwatermark_position") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_post_meta($postId, "smartwatermark_position", sanitize_text_field($_POST["smartwatermark_position"]), true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to delete_post_meta($postId, "smartwatermark_offset_top") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_post_meta($postId, "smartwatermark_offset_top", sanitize_text_field($_POST["smartwatermark_offset_top"]), true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to delete_post_meta($postId, "smartwatermark_offset_left") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_post_meta($postId, "smartwatermark_offset_left", sanitize_text_field($_POST["smartwatermark_offset_left"]), true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
