Timeout in resolving values
Timeout in running neo4j query
Running Main.py on xili-dictionary

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:02.629934.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.924813.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 713 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:01.226901.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 3 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.886936.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 6050 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:02.792470.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.599992.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.090325.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 2400 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:01:37.489932.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 36470
Added 27304 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 79231
Added 42761 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:06.309596.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/xili-dictionary/xili-dictionary.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/xili-dictionary/includes/class-extractor.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/xili-dictionary/includes/pot-ext-meta.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/xili-dictionary/includes/extract/extract-wp.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/xili-dictionary/xili-css/index.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.470405.

713 PHP_REACHES edges created
3 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
35754 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
36000 PHP_REACHES edges created
37000 PHP_REACHES edges created
38000 PHP_REACHES edges created
39000 PHP_REACHES edges created
40000 PHP_REACHES edges created
41000 PHP_REACHES edges created
42000 PHP_REACHES edges created
42761 PHP_REACHES edges created
79231 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 11826 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.986725.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 22 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:20.419152.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 569 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:14.965652.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 520 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.187547.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:07.519649.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:06.458145.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.058851.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.030478.

22 CALLS edges created
1000 PHP_REACHES edges created
1089 PHP_REACHES edges created
1111 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 951 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.181434.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
8 SQL operations to process.
SELECT ID, post_content FROM $wpdb WHERE post_type = 'XDMSG' 
SELECT ID, post_content FROM $wpdb WHERE post_type = 'XDMSG' 
SQL command (SELECT ID, post_content FROM $wpdb WHERE post_type = 'XDMSG' ) cannot be parsed correct.
SELECT name, slug FROM $wpdb WHERE term_id = term_exists($term)
SELECT name, slug FROM $wpdb WHERE term_id = term_exists($term)
SQL command (SELECT name, slug FROM $wpdb WHERE term_id = term_exists($term)) cannot be parsed correct.
SELECT ID FROM $wpdb
					INNER JOIN $wpdb as mt1 ON ($wpdb.ID = mt1.post_id)
					WHERE BINARY post_content = get_term($id, $taxonomy)
					AND post_type = %s AND mt1.meta_key= '$this_ctxt_meta'
					AND mt1.meta_value = %s 
SELECT ID FROM $wpdb
					INNER JOIN $wpdb as mt1 ON ($wpdb.ID = mt1.post_id)
					WHERE BINARY post_content = get_term($id, $taxonomy)
					AND post_type = XDMSG AND mt1.meta_key= '$this_ctxt_meta'
					AND mt1.meta_value = %s 
SELECT ID FROM $wpdb
					INNER JOIN $wpdb as mt1 ON ($wpdb.ID = mt1.post_id)
					WHERE BINARY post_content = get_term($id, $taxonomy)
				$_POST_add_ctxtND post_type = XDMSG AND mt1.meta_key= '$this_ctxt_meta'
					AND mt1.meta_value = %s 
SELECT ID FROM $wpdb
					INNER JOIN $wpdb as mt1 ON ($wpdb.ID = mt1.post_id)
					WHERE BINARY post_content = get_term($id, $taxonomy)
				$_POST_add_ctxtND post_type = XDMSG AND mt1.meta_key= '$this_ctxt_meta'
					AND mt1.meta_value = %s 
SQL command (SELECT ID FROM $wpdb INNER JOIN $wpdb as mt1 ON ($wpdb.ID = mt1.post_id) WHERE BINARY post_content = get_term($id, $taxonomy) $_POST_add_ctxtND post_type = XDMSG AND mt1.meta_key= '$this_ctxt_meta' AND mt1.meta_value = %s ) cannot be parsed correct.
SELECT ID FROM $wpdb
				INNER JOIN $wpdb as mt1 ON ($wpdb.ID = mt1.post_id)
				WHERE BINARY post_content =  AND post_type = %s
				AND mt1.meta_key='$this_msgidlang_meta' AND mt1.meta_value = %s 
SELECT ID FROM $wpdb
				INNER JOIN $wpdb as mt1 ON ($wpdb.ID = mt1.post_id)
				WHERE BINARY post_content =  AND post_type = XDMSG
				AND mt1.meta_key='$this_msgidlang_meta' AND mt1.meta_value = %s 
SELECT$this->msgid_exists($pomsgstr->singular, $pomsgstr->context)_0ID FROM $wpdb
				INNER JOIN $wpdb as mt1 ON ($wpdb.ID = mt1.post_id)
				WHERE BINARY post_content =  AND post_type = XDMSG
				AND mt1.meta_key='$this_msgidlang_meta' AND mt1.meta_value = %s 
SELECT$this->msgid_exists($pomsgstr->singular, $pomsgstr->context)_0ID FROM $wpdb
				INNER JOIN $wpdb as mt1 ON ($wpdb.ID = mt1.post_id)
				WHERE BINARY post_content =  AND post_type = XDMSG
				AND mt1.meta_key='$this_msgidlang_meta' AND mt1.meta_value = %s 
SQL command (SELECT$this->msgid_exists($pomsgstr->singular, $pomsgstr->context)_0ID FROM $wpdb INNER JOIN $wpdb as mt1 ON ($wpdb.ID = mt1.post_id) WHERE BINARY post_content = AND post_type = XDMSG AND mt1.meta_key='$this_msgidlang_meta' AND mt1.meta_value = %s ) cannot be parsed correct.
SELECT * FROM $wpdb WHERE ID = 0 LIMIT 1
SELECT * FROM $wpdb WHERE ID = 0 LIMIT 1
SQL command (SELECT * FROM $wpdb WHERE ID = 0 LIMIT 1) cannot be parsed correct.
SELECT t.*, tt2.term_taxonomy_id, tt2.description,tt2.parent, tt2.count, tt2.taxonomy, tr.term_order FROM $wpdb AS tr INNER JOIN $wpdb AS tt ON tr.term_taxonomy_id = tt.term_taxonomy_id INNER JOIN $wpdb AS t ON t.term_id = tr.object_id INNER JOIN $wpdb AS tt2 ON tt2.term_id = tr.object_id WHERE tt.taxonomy IN ('$taxonomy') AND tt2.taxonomy = '$taxonomy_child' AND tt.term_id IN (implode(", ", $group_ids))  ORDER BY tr.term_order $order
SQL command (SELECT t.*, tt2.term_taxonomy_id, tt2.description,tt2.parent, tt2.count, tt2.taxonomy, tr.term_order FROM $wpdb AS tr INNER JOIN $wpdb AS tt ON tr.term_taxonomy_id = tt.term_taxonomy_id INNER JOIN $wpdb AS t ON t.term_id = tr.object_id INNER JOIN $wpdb AS tt2 ON tt2.term_id = tr.object_id WHERE tt.taxonomy IN ('$taxonomy') AND tt2.taxonomy = '$taxonomy_child' AND tt.term_id IN (implode(", ", $group_ids)) ORDER BY tr.term_order $order) cannot be parsed correct.
sprintf("SELECT "$wpdb->posts".ID
			FROM "$wpdb->posts"
			WHERE "$wpdb->posts".post_type = \'%s\'
			AND "$wpdb->posts".ID NOT IN
			( SELECT DISTINCT post_id FROM "$wpdb->postmeta" WHERE meta_key = \'%s\' )
			ORDER BY "$wpdb->posts".ID ASC", XDMSG, $this->msglang_meta)
SQL command (sprintf("SELECT "$wpdb->posts".ID FROM "$wpdb->posts" WHERE "$wpdb->posts".post_type = \'%s\' AND "$wpdb->posts".ID NOT IN ( SELECT DISTINCT post_id FROM "$wpdb->postmeta" WHERE meta_key = \'%s\' ) ORDER BY "$wpdb->posts".ID ASC", XDMSG, $this->msglang_meta)) cannot be parsed correct.
gzip get_template_directory()$this_parentlangfolder$this->theme_domain().pot
SQL command (gzip get_template_directory()$this_parentlangfolder$this->theme_domain().pot) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [3881, 6907, 10722, 10814, 20136, 40382, 40463, 45495]
Added 0 SQL nodes. 0 out of 8 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:04.346266.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'tr.lang-$language th, div#msg-states-comments a.lang-$language { background: transparent url($xili_language/xili-css/flags/$language.png) no-repeat 60% center; }
'' cannot be parsed correct.
HTML code '$'</style>
'' cannot be parsed correct.
HTML code '$'<!---- xd css tags ----->
'' cannot be parsed correct.
HTML code '$'<style type="text/css" media="screen">
'' cannot be parsed correct.
HTML code '$'.displaybbt { margin: 10px 0 0 200px !important }
'' cannot be parsed correct.
HTML code '$'.displaybbt a:link { text-decoration:none; }
'' cannot be parsed correct.
HTML code '$'.taxinmos { border:1px solid #999; width:500px; padding: 10px 20px }
'' cannot be parsed correct.
HTML code '$'.taxinmoslist { border-bottom:1px solid #eee; padding: 5px 0; margin-bottom: 5px; }
'' cannot be parsed correct.
HTML code '$'</style>
'' cannot be parsed correct.
HTML code '$'<!---- xd css ----->
'' cannot be parsed correct.
HTML code '$'<style type="text/css" media="screen">
'' cannot be parsed correct.
HTML code '$'mark { background-color:#e0e0e0;}
'' cannot be parsed correct.
HTML code '$'.alert { color:red;}
'' cannot be parsed correct.
HTML code '$'.column-language, .column-msgposttype { width: 80px; }
'' cannot be parsed correct.
HTML code '$'.column-date { width: 80px !important; }
'' cannot be parsed correct.
HTML code '$'.column-msgcontent { width: auto; }
'' cannot be parsed correct.
HTML code '$'.column-msgpostmeta { width: 150px; }
'' cannot be parsed correct.
HTML code '$'.column-msgposttype { width: 150px; }
'' cannot be parsed correct.
HTML code '$'.column-author { width: 80px !important; }
'' cannot be parsed correct.
HTML code '$'.column-title { width: 160px !important; }
'' cannot be parsed correct.
HTML code '$'.column-date { width: 100px !important; }
'' cannot be parsed correct.
HTML code '$'#icon-edit.icon32-posts-xdmsg { background:transparent url(plugins_url("images/XD-full-logo-32.png", )) no-repeat !important ; }
'' cannot be parsed correct.
HTML code '$'</style>
'' cannot be parsed correct.
HTML code '$'<!---- xd css ----->
'' cannot be parsed correct.
HTML code '$'<style type="text/css" media="screen">
'' cannot be parsed correct.
HTML code '$'.metabox-content { background:transparent;}
'' cannot be parsed correct.
HTML code '$'.dialoglang { float:left; width:18%; border:0px solid grey; margin: 5px; }
'' cannot be parsed correct.
HTML code '$'.dialogfile { float:left; width:42%; min-height:80px; border-left:1px solid #ddd; padding: 10px 5px 10px 5px; } 
'' cannot be parsed correct.
HTML code '$'.dialogorigin { float:left; width:32%; border-left:1px solid #ddd; padding: 10px 5px 10px 10px; min-height:180px} 
'' cannot be parsed correct.
HTML code '$'#xd-file-state p {font-size:10px; margin-left:20%;}
'' cannot be parsed correct.
HTML code '$'#xd-file-exists {font-size:11px; margin-left: 20%; padding-top:5px;}
'' cannot be parsed correct.
HTML code '$'.dialogbbt {clear:left; text-align:right; padding:12px 2px 5px; }
'' cannot be parsed correct.
HTML code '$'table.checktheme { width:95%; margin-left:10px;}
'' cannot be parsed correct.
HTML code '$'<h3>sprintf(_x("%s", "form", "xili-dictionary"), $type)</h3>'' cannot be parsed correct.
HTML code '$'<p>Reference<br />'' cannot be parsed correct.
HTML code '$'<em>This text (msgid) is the Reference and must modified <strong>ONLY IF</strong> you are sure that it will be the same as in source code or text.</em><br />'' cannot be parsed correct.
HTML code '$'<em>sprintf(__("To create or edit translations (msgstr), see %s in the table of box %s.", "xili-dictionary"), "<a style="background:yellow;" href="#msg_state" >" . __("links", "xili-dictionary") . "</a>", "</em>" . sprintf(__("msg %s", "xili-dictionary"), $singular_name))</p>'' cannot be parsed correct.
HTML code '$'<h3>sprintf(_x("%s", "form", "xili-dictionary"), $type)</h3>'' cannot be parsed correct.
HTML code '$'<h3>sprintf(_x("msgstr[%d]", "form", "xili-dictionary"), $indice)</h3>'' cannot be parsed correct.
HTML code '$'<p><em>sprintf(__("Translation%s", "xili-dictionary"), $plural)</em></p>'' cannot be parsed correct.
HTML code '$'table.checktheme>tr>td { width:45% }
'' cannot be parsed correct.
HTML code '$'mark { background-color:#e0e0e0;}
'' cannot be parsed correct.
HTML code '$'.dialogcontainer { margin-top:14px !important; padding:12px 10px; overflow:hidden; background:#f0f0f0;}
'' cannot be parsed correct.
HTML code '$'.action-button {text-decoration:none; text-align:center; display:block; width:70%; margin:0px 1px 1px 30px; padding:4px 3px; -moz-border-radius: 3px; -webkit-border-radius: 3px;}
'' cannot be parsed correct.
HTML code '$'.small-action-button {text-decoration:none; text-align:center; display:inline-block; width:16%; margin:0px 1px 1px 10px; padding:4px 3px; -moz-border-radius: 3px; -webkit-border-radius: 3px; border:1px #ccc solid;}
'' cannot be parsed correct.
HTML code '$'.blue-button {border:1px #33f solid;}
'' cannot be parsed correct.
HTML code '$'.grey-button {border:1px #ccc solid;}
'' cannot be parsed correct.
HTML code '$'</style>
'' cannot be parsed correct.
HTML code '$'<!---- xd css ----->
'' cannot be parsed correct.
HTML code '$'<style type="text/css" media="screen">
'' cannot be parsed correct.
HTML code '$'form#xd-looping-settings > p { width:600px; padding:10px 20px 10px 0; font-size:110%; }
'' cannot be parsed correct.
HTML code '$'.sub-field {border:1px #ccc solid; width:600px; padding:10px 20px ; margin:5px 0;}
'' cannot be parsed correct.
HTML code '$'.link-back > a { border:1px #ccc solid; width:80px; padding:4px 10px ; border-radius: 3px; margin-right:4px;}
'' cannot be parsed correct.
HTML code '$'.xd-looping-updated{ width:870px !important; }
'' cannot be parsed correct.
HTML code '$'#xd-file-state p {font-size:10px;}
'' cannot be parsed correct.
HTML code '$'</style>
'' cannot be parsed correct.
HTML code '$'<!---- xd css ----->
'' cannot be parsed correct.
HTML code '$'<style type="text/css" media="screen">
'' cannot be parsed correct.
HTML code '$'#msg-states { width:69%; float:left; border:0px solid red; padding-bottom: 10px;}
'' cannot be parsed correct.
HTML code '$'#msg-states-comments { width:27%; margin-left: 70%; border-left:0px #666 solid; padding:10px 10px 0; }
'' cannot be parsed correct.
HTML code '$'#msg-states-actions { background:#ffffff; clear:left; padding: 8px 5px; margin-top:5px; }
'' cannot be parsed correct.
HTML code '$'.xdversion { font-size:80%; text-align:right; }
'' cannot be parsed correct.
HTML code '$'.msg-states-actions-left { float:left; padding: 8px 0px; overflow:hidden; width:50% }
'' cannot be parsed correct.
HTML code '$'.msg-states-actions-right { float:left; padding: 8px 0px; width:50% }
'' cannot be parsed correct.
HTML code '$'.alert { color:red;}
'' cannot be parsed correct.
HTML code '$'.editing { color:blue; background:yellow;}
'' cannot be parsed correct.
HTML code '$'.msgidstyle { line-height:200% !important; font-size:105%; padding:4px 10px 6px;}
'' cannot be parsed correct.
HTML code '$'.msgstrstyle { line-height:180% !important; font-size:105%; }
'' cannot be parsed correct.
HTML code '$'.msg-saved { background:#ffffff !important; border:1px dotted #999; padding:5px; margin-bottom:5px;}
'' cannot be parsed correct.
HTML code '$'.column-msgtrans {width: 20%;}
'' cannot be parsed correct.
HTML code '$'mark { background-color:#e0e0e0;}
'' cannot be parsed correct.
HTML code '$'.action-button {text-decoration:none; text-align:center; display:block; width:70%; margin:0px 1px 1px 30px; padding:4px 3px; -moz-border-radius: 3px; -webkit-border-radius: 3px;}
'' cannot be parsed correct.
HTML code '$'.blue-button {border:1px #33f solid;}
'' cannot be parsed correct.
HTML code '$'.grey-button {border:1px #ccc solid;}
'' cannot be parsed correct.
HTML code '$'</style>
'' cannot be parsed correct.
HTML code '$'<!---- xd css flags ----->
'' cannot be parsed correct.
HTML code '$'<style type="text/css" media="screen">
'' cannot be parsed correct.
HTML code '$'div#msg-states tr[class|="lang"] th>span {display:inline-block; }
'' cannot be parsed correct.
HTML code '$'div#msg-states-comments a[class|="lang"] {display:inline-block; text-indent:-9999px; width:20px; }
'' cannot be parsed correct.
HTML code '$'<p>sprintf(__("This msg translation is in %1$s (%2$s)", "xili-dictionary"), $lang->description, $lang->name)</p>'' cannot be parsed correct.
HTML code '$'<h4>Updating shortcuts</h4>'' cannot be parsed correct.
HTML code '$'<p>sprintf("<a class="action-button blue-button" onClick="verifybefore(1)" href="%2$s" >" . __("Update", "xili-dictionary") . " local-%3$s.mo</a>", "#", "#", $lang->name)</p>'' cannot be parsed correct.
HTML code '$'<p class="action-button grey-button">sprintf(__("No local translated msgid to be saved in %s", "xili-dictionary"), " local-" . $lang->name . ".mo")</p>'' cannot be parsed correct.
HTML code '$'<p>sprintf(__("It is possible to update the .mo files of current theme %s", "xili-dictionary"), "<strong>" . $cur_theme_name . "</strong>")</p>'' cannot be parsed correct.
HTML code '$'<p><em>Before to use this button, it is very important that you verify that your term list is quite achieved inside the dictionary. It is because the original .mo delivered with theme is updated (erased) !!!</em></p>'' cannot be parsed correct.
HTML code '$'<p>sprintf("<a class="action-button grey-button" onClick="verifybefore(0)" href="%1$s" >" . __("Update", "xili-dictionary") . " %3$s.mo</a>", "#", "#", $lang->name)</p>'' cannot be parsed correct.
HTML code '$'<p class="action-button grey-button">sprintf(__("No translated msgid to be saved in %s", "xili-dictionary"), $lang->name . ".mo")</p>'' cannot be parsed correct.
HTML code '$'<small>$this_msg_action_message</small>'' cannot be parsed correct.
HTML code '$'<p>Links are available if a translation (msgstr) is edited.</p>'' cannot be parsed correct.
HTML code '$'XILIDICTIONARY_VER'' cannot be parsed correct.
HTML code '$'str_replace("amp;", "", $link_theme_mo)'' cannot be parsed correct.
HTML code '$'str_replace("amp;", "", $link_local_mo)'' cannot be parsed correct.
HTML code '$'$args_swidth2'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this->msg_status_comments($post_ID)_link<br />'' cannot be parsed correct.
HTML code '$'Come from: implode(" ", $names)<br />'' cannot be parsed correct.
HTML code '$'get_post_meta($post_ID, $this->msgtype_meta, true) <em>$post</em> saved in <br />sprintf(__("theme folder %s", "xili-dictionary"), $res[0]) (theme local-$this->is_saved_cpt_in_theme(htmlspecialchars_decode($post->post_content), $type, $context)_2)'' cannot be parsed correct.
HTML code '$'sprintf("<br /><small>" . __("Plugin ( %s ):", "xili-dictionary"), $this->get_plugin_name($plugin_path))</small> implode(" - ", $plugin_res)<br />'' cannot be parsed correct.
HTML code '$'XILIDICTIONARY_VER'' cannot be parsed correct.
HTML code '$'$this_xd_settings_page'' cannot be parsed correct.
HTML code '$'$this_xd_settings_page&amp;orderby=name$_POST_tagsgroup_parent_select'' cannot be parsed correct.
HTML code '$'htmlspecialchars($post->post_content)'' cannot be parsed correct.
HTML code '$'<br /><br /><small>( No writer found )</small>'' cannot be parsed correct.
HTML code '$'<br /><br />( <small>wp_get_post_terms($id, "writer", ["fields" => "names"])sprintf(__(": %s", "xili-dictionary"), implode($writers, ", "))</small> )'' cannot be parsed correct.
HTML code '$'$this->cur_lang($id)_name'' cannot be parsed correct.
HTML code '$'<option value=$language"$selected >$language</option>'' cannot be parsed correct.
HTML code '$'$taxonomy'' cannot be parsed correct.
HTML code '$'wp_create_nonce("upload-xili-dictionary-" . $taxonomy)'' cannot be parsed correct.
HTML code '$'<p><em>sprintf(__("Message : %s", "xili-dictionary"), $result)</em></p>'' cannot be parsed correct.
HTML code '$'<p><strong>sprintf(__("%3$s terms of %1$s were just imported, <a href="%2$s">display those terms</a> in msg list of xili-dictionary.", "xili-dictionary"), $taxonomy_obj->labels->name, "edit.php?post_type=" . XDMSG . "&amp;only_" . XDMSG . "=" . implode(",", $quantities[3]), $quantities[0] + $quantities[1])</strong></p>'' cannot be parsed correct.
HTML code '$'<p><strong>sprintf(__("All %1$s terms are checked , <a href="%2$s">display those terms</a> in xili-dictionary.", "xili-dictionary"), $taxonomy_obj->labels->name, "edit.php?post_type=" . XDMSG . "&amp;only_" . XDMSG . "=" . implode(",", $quantities[2]))</strong></p>'' cannot be parsed correct.
HTML code '$'<p style="text-align:right">sprintf(__("<a href="%2$s">Refresh</a> %3$s column of %1$s table.", "xili-dictionary"), $taxonomy_obj->labels->name, admin_url() . "edit-tags.php?taxonomy=" . $taxonomy, __("Language", "xili-dictionary"))</p></div>'' cannot be parsed correct.
HTML code '$'$taxonomy'' cannot be parsed correct.
HTML code '$'\'admin_url()edit.php?post_type=XDMSG&only_XDMSG=implode(",", $this->tax_msgid_list)\''' cannot be parsed correct.
HTML code '$'<p>sprintf(__("In the term listed below, %d items are displayed (each has a name and a description) :", "xili-dictionary"), count($this->taxlist))&nbsp;'' cannot be parsed correct.
HTML code '$'</p><p>sprintf(__("None of these %d terms are available in the msgid list of xili-dictionary. Click button above to populate dictionary before you will translate.", "xili-dictionary"), count($this->taxlist))</p>'' cannot be parsed correct.
HTML code '$'<fieldset class="taxinmos" ><legend><em>Name</em> = </legend>'' cannot be parsed correct.
HTML code '$'$this->is_msg_saved_in_localmos($tag->name, "msgid", "", "single")_0'' cannot be parsed correct.
HTML code '$'</fieldset><br /><fieldset class="taxinmos" ><legend><em>Description</em> = </legend>'' cannot be parsed correct.
HTML code '$'$this->is_msg_saved_in_localmos($tag->description, "msgid", "", "single")_0'' cannot be parsed correct.
HTML code '$'get_post_meta($id, $this->msg_translator_comments, true)'' cannot be parsed correct.
HTML code '$'<p><strong>sprintf(__("Return to <a href="%s" title="Go to msg list">msg list</a>", "xili-dictionary"), $this->xd_settings_page)</strong> </p>'' cannot be parsed correct.
HTML code '$'<p><strong>sprintf(__("Return to <a href="%s" title="Go to msg list">msg list</a>", "xili-dictionary"), $this->xd_settings_page)</strong></p>'' cannot be parsed correct.
HTML code '$'\'admin_url()post.php?post=$msgstr_post_ID&action=edit\''' cannot be parsed correct.
HTML code '$'\'admin_url()post.php?post=$this->insert_one_cpt_and_meta(__("XD say id to plural: ", "xili-dictionary") . $temp_post_msg_id->post_content, null, "msgid_plural", $msgid_id)&action=edit\''' cannot be parsed correct.
HTML code '$'get_post_meta($target_id, $this->ctxt_meta, true)'' cannot be parsed correct.
HTML code '$'&nbsp;<em>sprintf(__("After saving this msgid as draft,%s it will be possible to add a context", "xili-dictionary"), "<br />")</em>'' cannot be parsed correct.
HTML code '$'<tr class="langstrtolower($curlang)" ><th><span'' cannot be parsed correct.
HTML code '$'<span class="alert">'' cannot be parsed correct.
HTML code '$'</span>'' cannot be parsed correct.
HTML code '$'<span class="alert">'' cannot be parsed correct.
HTML code '$'</span>'' cannot be parsed correct.
HTML code '$'<span class="alert">'' cannot be parsed correct.
HTML code '$'<tr class="langstrtolower($tolang->name)" ><th><span'' cannot be parsed correct.
HTML code '$'<tr class="langstrtolower($tolang->name)" ><th><span'' cannot be parsed correct.
HTML code '$'</span>'' cannot be parsed correct.
HTML code '$'<strong>htmlspecialchars($temp_post->post_content)</strong> '' cannot be parsed correct.
HTML code '$'<span class="editing msgidstyle"></span>'' cannot be parsed correct.
HTML code '$'<span class="msgidstyle"></span>'' cannot be parsed correct.
HTML code '$'<span class="editing msgstrstyle"></span>'' cannot be parsed correct.
HTML code '$'<span class="msgstrstyle"></span>'' cannot be parsed correct.
HTML code '$'<strong>htmlspecialchars($temp_post->post_content)</strong>'' cannot be parsed correct.
HTML code '$'<span class="alert">'' cannot be parsed correct.
HTML code '$'</span>'' cannot be parsed correct.
HTML code '$'<span class="alert">'' cannot be parsed correct.
HTML code '$'</span>'' cannot be parsed correct.
HTML code '$'translated in:<br />'' cannot be parsed correct.
HTML code '$'<span class="alert">'' cannot be parsed correct.
HTML code '$'</span>'' cannot be parsed correct.
HTML code '$'<span class="alert">'' cannot be parsed correct.
HTML code '$'</span>'' cannot be parsed correct.
HTML code '$'<span class="alert">'' cannot be parsed correct.
HTML code '$'</span>'' cannot be parsed correct.
HTML code '$'<span class="alert">'' cannot be parsed correct.
HTML code '$'</span>'' cannot be parsed correct.
HTML code '$'<strong>implode(" ", wp_get_object_terms($id, TAXONAME, $args["fields" => "names"]))</strong> translation of: <strong>htmlspecialchars($temp_post->post_content)</strong> '' cannot be parsed correct.
HTML code '$'<span class="alert">'' cannot be parsed correct.
HTML code '$'</span>'' cannot be parsed correct.
HTML code '$'$this_xd_settings_page'' cannot be parsed correct.
HTML code '$'$this_xd_settings_page&amp;orderby=name$_POST_tagsgroup_parent_select'' cannot be parsed correct.
HTML code '$'<p><em>sprintf(__("Before importing terms, verify that the %1$strash%2$s is empty !", "xili-dictionary"), "<a href="edit.php?post_type" . XDMSG . """, "</a>")</em></p>'' cannot be parsed correct.
HTML code '$'<option value=$reflanguage"'' cannot be parsed correct.
HTML code '$'selected($default_lang, $reflanguage->name, false) >$reflanguage</option>'' cannot be parsed correct.
HTML code '$'<option value="pot-file" >Build a .pot file</option>'' cannot be parsed correct.
HTML code '$'<p><em>xili-language-ms is active !</em></p>'' cannot be parsed correct.
HTML code '$'<p>xili-language plugin is not present !</p>'' cannot be parsed correct.
HTML code '$'<p>xili-language plugin is not activated !</p><br />'' cannot be parsed correct.
HTML code '$'Theme\'s informations: ($this->get_option_theme_full_name(true))'' cannot be parsed correct.
HTML code '$'Languages sub-folder: $this_xili_settings_langs_folder'' cannot be parsed correct.
HTML code '$'<p>There is no style for dashboard ($this_style_message )</p>'' cannot be parsed correct.
HTML code '$'<p>$this_style_message</p>'' cannot be parsed correct.
HTML code '$'wp_nonce_url($url, "xdsetstyle")'' cannot be parsed correct.
HTML code '$'<option value="" >sprintf(__("Build and save %s file", "xili-dictionary"), $filetype)'' cannot be parsed correct.
HTML code '$'<option value="local" selected="selected" >sprintf(__("Save only the local-xx_XX.%s sub-selection", "xili-dictionary"), $filetype)'' cannot be parsed correct.
HTML code '$'<option value="wolocal" >sprintf(__("Save %s w/o local msgs", "xili-dictionary"), $filetype)'' cannot be parsed correct.
HTML code '$'<option value="currenttheme" >sprintf(__("Sub-folder (%1$s) in current theme (%2$s)", "xili-dictionary"), $this->langfolder, $cur_theme_name)</option>'' cannot be parsed correct.
HTML code '$'<option value="parenttheme" >sprintf(__("Languages sub-folder (%1$s) in parent theme ( %2$s )", "xili-dictionary"), $this->parentlangfolder, get_option("template"))</option>'' cannot be parsed correct.
HTML code '$'<option value="contentlanguages" >Themes sub-folder in wp-content/languages (WP_LANG_DIR)</option>'' cannot be parsed correct.
HTML code '$'Check Origin(s) to be exported:<br /></tr></table>'' cannot be parsed correct.
HTML code '$'$cancel_text'' cannot be parsed correct.
HTML code '$'$submit_text'' cannot be parsed correct.
HTML code '$'var potfile = the_theme_domain()"'' cannot be parsed correct.
HTML code '$'var potfile = $this->get_option_theme_name()"'' cannot be parsed correct.
HTML code '$'var curthemename = $this->get_option_theme_name()"'' cannot be parsed correct.
HTML code '$'var parentthemename = get_option("template")"'' cannot be parsed correct.
HTML code '$'$selecttaxonomycategory'' cannot be parsed correct.
HTML code '$'sprintf(__("This domain named %s has %d active entries.", "xili-dictionary"), "<strong>" . $domain . "</strong>", count($po->entries))</br>'' cannot be parsed correct.
HTML code '$'sprintf(__("No entry in %s (or .mo file badly built).", "xili-dictionary"), "<strong>" . $domain . "</strong>")</br>'' cannot be parsed correct.
HTML code '$'<option value=$one_domain" $one_domain</option>'' cannot be parsed correct.
HTML code '$'Domain : get_option("xd_test_importation", "")'' cannot be parsed correct.
HTML code '$'$cancel_text'' cannot be parsed correct.
HTML code '$'$submit_text'' cannot be parsed correct.
HTML code '$'var potfile = the_theme_domain()"'' cannot be parsed correct.
HTML code '$'var potfile = $this->get_option_theme_name()"'' cannot be parsed correct.
HTML code '$'var curthemename = $this->get_option_theme_name()"'' cannot be parsed correct.
HTML code '$'var parentthemename = get_option("template")"'' cannot be parsed correct.
HTML code '$'esc_js($submit_text)'' cannot be parsed correct.
HTML code '$'<option value="msgid" $_POST_tagsgroup_parent_select >Only MsgID (en_US)</option>'' cannot be parsed correct.
HTML code '$'<option value="msgstr" $_POST_tagsgroup_parent_select >Only Msgstr</option>'' cannot be parsed correct.
HTML code '$'<option value="msgstr_0" $_POST_tagsgroup_parent_select >Only Msgstr plural</option>'' cannot be parsed correct.
HTML code '$'$this->build_grouplist()'' cannot be parsed correct.
HTML code '$'$this->build_grouplist("nottransin_")'' cannot be parsed correct.
HTML code '$'$this->build_grouplist("")'' cannot be parsed correct.
HTML code '$'<option value="">Chooseâ¦</option>'' cannot be parsed correct.
HTML code '$'<option value=$key">$value ($key)</option>'' cannot be parsed correct.
HTML code '$'<p style="border-left:3px #00e000 solid; padding:5px 10px; background-color:#ffffff;">Now, all the blog and core terms are imported:$this_import_message.</p>'' cannot be parsed correct.
HTML code '$'<p><em>This box is used for input dialog, leave it opened and visibleâ¦</em></p></div></div>'' cannot be parsed correct.
HTML code '$'$this_xd_settings_page&amp;action=export'' cannot be parsed correct.
HTML code '$'XDMSG'' cannot be parsed correct.
HTML code '$'$default_lang_get'' cannot be parsed correct.
HTML code '$'XDMSG'' cannot be parsed correct.
HTML code '$'$default_lang_get'' cannot be parsed correct.
HTML code '$'$this_xd_settings_page&amp;action=exportpo'' cannot be parsed correct.
HTML code '$'XDMSG'' cannot be parsed correct.
HTML code '$'$this_xd_settings_page&amp;action=importtaxonomy'' cannot be parsed correct.
HTML code '$'$this_xd_settings_page&amp;action=importbloginfos'' cannot be parsed correct.
HTML code '$'XDMSG'' cannot be parsed correct.
HTML code '$'XDMSG'' cannot be parsed correct.
HTML code '$'$this_xd_settings_page&amp;action=importpluginmsgs'' cannot be parsed correct.
HTML code '$'$tagsnamesearch'' cannot be parsed correct.
HTML code '$'$themessages_4'' cannot be parsed correct.
HTML code '$'$this_xd_settings_page'' cannot be parsed correct.
HTML code '$'reset'' cannot be parsed correct.
HTML code '$'class="metabox-holder columns-2"'' cannot be parsed correct.
HTML code '$'postbox-container-1'' cannot be parsed correct.
HTML code '$'postbox-container'' cannot be parsed correct.
HTML code '$'id="postbox-container-2"'' cannot be parsed correct.
HTML code '$'class="postbox-container"'' cannot be parsed correct.
HTML code '$'plugins_url("images/XD-full-logo-32.png", )'' cannot be parsed correct.
HTML code '$'XILIDICTIONARY_VER'' cannot be parsed correct.
HTML code '$'<tr id=\'cat-$dictioline\'>
				<td scope=\'row\' style=\'text-align: center\'>$dictioline</td>

				<td>htmlspecialchars($dictioline->post_content)</td>

				<td>'' cannot be parsed correct.
HTML code '$'</td>
				<td class=\'center\'>$this->is_saved_cpt_in_theme($dictioline->post_content, $type, $context)_0 (local-$this->is_saved_cpt_in_theme($dictioline->post_content, $type, $context)_2)</td>

				<td class=\'center\'><a href=\'post.php?post=$dictioline&action=edit\' >Edit</a></td></td>
	</tr>
'' cannot be parsed correct.
HTML code '$'str_replace(".mo", "", $filename) (/) <br />'' cannot be parsed correct.
HTML code '$'Check Origin(s) to be erased:<br /></tr></table>'' cannot be parsed correct.
HTML code '$'<div class="error"><p>WARNING: xili-dictionary datas are not ready to be imported from XML generated here. <br />So, it is fully recommended to <strong>desactivate temporarily xili-dictionary</strong> during export and so, avoid clutter of the file.</p><p>To export/import/backup dictionary datas, use .po files built by the plugin.</p></div>'' cannot be parsed correct.
HTML code '$'admin_url()'' cannot be parsed correct.
HTML code '$'<option value=$language"$selected >sprintf(__("Translations (msgstr) in %s", "xili-dictionary"), __($language->description, "xili-dictionary"))</option>'' cannot be parsed correct.
HTML code '$'<p class="loading">$output</p>'' cannot be parsed correct.
HTML code '$'wp_create_nonce("xd-live-state-file")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("xd-from-file-exists")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("xd_importing_process")'' cannot be parsed correct.
HTML code '$'esc_js(__("Starting Importing", "xili-dictionary"))'' cannot be parsed correct.
HTML code '$'esc_js(__("Go to the list of msgs:", "xili-dictionary"))'' cannot be parsed correct.
HTML code '$'admin_url()'' cannot be parsed correct.
HTML code '$'XDMSG'' cannot be parsed correct.
HTML code '$'esc_js(__("Continue", "xili-dictionary"))'' cannot be parsed correct.
HTML code '$'wp_create_nonce("xd_erasing_process")'' cannot be parsed correct.
HTML code '$'esc_js(__("Starting Erasing", "xili-dictionary"))'' cannot be parsed correct.
HTML code '$'esc_js(__("Go to the list of msgs:", "xili-dictionary"))'' cannot be parsed correct.
HTML code '$'admin_url()'' cannot be parsed correct.
HTML code '$'XDMSG'' cannot be parsed correct.
HTML code '$'esc_js(__("Continue", "xili-dictionary"))'' cannot be parsed correct.
HTML code '$'admin_url()'' cannot be parsed correct.
HTML code '$'<div id="message" class="updated fade$this_msg_settings"><p'' cannot be parsed correct.
HTML code '$'{"ok": "File is ready for download:", "error": "Impossible to download file", "error_lang": "Please specify language"}_$this_msg_settings'' cannot be parsed correct.
HTML code '$' â$this->theme_domain()$_POST_language_file.$_POST_download_type_file'' cannot be parsed correct.
HTML code '$'â&nbsp;from&nbsp;$place'' cannot be parsed correct.
HTML code '$' <a href=$this_download_uri" /><strongsprintf(__("Click here to download file %s", "xili-dictionary"), $basename)</strong></a>'' cannot be parsed correct.
HTML code '$'<p>Here it is possible to choose a language file of the current theme to download to your computer for further works or archives.</p>'' cannot be parsed correct.
HTML code '$'<option value=$language"$selected >$language</option>'' cannot be parsed correct.
HTML code '$'var potfile = the_theme_domain()"'' cannot be parsed correct.
HTML code '$'var potfile = $this->get_option_theme_name()"'' cannot be parsed correct.
HTML code '$'var curthemename = $this->get_option_theme_name()"'' cannot be parsed correct.
HTML code '$'var parentthemename = get_option("template")"'' cannot be parsed correct.
HTML code '$'esc_js(__("this plugin", "xili-dictionary"))'' cannot be parsed correct.
HTML code '$'esc_js(__("Start importing", "xili-dictionary"))'' cannot be parsed correct.
HTML code '$'esc_js(__("Start importing from parent theme", "xili-dictionary"))'' cannot be parsed correct.
HTML code '$'$this->theme_domain()'' cannot be parsed correct.
HTML code '$'$plugin_path" : { "domain" : "$one_plugin_TextDomain", "name" : "$one_plugin_Name"},'' cannot be parsed correct.
HTML code '$'<p>Here it is possible to scan the source files and import translatable terms inside the dictionary.</p>'' cannot be parsed correct.
HTML code '$'<p><em>sprintf(__("Before importing terms, verify that the %1$strash%2$s is empty !", "xili-dictionary"), "<a href="edit.php?post_type" . XDMSG . """, "</a>")</em></p>'' cannot be parsed correct.
HTML code '$'Start scanning'' cannot be parsed correct.
HTML code '$'xd_importing_start()'' cannot be parsed correct.
HTML code '$'admin_url()'' cannot be parsed correct.
HTML code '$'var potfile = the_theme_domain()"'' cannot be parsed correct.
HTML code '$'var potfile = $this->get_option_theme_name()"'' cannot be parsed correct.
HTML code '$'var curthemename = $this->get_option_theme_name()"'' cannot be parsed correct.
HTML code '$'<option value=$language"$selected >$language</option>'' cannot be parsed correct.
HTML code '$'var parentthemename = get_option("template")"'' cannot be parsed correct.
HTML code '$'esc_js(__("Start scanning", "xili-dictionary"))'' cannot be parsed correct.
HTML code '$'esc_js(__("this theme", "xili-dictionary"))'' cannot be parsed correct.
HTML code '$'esc_js(__("parent of this theme", "xili-dictionary"))'' cannot be parsed correct.
HTML code '$'<option value=$key_plugin">$one_plugin_Name {$this->plugin_textdomain_search($key_plugin, __("n. a.", "xili-dictionary")) array_keys($this->xili_settings["domains"])}$active</option>'' cannot be parsed correct.
HTML code '$'$this->get_option_theme_name()'' cannot be parsed correct.
HTML code '$'$this->get_option_theme_name()'' cannot be parsed correct.
HTML code '$'<br />What about found msgid ?'' cannot be parsed correct.
HTML code '$'<option value="onlydic" >only import in dictionary</option>'' cannot be parsed correct.
HTML code '$'<option value="onlypot" >only import in a POT file</option>'' cannot be parsed correct.
HTML code '$'<option value="both" >import and backup in POT</option>'' cannot be parsed correct.
HTML code '$'$emessage'' cannot be parsed correct.
HTML code '$'_e("Mail to dev.xiligroup", "xili-dictionary")'' cannot be parsed correct.
HTML code '$'Theme name= get_option("stylesheet")'' cannot be parsed correct.
HTML code '$'WPLANG= $this->get_WPLANG()'' cannot be parsed correct.
HTML code '$'WP version: $wp_version'' cannot be parsed correct.
HTML code '$'Other xili plugins = $this->check_other_xili_plugins()'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'json_encode($args)'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'Hi there!  I\'m just a plugin, not much I can do when called directly.'' cannot be parsed correct.
HTML code '$'</a>
					</th>
					<th scope="col" class="colslug">'' cannot be parsed correct.
HTML code '$'</th>
					<th scope="col" class="colgroup center">'' cannot be parsed correct.
HTML code '$'</th>
					<th colspan="2">'' cannot be parsed correct.
HTML code '$'</th>
				</tr>
			</thead>
			<tbody id="the-list">
					'' cannot be parsed correct.
HTML code '$'"]],
					"oLanguage": {
						"oPaginate": {
							"sFirst": "'' cannot be parsed correct.
HTML code '$'",
							"sLast": "'' cannot be parsed correct.
HTML code '$'",
							"sNext": "'' cannot be parsed correct.
HTML code '$'",
							"sPrevious": "'' cannot be parsed correct.
HTML code '$'"
						},
						"sInfo": "'' cannot be parsed correct.
HTML code '$'",
						"sInfoFiltered": "'' cannot be parsed correct.
HTML code '$'",
						"sEmptyTable": "'' cannot be parsed correct.
HTML code '$'",
						"sInfoEmpty": "'' cannot be parsed correct.
HTML code '$'",
						"sLengthMenu": "'' cannot be parsed correct.
HTML code '$'",
						"sSearch": "'' cannot be parsed correct.
HTML code '$'"

					},
					"aaSorting": [[1,\'asc\']],
					"aoColumns": [
						{ "bSearchable": false, "sWidth" : "30px" },
						{ "sWidth" : "'' cannot be parsed correct.
HTML code '$':</strong><br />'' cannot be parsed correct.
HTML code '$'</a></th>
					<th scope="col" class="coltexte"><a href="'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$' </option>

				'' cannot be parsed correct.
HTML code '$'</strong></legend>
		<form action="" method="get">
			<input type="hidden" name="taxonomy" value="'' cannot be parsed correct.
HTML code '$'<div class="updated">'' cannot be parsed correct.
HTML code '$'		'' cannot be parsed correct.
HTML code '$'&nbsp;&nbsp;'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'</fieldset>'' cannot be parsed correct.
HTML code '$'<p><span class="button displaybbt">'' cannot be parsed correct.
HTML code '$'</span></p>'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'</span></th><td>'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'<br /><table class="widefat"><thead><tr><th class="column-msgtrans">'' cannot be parsed correct.
HTML code '$'</th><th>âmsgstrâ</th></tr></thead><tbody>'' cannot be parsed correct.
HTML code '$'<div class="msg-saved" >'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<mark><strong>msgid</strong></mark>'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'&nbsp;'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'</td></tr>'' cannot be parsed correct.
HTML code '$'</span></th><td>'' cannot be parsed correct.
HTML code '$'</td></tr>'' cannot be parsed correct.
HTML code '$'</tbody></table>'' cannot be parsed correct.
HTML code '$'&nbsp;'' cannot be parsed correct.
HTML code '$'<br /><table class="widefat"><thead><tr><th class="column-msgtrans">'' cannot be parsed correct.
HTML code '$'</th><th>âmsgstrâ</th></tr></thead><tbody>'' cannot be parsed correct.
HTML code '$'</span></th><td>'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'</td></tr>'' cannot be parsed correct.
HTML code '$'</tbody></table>'' cannot be parsed correct.
HTML code '$'</th><th>msgstr</th></tr></thead><tbody>'' cannot be parsed correct.
HTML code '$'<tr><th>'' cannot be parsed correct.
HTML code '$'</th><td>'' cannot be parsed correct.
HTML code '$'[0] '' cannot be parsed correct.
HTML code '$'</td></tr>'' cannot be parsed correct.
HTML code '$'<br /><table class="widefat"><thead><tr><th class="column-msgtrans">'' cannot be parsed correct.
HTML code '$'</tbody></table>'' cannot be parsed correct.
HTML code '$'&nbsp'' cannot be parsed correct.
HTML code '$'<div class="msg-saved" >'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'</h2>
</div>
<table class="display" id="linestable" style="visibility:hidden;">
	<thead>
		<tr>
			<th scope="col" class="center colid"><a href="'' cannot be parsed correct.
HTML code '$'</a></th>
			<th scope="col" class="coltexte"><a href="'' cannot be parsed correct.
HTML code '$'</a>
			</th>
			<th scope="col" class="colslug">'' cannot be parsed correct.
HTML code '$'</th>
			<th scope="col" class="colgroup center">'' cannot be parsed correct.
HTML code '$'</th>
			<th colspan="2">'' cannot be parsed correct.
HTML code '$'</th>
		</tr>
	</thead>
	<tbody id="the-list">
			'' cannot be parsed correct.
HTML code '$'</p>
		'' cannot be parsed correct.
HTML code '$'				</p>
			'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'" title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>

		</fieldset>
		<hr />
		<p><strong>'' cannot be parsed correct.
HTML code '$'</p>


			<select name="editor_caps" id="editor_caps" >
						<option value="no_caps" >'' cannot be parsed correct.
HTML code '$'<input type="hidden" value="mo" id="_xd_file_extend" name="_xd_file_extend" >'' cannot be parsed correct.
HTML code '$'<input type="hidden" value="po" id="_xd_file_extend" name="_xd_file_extend" >'' cannot be parsed correct.
HTML code '$'<div class="dialogorigin">'' cannot be parsed correct.
HTML code '$'<table class="checktheme" ><tr>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'" />&nbsp;&nbsp;&nbsp;&nbsp;
		<input class="button-primary" type="submit" name="submit" value="'' cannot be parsed correct.
HTML code '$'" />
	</div>
</div>
<script type="text/javascript">
	//<![CDATA[
	'' cannot be parsed correct.
HTML code '$'var pluginpotfile = "plugin pot file";'' cannot be parsed correct.
HTML code '$'</label>
		<input name="taxonomy_name" id="taxonomy_name" type="text" value="'' cannot be parsed correct.
HTML code '$'<br/>'' cannot be parsed correct.
HTML code '$'<br /><hr />'' cannot be parsed correct.
HTML code '$'<select name="plugin_domain" id="plugin_domain" >'' cannot be parsed correct.
HTML code '$'</select>'' cannot be parsed correct.
HTML code '$'" />&nbsp;&nbsp;&nbsp;&nbsp;
	'' cannot be parsed correct.
HTML code '$'" /><br />
	'' cannot be parsed correct.
HTML code '$'var pluginpotfile = "plugin pot file";'' cannot be parsed correct.
HTML code '$'</label>:&nbsp;
			<input name="lang_ISO" id="lang_ISO" type="text" value="" size="5"/><br />
			<label for="lang_name">'' cannot be parsed correct.
HTML code '$'</label>:&nbsp;
			<input name="lang_name" id="lang_name" type="text" value="" size="20" />
			<br />
			<p class="submit">
				<input type="submit" id="lang_add" name="lang_add" value="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
&nbsp;<br />'' cannot be parsed correct.
HTML code '$':<a class="small-action-button" href="edit.php?post_type='' cannot be parsed correct.
HTML code '$'&amp;page=import_dictionary_page&amp;extend=po'' cannot be parsed correct.
HTML code '$'" title="'' cannot be parsed correct.
HTML code '$'">PO</a>
<a class="small-action-button" href="edit.php?post_type='' cannot be parsed correct.
HTML code '$'&amp;page=import_dictionary_page&amp;extend=mo'' cannot be parsed correct.
HTML code '$'" title="'' cannot be parsed correct.
HTML code '$'">MO</a><br />
&nbsp;<br /><a class="action-button grey-button" href="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
<br /><a class="action-button grey-button" href="edit.php?post_type='' cannot be parsed correct.
HTML code '$'&amp;page=download_dictionary_page" title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>

<h4 id="manage_categories">'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>

<h4 id="manage_website_infos">'' cannot be parsed correct.
HTML code '$'<br /><br />'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>

<h4 id="manage_dictionary">'' cannot be parsed correct.
HTML code '$'&amp;page=erase_dictionary_page" title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
	<a class="action-button grey-button" href="edit.php?post_type='' cannot be parsed correct.
HTML code '$'&amp;page=import_dictionary_page&amp;scan=sources" title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
		'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>


		'' cannot be parsed correct.
HTML code '$'</label>
			<input name="tagsnamesearch" id="tagsnamesearch" type="text" value="'' cannot be parsed correct.
HTML code '$'</h2>
			'' cannot be parsed correct.
HTML code '$'" />
			'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<input name="_xd_looping_rows" type="hidden" id="_xd_looping_rows" value="50">'' cannot be parsed correct.
HTML code '$'<input name="_xd_looping_delay_time" type="hidden" id="_xd_looping_delay_time" value=".5">'' cannot be parsed correct.
HTML code '$' </option>
		<option value="all-lang"> '' cannot be parsed correct.
HTML code '$' </option>
				'' cannot be parsed correct.
HTML code '$'<div class="dialogorigin">'' cannot be parsed correct.
HTML code '$'<table class="checktheme" ><tr>'' cannot be parsed correct.
HTML code '$'&page=dictionary_page"'' cannot be parsed correct.
HTML code '$'&page=dictionary_page"'' cannot be parsed correct.
HTML code '$' </option>
				<option value="po" '' cannot be parsed correct.
HTML code '$' </option>
				<option value="mo" '' cannot be parsed correct.
HTML code '$' </option>
				<option value="pot" '' cannot be parsed correct.
HTML code '$' </option>
			</select>
			<p class="description">'' cannot be parsed correct.
HTML code '$' </option>

			'' cannot be parsed correct.
HTML code '$' </option>
			</select>
			<p class="description">'' cannot be parsed correct.
HTML code '$'		<div class="sub-field">
				<label for="download_compress_file">&nbsp;'' cannot be parsed correct.
HTML code '$'var plugindatas = {'' cannot be parsed correct.
HTML code '$'};'' cannot be parsed correct.
HTML code '$'<input type="hidden" id="from-what" name="from-what" value="sources" >'' cannot be parsed correct.
HTML code '$'<input type="hidden" id="from-what" name="from-what" value="files" >'' cannot be parsed correct.
HTML code '$' </option>
		<option value="po" '' cannot be parsed correct.
HTML code '$' </option>
		<option value="mo" '' cannot be parsed correct.
HTML code '$' </option>
	</select>

	<p class="description">'' cannot be parsed correct.
HTML code '$' </option>
		<option value="theme-dir"> '' cannot be parsed correct.
HTML code '$' </option>
	</select>

	<p class="description">'' cannot be parsed correct.
HTML code '$' </option>
		<option value="local" '' cannot be parsed correct.
HTML code '$' </option>

		'' cannot be parsed correct.
HTML code '$' </option>
		'' cannot be parsed correct.
HTML code '$' </option>
		<option value="pluginwplang" '' cannot be parsed correct.
HTML code '$' </option>
	</select>


	<p class="description">'' cannot be parsed correct.
HTML code '$' </option>

						'' cannot be parsed correct.
HTML code '$'var pluginpotfile = "plugin pot file";'' cannot be parsed correct.
HTML code '$' </option>
			'' cannot be parsed correct.
HTML code '$' </option>
				'' cannot be parsed correct.
HTML code '$'				<option value="parenttheme" > '' cannot be parsed correct.
HTML code '$' </option>
				'' cannot be parsed correct.
HTML code '$' </option>
			</select>
			<p class="description">'' cannot be parsed correct.
HTML code '$' <span id="backup_pot_label"></span> '' cannot be parsed correct.
HTML code '$'<select name="backup_pot" id="backup_pot" class="postform">'' cannot be parsed correct.
HTML code '$'</select>'' cannot be parsed correct.
HTML code '$'</h4>
			<p><strong>'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$' />&nbsp;'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$' />&nbsp;'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$' />&nbsp;'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$' />&nbsp;'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$' />&nbsp;'' cannot be parsed correct.
HTML code '$'" /></div>

		<div style="clear:both; height:1px"></div>
		'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:38.582606.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.042017.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 6 do_action/apply_filters calls and 70 add_action/add_filter calls. Now connecting do-add pairs.
Added 7 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:03.546517.

7 PHP_REACHES edges created
7 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running ArrayElementDetector
### Start running maxdbDetector
### Finish running IBMDb2Detector
### Start running MongoDbDetector
### Finish running FrontBaseDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running InformixDetector
### Start running MySQLDetector
### Finish running MongoDbDetector
### Start running MySQLiDetector
### Finish running IngresDetector
### Start running Oci8Detector
### Finish running MsqlDetector
### Start running OpenSSLDetector
### Finish running MySQLDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running HashDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPRetrievalDetector
### Start running PhpVarDetector
### Finish running PHPIncludedDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPStorageDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running PropertyDetector
### Start running SybaseDetector
### Finish running OpenSSLDetector
### Start running TokyoTyrantDetector
### Finish running SqlServerDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SqliteDetector
### Start running WordpressHashingFnDetector
### Finish running SybaseDetector
### Start running WordPressRemoteDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Start running GenericEncryptionDetector
### Finish running GenericDatabaseUsageDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running MySQLiDetector
### Finish running maxdbDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
includes/class-extractor.php:132
  - RETRIEVAL call to fgets($extf).
  - Data types: file
includes/extract/extract-wp.php:35
  - RETRIEVAL call to file_get_contents($file_name).
  - Data types: file
xili-dictionary.php:8214
  - RETRIEVAL call to file_get_contents($diskfile).
  - Data types: file
xili-dictionary.php:8216
  - RETRIEVAL call to file($diskfile).
  - Data types: file 

includes/pot-ext-meta.php:28
  - STORAGE call to fwrite(STDERR, "Usage: php pot-ext-meta.php EXT POT
").
  - Data types: file
includes/pot-ext-meta.php:29
  - STORAGE call to fwrite(STDERR, "Adds metadata from a WordPress theme or plugin file EXT to POT file
").
  - Data types: file
includes/pot-ext-meta.php:59
  - STORAGE call to fwrite($potf, $pot).
  - Data types: file
xili-dictionary.php:8220
  - STORAGE call to fwrite($fp, $gz_text).
  - Data types: file 

xili-dictionary.php:1563
  - variable '$save_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:1564
  - variable '$save_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:1566
  - variable '$save_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:5046
  - variable '$save_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:5048
  - variable '$save_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:5061
  - variable '$save_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:5076
  - variable '$save_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:5533
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
xili-dictionary.php:5543
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
xili-dictionary.php:5544
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
xili-dictionary.php:5981
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
xili-dictionary.php:6009
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
xili-dictionary.php:6010
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
xili-dictionary.php:6726
  - variable '$file_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:6727
  - variable '$file_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:6727
  - variable '$file_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:6727
  - variable '$file_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:6730
  - variable '$file_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:6732
  - variable '$file_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:6732
  - variable '$file_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:6735
  - variable '$file_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:6736
  - variable '$file_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:6736
  - variable '$file_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:6737
  - variable '$file_state' of personal types {'state'} is found.
  - Data types: state
xili-dictionary.php:6737
  - variable '$file_state' of personal types {'state'} is found.
  - Data types: state 

xili-dictionary.php:189
  - RETRIEVAL call to get_option("xili_dictionary_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:192
  - RETRIEVAL call to get_option("xili_dictionary_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:327
  - RETRIEVAL call to get_option("xd_test_importation", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:330
  - RETRIEVAL call to get_option("xd_test_importation", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:332
  - RETRIEVAL call to get_option("xd_test_importation", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:404
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
xili-dictionary.php:433
  - RETRIEVAL call to get_option("WPLANG", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:526
  - RETRIEVAL call to get_option("xili_dictionary_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:650
  - RETRIEVAL call to get_post_meta($post->ID, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1043
  - RETRIEVAL call to get_post_meta($post_id, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1047
  - RETRIEVAL call to get_post($post_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:1048
  - RETRIEVAL call to get_post_meta($parent, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1060
  - RETRIEVAL call to get_post_meta($post_id, $this->msgidlang_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1061
  - RETRIEVAL call to get_post_meta($msgid_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1075
  - RETRIEVAL call to get_post_meta($post_id, $this->msgidlang_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1077
  - RETRIEVAL call to get_post_meta($msgid_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1090
  - RETRIEVAL call to get_post_meta($msgid_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1095
  - RETRIEVAL call to get_post_meta($parent, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1120
  - RETRIEVAL call to get_post_meta($post_id, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1131
  - RETRIEVAL call to get_post_meta($post_id, $this->ctxt_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1145
  - RETRIEVAL call to get_post_meta($found_others[0], $this->ctxt_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1375
  - RETRIEVAL call to get_post_meta($post_ID, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1377
  - RETRIEVAL call to get_post_meta($post_ID, $this->msgidlang_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1378
  - RETRIEVAL call to get_post_meta($msgid_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1407
  - RETRIEVAL call to get_post_meta($post_ID, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1531
  - RETRIEVAL call to get_post_meta($post_ID, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1561
  - RETRIEVAL call to get_post_meta($post_ID, $this->ctxt_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1714
  - RETRIEVAL call to get_post_meta($msgid_post_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1757
  - RETRIEVAL call to get_post_meta($msgid_post_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1817
  - RETRIEVAL call to get_option("default_ping_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:1851
  - RETRIEVAL call to get_post_meta($parent, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1883
  - RETRIEVAL call to get_post($post_id, ARRAY_A) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:1932
  - RETRIEVAL call to get_post_meta($id, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1956
  - RETRIEVAL call to get_post_meta($id, $this->msgidlang_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:1958
  - RETRIEVAL call to get_post_meta($msgid_ID, $this->msg_extracted_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2362
  - RETRIEVAL call to get_post_meta($id, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2370
  - RETRIEVAL call to get_post_meta($id, $this->msgidlang_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2375
  - RETRIEVAL call to get_post_meta($target_id, $this->ctxt_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2401
  - RETRIEVAL call to get_post_meta($target_id, $this->msg_extracted_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2422
  - RETRIEVAL call to get_post_meta($target_id, $this->msg_translator_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2424
  - RETRIEVAL call to get_post_meta($target_id, $this->msg_flags, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2429
  - RETRIEVAL call to get_post_meta($id, $this->msg_translator_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2504
  - RETRIEVAL call to get_post_meta($post_id, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2515
  - RETRIEVAL call to get_post_meta($post_id, $this->msg_flags, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2525
  - RETRIEVAL call to get_post_meta($post_id, $this->msg_flags, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2550
  - RETRIEVAL call to get_post_meta($id, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2559
  - RETRIEVAL call to get_post_meta($id, $this->msgidlang_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2564
  - RETRIEVAL call to get_post_meta($msgid_id, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2567
  - RETRIEVAL call to get_post_meta($msgid_id, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2639
  - RETRIEVAL call to get_post_meta($msgid_id, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2652
  - RETRIEVAL call to get_post_meta($msgid_id, $this->msg_extracted_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2658
  - RETRIEVAL call to get_post_meta($msgid_id, $this->msg_extracted_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2750
  - RETRIEVAL call to get_post_meta($strid, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2869
  - RETRIEVAL call to get_post_meta($id, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2871
  - RETRIEVAL call to get_post_meta($id, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2874
  - RETRIEVAL call to get_post_meta($id, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2878
  - RETRIEVAL call to get_post_meta($id, $this->ctxt_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:2913
  - RETRIEVAL call to get_post_meta($id, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:3006
  - RETRIEVAL call to get_post_meta($strid, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:3060
  - RETRIEVAL call to get_post_meta($id, $this->msgidlang_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:3314
  - RETRIEVAL call to get_option("xili_language_settings", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:3375
  - RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:3385
  - RETRIEVAL call to get_option("stylesheet") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:3386
  - RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:3388
  - RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:3396
  - RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:3623
  - RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:3697
  - RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:3784
  - RETRIEVAL call to get_option("xd_test_importation_list", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:3788
  - RETRIEVAL call to get_option("xd_test_importation", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:3793
  - RETRIEVAL call to get_option("xd_test_importation", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:3808
  - RETRIEVAL call to get_option("xd_test_importation", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:3830
  - RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:4563
  - RETRIEVAL call to get_option("polylang") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:4631
  - RETRIEVAL call to get_option("xd_test_importation_list", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:4717
  - RETRIEVAL call to get_option("stylesheet") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:4871
  - RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
xili-dictionary.php:5001
  - RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "s" => $tagsnamesearch, "tax_query" => [["taxonomy" => TAXONAME, "field" => "name", "terms" => $curlang]], "meta_query" => [["key" => $this->msgtype_meta, "value" => ["msgstr", "msgstr_0", "msgstr_1"], "compare" => "IN"]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
xili-dictionary.php:5025
  - RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "meta_key" => $meta_key_val, "meta_value" => $meta_value_val, "post_type" => XDMSG, "suppress_filters" => true, "s" => $tagsnamesearch]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
xili-dictionary.php:5041
  - RETRIEVAL call to get_post_meta($dictioline->ID, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:5042
  - RETRIEVAL call to get_post_meta($dictioline->ID, $this->ctxt_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:5389
  - RETRIEVAL call to get_option("xili_dictionary_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:5603
  - RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => ["relation" => "AND", ["key" => $this->msgtype_meta, "value" => "msgid", "compare" => "="], ["key" => $this->msglang_meta, "value" => $curlang, "compare" => $like]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
xili-dictionary.php:5629
  - RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => ["relation" => "AND", ["key" => $this->msgtype_meta, "value" => "msgid", "compare" => "="], ["key" => $this->msglang_meta, "value" => $curlang, "compare" => "LIKE"], ["key" => $this->msg_extracted_comments, "value" => $extract, "compare" => "LIKE"]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
xili-dictionary.php:5760
  - RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => $meta_query]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
xili-dictionary.php:5772
  - RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => $meta_query, "tax_query" => [$array_tax]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
xili-dictionary.php:5796
  - RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => [["meta_key" => $meta_key_val, "meta_value" => $meta_value_val]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
xili-dictionary.php:5891
  - RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => $meta_query, "tax_query" => [$array_tax]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
xili-dictionary.php:5910
  - RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => ["relation" => "AND", ["key" => $this->msgtype_meta, "value" => "msgid", "compare" => "="], ["key" => $this->msg_extracted_comments, "value" => $extract, "compare" => $like_or_not]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
xili-dictionary.php:5941
  - RETRIEVAL call to get_post_meta($cur_msgid_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:5948
  - RETRIEVAL call to get_post($cur_msgstr_ID) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:5954
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
xili-dictionary.php:5964
  - RETRIEVAL call to get_post($cur_msgstr_ID) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:6029
  - RETRIEVAL call to get_post_meta($cur_msgid->ID, $this->ctxt_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:6033
  - RETRIEVAL call to get_post_meta($cur_msgid->ID, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:6041
  - RETRIEVAL call to get_post($plural_ID) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:6086
  - RETRIEVAL call to get_post_meta($list_msgstr->ID, $this->msg_translator_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:6089
  - RETRIEVAL call to get_post_meta($list_msgstr[0]->ID, $this->msg_translator_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:6093
  - RETRIEVAL call to get_post_meta($cur_msgid->ID, $this->msg_extracted_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:6099
  - RETRIEVAL call to get_post_meta($cur_msgid->ID, $this->msg_flags, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:6133
  - RETRIEVAL call to get_post_meta($cur_msgid->ID, $this->msg_extracted_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:6139
  - RETRIEVAL call to get_post_meta($cur_msgid->ID, $this->msg_flags, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:6255
  - RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:6258
  - RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:6449
  - RETRIEVAL call to get_option("stylesheet") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:6581
  - RETRIEVAL call to get_post_meta($msgid_post_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:6767
  - RETRIEVAL call to get_option("xd_test_importation_list", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:6772
  - RETRIEVAL call to get_option("xd_test_importation", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:6791
  - RETRIEVAL call to get_option("xd_test_importation_list") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:6829
  - RETRIEVAL call to get_post_meta($msgid_post_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:6890
  - RETRIEVAL call to get_post_meta($onepost["ID"], $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:7541
  - RETRIEVAL call to get_option("_xd_erasing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:7546
  - RETRIEVAL call to get_option("_xd_erasing_step", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:7547
  - RETRIEVAL call to get_option("_xd_erasing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:7577
  - RETRIEVAL call to get_option("_xd_erasing_count_lines", $max + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:7597
  - RETRIEVAL call to get_option("_xd_erasing_count_lines", $max + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:7608
  - RETRIEVAL call to get_option("_xd_erasing_count_lines", $max + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:7645
  - RETRIEVAL call to get_option("_xd_cache_temp_array_IDs") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:7655
  - RETRIEVAL call to get_option("_xd_deletion_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:7670
  - RETRIEVAL call to get_post_meta($one_id, $xili_dictionary->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:7685
  - RETRIEVAL call to get_post_meta($one_id, $xili_dictionary->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:7718
  - RETRIEVAL call to get_post_meta($one_id, $xili_dictionary->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
xili-dictionary.php:7908
  - RETRIEVAL call to get_posts($query). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
xili-dictionary.php:8062
  - RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:8330
  - RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:8781
  - RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:8819
  - RETRIEVAL call to get_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:8824
  - RETRIEVAL call to get_option("_xd_importing_step", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:8825
  - RETRIEVAL call to get_option("_xd_importing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:8913
  - RETRIEVAL call to get_option("_xd_importing_count_entries", $max + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:9204
  - RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:9284
  - RETRIEVAL call to get_option("_xd_cache_pomo_file", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
xili-dictionary.php:9353
  - RETRIEVAL call to get_option("stylesheet") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:9392
  - RETRIEVAL call to get_option("xili_language_pll_term_category_groups") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:9393
  - RETRIEVAL call to get_option("xili_language_pll_languages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:9467
  - RETRIEVAL call to get_post($mo_id, OBJECT) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:9542
  - RETRIEVAL call to get_option("stylesheet") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
xili-dictionary.php:9890
  - RETRIEVAL call to get_user_meta(get_current_user_id(), "dismissed_wp_pointers", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta 

xili-dictionary.php:201
  - STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:206
  - STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:211
  - STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:216
  - STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:223
  - STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:228
  - STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:371
  - STORAGE call to update_post_meta($all_post->ID, $this->msg_sort_slug, sanitize_title($all_post->post_content)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:536
  - STORAGE call to update_option("xili_dictionary_settings", $submitted_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:1052
  - STORAGE call to update_post_meta($parent, $this->msgchild_meta, $thechilds) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1069
  - STORAGE call to update_post_meta($msgid_ID, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1071
  - STORAGE call to delete_post_meta($msgid_ID, $this->msglang_meta) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
xili-dictionary.php:1085
  - STORAGE call to update_post_meta($msgid_ID, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1087
  - STORAGE call to delete_post_meta($msgid_ID, $this->msglang_meta) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
xili-dictionary.php:1099
  - STORAGE call to update_post_meta($parent, $this->msgchild_meta, $thechilds) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1123
  - STORAGE call to update_post_meta($post_id, $this->msgtype_meta, $type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1124
  - STORAGE call to update_post_meta($post_id, $this->msglang_meta, []) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1125
  - STORAGE call to update_post_meta($post_id, $this->msg_extracted_comments, $this->local_tag . " ") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1126
  - STORAGE call to update_post_meta($post_id, $this->msg_sort_slug, sanitize_title($post->post_content)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1717
  - STORAGE call to update_post_meta($msgid_post_ID, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1718
  - STORAGE call to update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $msgid_post_ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1745
  - STORAGE call to update_post_meta($msgstr_post_ID_plural, $this->msgidlang_meta, $msgid_post_ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1760
  - STORAGE call to update_post_meta($msgid_post_ID, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1822
  - STORAGE call to wp_insert_post($params). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
xili-dictionary.php:1826
  - STORAGE call to update_post_meta($post_id, $this->ctxt_meta, $context) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1830
  - STORAGE call to update_post_meta($post_id, $this->msgtype_meta, $type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1833
  - STORAGE call to update_post_meta($post_id, $this->msg_extracted_comments, $extracted_comments) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1834
  - STORAGE call to update_post_meta($post_id, $this->msg_translator_comments, $translator_comments) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1836
  - STORAGE call to update_post_meta($post_id, $this->msg_flags, $flags) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1838
  - STORAGE call to update_post_meta($post_id, $this->msglang_meta, []) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1843
  - STORAGE call to update_post_meta($post_id, $this->msg_translator_comments, $translator_comments) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1845
  - STORAGE call to update_post_meta($post_id, $this->msg_sort_slug, sanitize_title($content)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1861
  - STORAGE call to update_post_meta($parent, $this->msgchild_meta, $thechilds) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1888
  - STORAGE call to wp_insert_post($postarr). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
xili-dictionary.php:1891
  - STORAGE call to update_post_meta($post_id, $this->msg_extracted_comments, $extracted_comments) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1892
  - STORAGE call to update_post_meta($post_id, $this->msg_translator_comments, $translator_comments) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:1893
  - STORAGE call to update_post_meta($post_id, $this->msg_flags, $flags) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2489
  - STORAGE call to update_post_meta($post_id, $this->msg_translator_comments, $translator_comments) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2496
  - STORAGE call to update_post_meta($post_id, $this->ctxt_meta, $ctxt) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2498
  - STORAGE call to delete_post_meta($post_id, $this->ctxt_meta) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
xili-dictionary.php:2502
  - STORAGE call to update_post_meta($post_id, $this->msg_sort_slug, sanitize_title($thepost->post_content)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2523
  - STORAGE call to update_post_meta($post_id, $this->msg_flags, $flags) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2532
  - STORAGE call to update_post_meta($post_id, $this->msg_flags, $flags) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2594
  - STORAGE call to update_post_meta($msgid_id, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2595
  - STORAGE call to update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $msgid_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2605
  - STORAGE call to update_post_meta($msgid_id, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2606
  - STORAGE call to update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $msgid_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2617
  - STORAGE call to update_post_meta($msgid_id, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2618
  - STORAGE call to update_post_meta($msgstr_1_post_ID, $this->msgidlang_meta, $msgid_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2654
  - STORAGE call to update_post_meta($msgid_id, $this->msg_extracted_comments, $extracted_comments) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2660
  - STORAGE call to update_post_meta($msgid_id, $this->msg_extracted_comments, $extracted_comments) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2925
  - STORAGE call to update_post_meta($id, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2926
  - STORAGE call to update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2935
  - STORAGE call to update_post_meta($id, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2936
  - STORAGE call to update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2944
  - STORAGE call to update_post_meta($id, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:2945
  - STORAGE call to update_post_meta($msgstr_1_post_ID, $this->msgidlang_meta, $msgid_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:3178
  - STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:3266
  - STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:3273
  - STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:3292
  - STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:3302
  - STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:3348
  - STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:4173
  - STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:4187
  - STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:4603
  - STORAGE call to update_option("xd_test_importation", $selectplugin_domain) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:4609
  - STORAGE call to delete_option("xd_test_importation") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:4610
  - STORAGE call to delete_option("xd_test_importation_list") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:4650
  - STORAGE call to delete_option("xd_test_importation") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:4651
  - STORAGE call to delete_option("xd_test_importation_list") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:4713
  - STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:4887
  - STORAGE call to wp_delete_post($oneline->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:6584
  - STORAGE call to update_post_meta($msgid_post_ID, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:6585
  - STORAGE call to update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $msgid_post_ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:6786
  - STORAGE call to update_option("xd_test_importation_list", $this->domain_to_detect_list) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:6832
  - STORAGE call to update_post_meta($msgid_post_ID, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:6833
  - STORAGE call to update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $msgid_post_ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:6892
  - STORAGE call to update_post_meta($onepost["ID"], $this->msglang_meta, []) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
xili-dictionary.php:7075
  - STORAGE call to delete_option("_xd_erasing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7542
  - STORAGE call to update_option("_xd_erasing_step", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:7543
  - STORAGE call to update_option("_xd_erasing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:7560
  - STORAGE call to update_option("_xd_erasing_step", $step + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:7561
  - STORAGE call to update_option("_xd_erasing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:7562
  - STORAGE call to update_option("_xd_erasing_count_lines", $count_lines) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:7566
  - STORAGE call to delete_option("_xd_erasing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7567
  - STORAGE call to delete_option("_xd_erasing_start") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7568
  - STORAGE call to delete_option("_xd_erasing_count_lines") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7569
  - STORAGE call to delete_option("_xd_deletion_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7570
  - STORAGE call to delete_option("_xd_cache_temp_array_IDs") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7581
  - STORAGE call to update_option("_xd_erasing_step", $step + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:7582
  - STORAGE call to update_option("_xd_erasing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:7595
  - STORAGE call to update_option("_xd_erasing_start", $max + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:7609
  - STORAGE call to delete_option("_xd_erasing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7610
  - STORAGE call to delete_option("_xd_erasing_start") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7611
  - STORAGE call to delete_option("_xd_erasing_count_lines") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7612
  - STORAGE call to delete_option("_xd_deletion_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7613
  - STORAGE call to delete_option("_xd_cache_temp_array_IDs") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7677
  - STORAGE call to wp_delete_post($one_id, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:7692
  - STORAGE call to wp_delete_post($msgstrs->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:7703
  - STORAGE call to wp_delete_post($msgstrs->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:7712
  - STORAGE call to wp_delete_post($one_id, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:7724
  - STORAGE call to wp_delete_post($msgstrs->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:7736
  - STORAGE call to wp_delete_post($msgstrs->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:7742
  - STORAGE call to wp_delete_post($one_id, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:7763
  - STORAGE call to update_option("_xd_cache_temp_array_IDs", $id_list) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:7911
  - STORAGE call to update_option("_xd_deletion_type", $deletion_type) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:8300
  - STORAGE call to delete_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8304
  - STORAGE call to delete_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8611
  - STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:8820
  - STORAGE call to update_option("_xd_importing_step", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:8821
  - STORAGE call to update_option("_xd_importing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:8868
  - STORAGE call to update_option("_xd_importing_step", $step + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:8869
  - STORAGE call to update_option("_xd_importing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:8870
  - STORAGE call to update_option("_xd_importing_count_entries", $count_entries) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:8878
  - STORAGE call to delete_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8879
  - STORAGE call to delete_option("_xd_importing_start") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8880
  - STORAGE call to delete_option("_xd_cache_pomo_file") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8881
  - STORAGE call to delete_option("_xd_importing_count_entries") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8896
  - STORAGE call to update_option("_xd_importing_step", $step + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:8897
  - STORAGE call to update_option("_xd_importing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:8902
  - STORAGE call to update_option("_xd_importing_step", $step + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:8903
  - STORAGE call to update_option("_xd_importing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:8911
  - STORAGE call to update_option("_xd_importing_start", $max + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:8922
  - STORAGE call to delete_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8923
  - STORAGE call to delete_option("_xd_importing_start") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8924
  - STORAGE call to delete_option("_xd_cache_pomo_file") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8925
  - STORAGE call to delete_option("_xd_importing_count_entries") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:9227
  - STORAGE call to update_option("_xd_cache_pomo_file", $entries) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
xili-dictionary.php:9268
  - STORAGE call to update_option("_xd_cache_pomo_file", $temp_po) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

xili-dictionary.php:1071
  - DELETION call to delete_post_meta($msgid_ID, $this->msglang_meta) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
xili-dictionary.php:1087
  - DELETION call to delete_post_meta($msgid_ID, $this->msglang_meta) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
xili-dictionary.php:2498
  - DELETION call to delete_post_meta($post_id, $this->ctxt_meta) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
xili-dictionary.php:4203
  - DELETION call to wp_delete_term($t_id, TAXONAME) alters data types {'term'}. Passed arguments: 0: $term (int), 1: $taxonomy (string). Returns (bool|int|WP_Error).
  - Data types: term
xili-dictionary.php:4609
  - DELETION call to delete_option("xd_test_importation") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:4610
  - DELETION call to delete_option("xd_test_importation_list") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:4650
  - DELETION call to delete_option("xd_test_importation") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:4651
  - DELETION call to delete_option("xd_test_importation_list") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:4887
  - DELETION call to wp_delete_post($oneline->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:7075
  - DELETION call to delete_option("_xd_erasing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7566
  - DELETION call to delete_option("_xd_erasing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7567
  - DELETION call to delete_option("_xd_erasing_start") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7568
  - DELETION call to delete_option("_xd_erasing_count_lines") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7569
  - DELETION call to delete_option("_xd_deletion_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7570
  - DELETION call to delete_option("_xd_cache_temp_array_IDs") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7609
  - DELETION call to delete_option("_xd_erasing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7610
  - DELETION call to delete_option("_xd_erasing_start") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7611
  - DELETION call to delete_option("_xd_erasing_count_lines") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7612
  - DELETION call to delete_option("_xd_deletion_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7613
  - DELETION call to delete_option("_xd_cache_temp_array_IDs") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:7677
  - DELETION call to wp_delete_post($one_id, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:7692
  - DELETION call to wp_delete_post($msgstrs->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:7703
  - DELETION call to wp_delete_post($msgstrs->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:7712
  - DELETION call to wp_delete_post($one_id, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:7724
  - DELETION call to wp_delete_post($msgstrs->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:7736
  - DELETION call to wp_delete_post($msgstrs->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:7742
  - DELETION call to wp_delete_post($one_id, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
xili-dictionary.php:8300
  - DELETION call to delete_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8304
  - DELETION call to delete_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8878
  - DELETION call to delete_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8879
  - DELETION call to delete_option("_xd_importing_start") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8880
  - DELETION call to delete_option("_xd_cache_pomo_file") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8881
  - DELETION call to delete_option("_xd_importing_count_entries") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8922
  - DELETION call to delete_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8923
  - DELETION call to delete_option("_xd_importing_start") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8924
  - DELETION call to delete_option("_xd_cache_pomo_file") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
xili-dictionary.php:8925
  - DELETION call to delete_option("_xd_importing_count_entries") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPRetrievalDetector.file_get_contents($diskfile) - {'file'}
	PHPStorageDetector.fwrite(STDERR, "Usage: php pot-ext-meta.php EXT POT
") - {'file'}
	PHPStorageDetector.fwrite($potf, $pot) - {'file'}
	PHPRetrievalDetector.fgets($extf) - {'file'}
	PHPRetrievalDetector.file($diskfile) - {'file'}
	PHPStorageDetector.fwrite($fp, $gz_text) - {'file'}
	PHPStorageDetector.fwrite(STDERR, "Adds metadata from a WordPress theme or plugin file EXT to POT file
") - {'file'}
	PHPRetrievalDetector.file_get_contents($file_name) - {'file'}
none
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => [["meta_key" => $meta_key_val, "meta_value" => $meta_value_val]]]) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => $meta_query, "tax_query" => [$array_tax]]) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => ["relation" => "AND", ["key" => $this->msgtype_meta, "value" => "msgid", "compare" => "="], ["key" => $this->msglang_meta, "value" => $curlang, "compare" => $like]]]) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => ["relation" => "AND", ["key" => $this->msgtype_meta, "value" => "msgid", "compare" => "="], ["key" => $this->msglang_meta, "value" => $curlang, "compare" => "LIKE"], ["key" => $this->msg_extracted_comments, "value" => $extract, "compare" => "LIKE"]]]) - set()
	WordPressStorageDetector.wp_insert_post($params) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true]) - set()
	WordPressStorageDetector.wp_insert_post($postarr) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => $meta_query, "tax_query" => [$array_tax]]) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "meta_key" => $meta_key_val, "meta_value" => $meta_value_val, "post_type" => XDMSG, "suppress_filters" => true, "s" => $tagsnamesearch]) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "s" => $tagsnamesearch, "tax_query" => [["taxonomy" => TAXONAME, "field" => "name", "terms" => $curlang]], "meta_query" => [["key" => $this->msgtype_meta, "value" => ["msgstr", "msgstr_0", "msgstr_1"], "compare" => "IN"]]]) - set()
	WordPressRetrievalDetector.get_posts($query) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => $meta_query]) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => ["relation" => "AND", ["key" => $this->msgtype_meta, "value" => "msgid", "compare" => "="], ["key" => $this->msg_extracted_comments, "value" => $extract, "compare" => $like_or_not]]]) - set()
option
	DeletionDetector.delete_option("_xd_erasing_count_lines") - {'option'}
	WordPressRetrievalDetector.get_option("template") - {'option'}
	WordPressRetrievalDetector.get_option("_xd_erasing_count_lines", $max + 1) - {'option'}
	WordPressRetrievalDetector.get_option("xd_test_importation", "") - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $this->xili_settings) - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $this->xili_settings) - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $this->xili_settings) - {'option'}
	DeletionDetector.delete_option("_xd_cache_pomo_file") - {'option'}
	DeletionDetector.delete_option("_xd_deletion_type") - {'option'}
	WordPressRetrievalDetector.get_option("_xd_erasing_count_lines", $max + 1) - {'option'}
	DeletionDetector.delete_option("_xd_erasing_start") - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $this->xili_settings) - {'option'}
	DeletionDetector.delete_option("_xd_importing_count_entries") - {'option'}
	DeletionDetector.delete_option("_xd_cache_temp_array_IDs") - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $this->xili_settings) - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $this->xili_settings) - {'option'}
	DeletionDetector.delete_option("_xd_erasing_step") - {'option'}
	WordPressStorageDetector.delete_option("_xd_erasing_count_lines") - {'option'}
	WordPressStorageDetector.delete_option("_xd_cache_temp_array_IDs") - {'option'}
	WordPressStorageDetector.update_option("_xd_deletion_type", $deletion_type) - {'option'}
	WordPressStorageDetector.update_option("_xd_erasing_start", 0) - {'option'}
	WordPressRetrievalDetector.get_option("xili_dictionary_settings") - {'option'}
	WordPressStorageDetector.delete_option("_xd_deletion_type") - {'option'}
	WordPressRetrievalDetector.get_option("xili_dictionary_settings") - {'option'}
	WordPressStorageDetector.delete_option("_xd_erasing_step") - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $this->xili_settings) - {'option'}
	WordPressRetrievalDetector.get_option("stylesheet") - {'option'}
	WordPressStorageDetector.delete_option("_xd_erasing_start") - {'option'}
	WordPressRetrievalDetector.get_option("xd_test_importation", false) - {'option'}
	WordPressStorageDetector.delete_option("xd_test_importation_list") - {'option'}
	DeletionDetector.delete_option("_xd_importing_step") - {'option'}
	WordPressStorageDetector.update_option("_xd_erasing_start", $max + 1) - {'option'}
	WordPressStorageDetector.delete_option("_xd_importing_step") - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $submitted_settings) - {'option'}
	WordPressStorageDetector.update_option("_xd_erasing_count_lines", $count_lines) - {'option'}
	WordPressRetrievalDetector.get_option("xd_test_importation_list", []) - {'option'}
	WordPressStorageDetector.update_option("_xd_erasing_start", 0) - {'option'}
	DeletionDetector.delete_option("_xd_erasing_count_lines") - {'option'}
	WordPressStorageDetector.update_option("_xd_importing_count_entries", $count_entries) - {'option'}
	WordPressStorageDetector.delete_option("_xd_importing_step") - {'option'}
	WordPressStorageDetector.update_option("_xd_cache_temp_array_IDs", $id_list) - {'option'}
	WordPressRetrievalDetector.get_option("xd_test_importation_list") - {'option'}
	WordPressStorageDetector.delete_option("_xd_importing_start") - {'option'}
	WordPressRetrievalDetector.get_option("stylesheet") - {'option'}
	WordPressStorageDetector.update_option("_xd_erasing_step", $step + 1) - {'option'}
	WordPressRetrievalDetector.get_option("_xd_cache_temp_array_IDs") - {'option'}
	WordPressRetrievalDetector.get_option("stylesheet") - {'option'}
	WordPressStorageDetector.update_option("_xd_importing_step", $step + 1) - {'option'}
	WordPressRetrievalDetector.get_option("stylesheet") - {'option'}
	WordPressRetrievalDetector.get_option("template") - {'option'}
	WordPressRetrievalDetector.get_option("_xd_importing_count_entries", $max + 1) - {'option'}
	WordPressRetrievalDetector.get_option("_xd_deletion_type") - {'option'}
	WordPressStorageDetector.update_option("_xd_importing_start", 0) - {'option'}
	WordPressStorageDetector.update_option("xd_test_importation", $selectplugin_domain) - {'option'}
	WordPressStorageDetector.delete_option("_xd_erasing_count_lines") - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $this->xili_settings) - {'option'}
	WordPressRetrievalDetector.get_option("_xd_importing_start", 0) - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $this->xili_settings) - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $this->xili_settings) - {'option'}
	WordPressStorageDetector.delete_option("xd_test_importation") - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $this->xili_settings) - {'option'}
	WordPressRetrievalDetector.get_option("xd_test_importation_list", []) - {'option'}
	WordPressRetrievalDetector.get_option("xd_test_importation_list", []) - {'option'}
	WordPressStorageDetector.delete_option("xd_test_importation") - {'option'}
	WordPressStorageDetector.delete_option("xd_test_importation_list") - {'option'}
	WordPressRetrievalDetector.get_option("xili_language_pll_languages") - {'option'}
	WordPressRetrievalDetector.get_option("xd_test_importation", false) - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $this->xili_settings) - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $this->xili_settings) - {'option'}
	WordPressStorageDetector.delete_option("_xd_deletion_type") - {'option'}
	WordPressRetrievalDetector.get_option("xili_language_pll_term_category_groups") - {'option'}
	WordPressRetrievalDetector.get_option("template") - {'option'}
	WordPressRetrievalDetector.get_option("xd_test_importation", false) - {'option'}
	WordPressStorageDetector.delete_option("_xd_importing_step") - {'option'}
	DeletionDetector.delete_option("_xd_cache_temp_array_IDs") - {'option'}
	WordPressRetrievalDetector.get_option("template") - {'option'}
	DeletionDetector.delete_option("_xd_erasing_step") - {'option'}
	WordPressRetrievalDetector.get_option("WPLANG", "") - {'option'}
	DeletionDetector.delete_option("xd_test_importation_list") - {'option'}
	WordPressStorageDetector.update_option("_xd_importing_start", $max + 1) - {'option'}
	WordPressRetrievalDetector.get_option("template") - {'option'}
	WordPressRetrievalDetector.get_option("template") - {'option'}
	DeletionDetector.delete_option("_xd_deletion_type") - {'option'}
	WordPressRetrievalDetector.get_option("xd_test_importation", false) - {'option'}
	WordPressStorageDetector.update_option("_xd_importing_start", 0) - {'option'}
	WordPressRetrievalDetector.get_option("template") - {'option'}
	WordPressStorageDetector.update_option("_xd_importing_step", $step + 1) - {'option'}
	WordPressStorageDetector.delete_option("_xd_cache_pomo_file") - {'option'}
	WordPressRetrievalDetector.get_option("polylang") - {'option'}
	WordPressStorageDetector.delete_option("_xd_importing_count_entries") - {'option'}
	WordPressRetrievalDetector.get_option("time_format") - {'option'}
	DeletionDetector.delete_option("xd_test_importation") - {'option'}
	WordPressStorageDetector.update_option("_xd_importing_step", 1) - {'option'}
	DeletionDetector.delete_option("xd_test_importation_list") - {'option'}
	WordPressRetrievalDetector.get_option("date_format") - {'option'}
	WordPressRetrievalDetector.get_option("xili_language_settings", false) - {'option'}
	WordPressRetrievalDetector.get_option("xd_test_importation", "") - {'option'}
	WordPressStorageDetector.update_option("_xd_importing_start", 0) - {'option'}
	DeletionDetector.delete_option("_xd_erasing_start") - {'option'}
	WordPressRetrievalDetector.get_option("xd_test_importation", "") - {'option'}
	DeletionDetector.delete_option("xd_test_importation") - {'option'}
	WordPressStorageDetector.update_option("_xd_importing_start", 0) - {'option'}
	DeletionDetector.delete_option("_xd_importing_start") - {'option'}
	DeletionDetector.delete_option("_xd_importing_step") - {'option'}
	WordPressStorageDetector.update_option("_xd_importing_step", $step + 1) - {'option'}
	DeletionDetector.delete_option("_xd_importing_step") - {'option'}
	WordPressStorageDetector.delete_option("_xd_importing_step") - {'option'}
	WordPressRetrievalDetector.get_option("_xd_erasing_step") - {'option'}
	WordPressRetrievalDetector.get_option("template") - {'option'}
	WordPressRetrievalDetector.get_option("default_ping_status") - {'option'}
	WordPressStorageDetector.delete_option("_xd_importing_start") - {'option'}
	WordPressRetrievalDetector.get_option("_xd_cache_pomo_file", false) - {'option'}
	WordPressStorageDetector.update_option("_xd_erasing_start", 0) - {'option'}
	WordPressStorageDetector.update_option("_xd_cache_pomo_file", $entries) - {'option'}
	WordPressRetrievalDetector.get_option("xili_dictionary_settings") - {'option'}
	DeletionDetector.delete_option("_xd_cache_pomo_file") - {'option'}
	WordPressRetrievalDetector.get_option("_xd_importing_step", 1) - {'option'}
	WordPressStorageDetector.delete_option("_xd_cache_pomo_file") - {'option'}
	WordPressRetrievalDetector.get_option("template") - {'option'}
	WordPressRetrievalDetector.get_option("_xd_erasing_step", 1) - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $this->xili_settings) - {'option'}
	WordPressRetrievalDetector.get_option("xili_dictionary_settings") - {'option'}
	DeletionDetector.delete_option("_xd_erasing_step") - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $this->xili_settings) - {'option'}
	WordPressStorageDetector.update_option("_xd_cache_pomo_file", $temp_po) - {'option'}
	WordPressStorageDetector.delete_option("_xd_importing_count_entries") - {'option'}
	WordPressRetrievalDetector.get_option("_xd_erasing_count_lines", $max + 1) - {'option'}
	WordPressRetrievalDetector.get_option("_xd_erasing_start", 0) - {'option'}
	DeletionDetector.delete_option("_xd_importing_count_entries") - {'option'}
	WordPressRetrievalDetector.get_option("template") - {'option'}
	WordPressStorageDetector.update_option("xili_dictionary_settings", $this->xili_settings) - {'option'}
	WordPressRetrievalDetector.get_option("_xd_importing_step") - {'option'}
	DeletionDetector.delete_option("_xd_importing_step") - {'option'}
	WordPressStorageDetector.delete_option("_xd_erasing_start") - {'option'}
	WordPressRetrievalDetector.get_option("stylesheet") - {'option'}
	WordPressStorageDetector.update_option("xd_test_importation_list", $this->domain_to_detect_list) - {'option'}
	WordPressRetrievalDetector.get_option("template") - {'option'}
	WordPressStorageDetector.update_option("_xd_erasing_step", 1) - {'option'}
	WordPressStorageDetector.delete_option("_xd_erasing_step") - {'option'}
	DeletionDetector.delete_option("_xd_importing_start") - {'option'}
	WordPressStorageDetector.delete_option("_xd_erasing_step") - {'option'}
	WordPressStorageDetector.update_option("_xd_erasing_step", $step + 1) - {'option'}
	WordPressStorageDetector.delete_option("_xd_cache_temp_array_IDs") - {'option'}
post
	DeletionDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($post_id, ARRAY_A) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($mo_id, OBJECT) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($plural_ID) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($oneline->ID, false) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($oneline->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($cur_msgstr_ID) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($cur_msgstr_ID) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
post_meta
	WordPressRetrievalDetector.get_post_meta($post_id, $this->msgtype_meta, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgid_post_ID, $this->msglang_meta, $thelangs) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($target_id, $this->msg_flags, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($parent, $this->msgchild_meta, $thechilds) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($all_post->ID, $this->msg_sort_slug, sanitize_title($all_post->post_content)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($target_id, $this->msg_translator_comments, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msg_sort_slug, sanitize_title($post->post_content)) - {'post_meta'}
	DeletionDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msg_sort_slug, sanitize_title($thepost->post_content)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, $this->msgidlang_meta, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post_meta($id, $this->msgidlang_meta, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, $this->msgtype_meta, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, $this->msgtype_meta, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($msgid_ID, $this->msglang_meta, false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($msgid_ID, $this->msglang_meta, false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, $this->msgidlang_meta, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msg_flags, $flags) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, $this->ctxt_meta, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($parent, $this->msgchild_meta, false) - {'post_meta'}
	DeletionDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.update_post_meta($msgstr_post_ID_plural, $this->msgidlang_meta, $msgid_post_ID) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($found_others[0], $this->ctxt_meta, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($msgid_ID, $this->msglang_meta, false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($strid, $this->msgchild_meta, false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msg_flags, $flags) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgid_ID, $this->msglang_meta, $thelangs) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($onepost["ID"], $this->msgtype_meta, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, $this->msgtype_meta, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id, ARRAY_A) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msg_translator_comments, $translator_comments) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($cur_msgid->ID, $this->msgchild_meta, false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, $this->msgtype_meta, true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, $this->ctxt_meta) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, $this->msglang_meta, false) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($msgid_ID, $this->msglang_meta) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($parent, $this->msgchild_meta, $thechilds) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msgtype_meta, $type) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($target_id, $this->msg_extracted_comments, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($cur_msgid->ID, $this->msg_extracted_comments, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($msgid_post_ID, $this->msglang_meta, false) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msglang_meta, []) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, $this->msgchild_meta, false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgid_ID, $this->msglang_meta, $thelangs) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($parent, $this->msgchild_meta, $thechilds) - {'post_meta'}
	WordPressRetrievalDetector.get_post($mo_id, OBJECT) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msg_sort_slug, sanitize_title($content)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $msgid_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msg_extracted_comments, $this->local_tag . " ") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $this->ctxt_meta, $ctxt) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msg_flags, $flags) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, $this->msgidlang_meta, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($msgid_ID, $this->msglang_meta, false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msgtype_meta, $type) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msg_translator_comments, $translator_comments) - {'post_meta'}
	DeletionDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msg_extracted_comments, $extracted_comments) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($strid, $this->msgchild_meta, false) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($msgid_ID, $this->msglang_meta) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, $this->msgidlang_meta, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, $this->msgtype_meta, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($one_id, $xili_dictionary->msgchild_meta, false) - {'post_meta'}
	DeletionDetector.delete_post_meta($msgid_ID, $this->msglang_meta) - {'post_meta'}
	WordPressRetrievalDetector.get_post($plural_ID) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $msgid_post_ID) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($msgid_post_ID, $this->msglang_meta, false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $this->msgtype_meta, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($id, $this->msglang_meta, $thelangs) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($one_id, $xili_dictionary->msglang_meta, false) - {'post_meta'}
	DeletionDetector.delete_post_meta($msgid_ID, $this->msglang_meta) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($msgid_post_ID, $this->msglang_meta, false) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, $this->ctxt_meta) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, $this->msgidlang_meta, true) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($oneline->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post_meta($list_msgstr[0]->ID, $this->msg_translator_comments, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($dictioline->ID, $this->ctxt_meta, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($cur_msgid->ID, $this->msg_flags, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($list_msgstr->ID, $this->msg_translator_comments, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($msgid_id, $this->msgchild_meta, false) - {'post_meta'}
	DeletionDetector.wp_delete_post($oneline->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post_meta($msgid_id, $this->msg_extracted_comments, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msg_translator_comments, $translator_comments) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msg_extracted_comments, $extracted_comments) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msg_flags, $flags) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($cur_msgid->ID, $this->ctxt_meta, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgid_post_ID, $this->msglang_meta, $thelangs) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($dictioline->ID, $this->msgtype_meta, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($cur_msgstr_ID) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post_meta($post_id, $this->ctxt_meta, true) - {'post_meta'}
	DeletionDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post_meta($cur_msgid->ID, $this->msg_extracted_comments, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($cur_msgstr_ID) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.update_post_meta($post_id, $this->ctxt_meta, $context) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($msgid_post_ID, $this->msglang_meta, false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($cur_msgid_ID, $this->msglang_meta, false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($cur_msgid->ID, $this->msg_flags, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, $this->msgidlang_meta, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($parent, $this->msgchild_meta, false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($msgid_ID, $this->msg_extracted_comments, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($parent, $this->msgchild_meta, false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($target_id, $this->ctxt_meta, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgid_id, $this->msglang_meta, $thelangs) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $msgid_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgstr_1_post_ID, $this->msgidlang_meta, $msgid_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msg_translator_comments, $translator_comments) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgid_id, $this->msg_extracted_comments, $extracted_comments) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $id) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($msgid_id, $this->msg_extracted_comments, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, $this->ctxt_meta, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($id, $this->msglang_meta, $thelangs) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, $this->msgtype_meta, true) - {'post_meta'}
	DeletionDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post_meta($post_id, $this->msgtype_meta, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($msgid_id, $this->msgchild_meta, false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgid_post_ID, $this->msglang_meta, $thelangs) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgid_id, $this->msglang_meta, $thelangs) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($msgid_id, $this->msglang_meta, false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, $this->msglang_meta, false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $msgid_post_ID) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, $this->msgtype_meta, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($id, $this->msglang_meta, $thelangs) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($one_id, $xili_dictionary->msgchild_meta, false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgid_id, $this->msg_extracted_comments, $extracted_comments) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgid_id, $this->msglang_meta, $thelangs) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $this->msglang_meta, []) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, $this->msg_translator_comments, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, $this->msg_flags, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgstr_1_post_ID, $this->msgidlang_meta, $msgid_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $msgid_post_ID) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, $this->msg_flags, true) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.update_post_meta($msgid_post_ID, $this->msglang_meta, $thelangs) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($onepost["ID"], $this->msglang_meta, []) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post_meta($id, $this->msgtype_meta, true) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
state
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
term
	DeletionDetector.wp_delete_term($t_id, TAXONAME) - {'term'}
user
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
user_meta
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), "dismissed_wp_pointers", true) - {'user_meta'}
wp_post
	DeletionDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($post_id, ARRAY_A) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($mo_id, OBJECT) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($plural_ID) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($oneline->ID, false) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($oneline->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($cur_msgstr_ID) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($cur_msgstr_ID) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($msgstrs->ID, false) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($one_id, false) - {'wp_post', 'post_meta', 'post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:49.371764.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 7768 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:01.249566.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 4096
1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
3000 STORE_REACHES edges created
4000 STORE_REACHES edges created
5000 STORE_REACHES edges created
6000 STORE_REACHES edges created
7000 STORE_REACHES edges created
7768 STORE_REACHES edges created
7768 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 122 nodes as PERSONAL
In total, tainted 122 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:07.608404.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:07:27.481721!
DELETION call to delete_post_meta($msgid_ID, $this->msglang_meta) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($msgid_ID, $this->msglang_meta) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, $this->ctxt_meta) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to wp_delete_term($t_id, TAXONAME) alters data types {'term'}. Passed arguments: 0: $term (int), 1: $taxonomy (string). Returns (bool|int|WP_Error).,None,None
DELETION call to delete_option("xd_test_importation") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("xd_test_importation_list") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("xd_test_importation") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("xd_test_importation_list") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to wp_delete_post($oneline->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to delete_option("_xd_erasing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_erasing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_erasing_start") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_erasing_count_lines") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_deletion_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_cache_temp_array_IDs") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_erasing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_erasing_start") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_erasing_count_lines") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_deletion_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_cache_temp_array_IDs") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to wp_delete_post($one_id, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post($msgstrs->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post($msgstrs->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post($one_id, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post($msgstrs->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post($msgstrs->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post($one_id, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to delete_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_importing_start") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_cache_pomo_file") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_importing_count_entries") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_importing_start") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_cache_pomo_file") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("_xd_importing_count_entries") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
RETRIEVAL call to fgets($extf).,None,None
RETRIEVAL call to file_get_contents($file_name).,None,None
RETRIEVAL call to file_get_contents($diskfile).,None,None
RETRIEVAL call to file($diskfile).,None,None
STORAGE call to fwrite(STDERR, "Usage: php pot-ext-meta.php EXT POT
").,None,None
STORAGE call to fwrite(STDERR, "Adds metadata from a WordPress theme or plugin file EXT to POT file
").,None,None
STORAGE call to fwrite($potf, $pot).,None,None
STORAGE call to fwrite($fp, $gz_text).,None,None
variable '$save_state' of personal types {'state'} is found.,,None
variable '$save_state' of personal types {'state'} is found.,,None
variable '$save_state' of personal types {'state'} is found.,,None
variable '$save_state' of personal types {'state'} is found.,,None
variable '$save_state' of personal types {'state'} is found.,,None
variable '$save_state' of personal types {'state'} is found.,,None
variable '$save_state' of personal types {'state'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$file_state' of personal types {'state'} is found.,,None
variable '$file_state' of personal types {'state'} is found.,,None
variable '$file_state' of personal types {'state'} is found.,,None
variable '$file_state' of personal types {'state'} is found.,,None
variable '$file_state' of personal types {'state'} is found.,,None
variable '$file_state' of personal types {'state'} is found.,,None
variable '$file_state' of personal types {'state'} is found.,,None
variable '$file_state' of personal types {'state'} is found.,,None
variable '$file_state' of personal types {'state'} is found.,,None
variable '$file_state' of personal types {'state'} is found.,,None
variable '$file_state' of personal types {'state'} is found.,,None
variable '$file_state' of personal types {'state'} is found.,,None
RETRIEVAL call to get_post_meta($post_id, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($parent, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, $this->msgidlang_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($msgid_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, $this->msgidlang_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($msgid_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($msgid_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($parent, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, $this->ctxt_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($found_others[0], $this->ctxt_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, $this->msgidlang_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($msgid_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, $this->ctxt_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($msgid_post_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($msgid_post_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("default_ping_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($parent, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id, ARRAY_A) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("xili_dictionary_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xili_dictionary_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, $this->msgidlang_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($msgid_ID, $this->msg_extracted_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, $this->msgidlang_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($target_id, $this->ctxt_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($target_id, $this->msg_extracted_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($target_id, $this->msg_translator_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($target_id, $this->msg_flags, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, $this->msg_translator_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, $this->msg_flags, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, $this->msg_flags, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, $this->msgidlang_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($msgid_id, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($msgid_id, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($msgid_id, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($msgid_id, $this->msg_extracted_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($msgid_id, $this->msg_extracted_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($strid, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, $this->ctxt_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($strid, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, $this->msgidlang_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xd_test_importation", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("xd_test_importation", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("xili_language_settings", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("xd_test_importation", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("stylesheet") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xd_test_importation_list", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("xd_test_importation", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("xd_test_importation", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("xd_test_importation", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("WPLANG", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("polylang") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xd_test_importation_list", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("stylesheet") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "s" => $tagsnamesearch, "tax_query" => [["taxonomy" => TAXONAME, "field" => "name", "terms" => $curlang]], "meta_query" => [["key" => $this->msgtype_meta, "value" => ["msgstr", "msgstr_0", "msgstr_1"], "compare" => "IN"]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "meta_key" => $meta_key_val, "meta_value" => $meta_value_val, "post_type" => XDMSG, "suppress_filters" => true, "s" => $tagsnamesearch]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($dictioline->ID, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($dictioline->ID, $this->ctxt_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xili_dictionary_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xili_dictionary_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => ["relation" => "AND", ["key" => $this->msgtype_meta, "value" => "msgid", "compare" => "="], ["key" => $this->msglang_meta, "value" => $curlang, "compare" => $like]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => ["relation" => "AND", ["key" => $this->msgtype_meta, "value" => "msgid", "compare" => "="], ["key" => $this->msglang_meta, "value" => $curlang, "compare" => "LIKE"], ["key" => $this->msg_extracted_comments, "value" => $extract, "compare" => "LIKE"]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => $meta_query]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => $meta_query, "tax_query" => [$array_tax]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => [["meta_key" => $meta_key_val, "meta_value" => $meta_value_val]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => $meta_query, "tax_query" => [$array_tax]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["numberposts" => -1, "offset" => 0, "category" => 0, "orderby" => "ID", "order" => "ASC", "include" => [], "exclude" => [], "post_type" => XDMSG, "suppress_filters" => true, "meta_query" => ["relation" => "AND", ["key" => $this->msgtype_meta, "value" => "msgid", "compare" => "="], ["key" => $this->msg_extracted_comments, "value" => $extract, "compare" => $like_or_not]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($cur_msgid_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($cur_msgstr_ID) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post($cur_msgstr_ID) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($cur_msgid->ID, $this->ctxt_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($cur_msgid->ID, $this->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($plural_ID) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($list_msgstr->ID, $this->msg_translator_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($list_msgstr[0]->ID, $this->msg_translator_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($cur_msgid->ID, $this->msg_extracted_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($cur_msgid->ID, $this->msg_flags, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($cur_msgid->ID, $this->msg_extracted_comments, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($cur_msgid->ID, $this->msg_flags, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("stylesheet") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($msgid_post_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xd_test_importation_list", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("xd_test_importation", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("xd_test_importation_list") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($msgid_post_ID, $this->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($onepost["ID"], $this->msgtype_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("_xd_erasing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("_xd_erasing_step", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("_xd_erasing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("_xd_erasing_count_lines", $max + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("_xd_erasing_count_lines", $max + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("_xd_erasing_count_lines", $max + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("_xd_cache_temp_array_IDs") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("_xd_deletion_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($one_id, $xili_dictionary->msglang_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($one_id, $xili_dictionary->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($one_id, $xili_dictionary->msgchild_meta, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($query). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("_xd_importing_step", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("_xd_importing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("_xd_importing_count_entries", $max + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("template") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("_xd_cache_pomo_file", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("stylesheet") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xili_language_pll_term_category_groups") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xili_language_pll_languages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($mo_id, OBJECT) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("stylesheet") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), "dismissed_wp_pointers", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to update_post_meta($parent, $this->msgchild_meta, $thechilds) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgid_ID, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($msgid_ID, $this->msglang_meta) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($msgid_ID, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($msgid_ID, $this->msglang_meta) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($parent, $this->msgchild_meta, $thechilds) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msgtype_meta, $type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msglang_meta, []) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msg_extracted_comments, $this->local_tag . " ") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msg_sort_slug, sanitize_title($post->post_content)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgid_post_ID, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $msgid_post_ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgstr_post_ID_plural, $this->msgidlang_meta, $msgid_post_ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgid_post_ID, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post($params). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, $this->ctxt_meta, $context) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msgtype_meta, $type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msg_extracted_comments, $extracted_comments) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msg_translator_comments, $translator_comments) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msg_flags, $flags) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msglang_meta, []) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msg_translator_comments, $translator_comments) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msg_sort_slug, sanitize_title($content)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($parent, $this->msgchild_meta, $thechilds) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post($postarr). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, $this->msg_extracted_comments, $extracted_comments) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msg_translator_comments, $translator_comments) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msg_flags, $flags) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msg_translator_comments, $translator_comments) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->ctxt_meta, $ctxt) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, $this->ctxt_meta) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msg_sort_slug, sanitize_title($thepost->post_content)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msg_flags, $flags) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->msg_flags, $flags) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgid_id, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $msgid_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgid_id, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $msgid_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgid_id, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgstr_1_post_ID, $this->msgidlang_meta, $msgid_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgid_id, $this->msg_extracted_comments, $extracted_comments) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgid_id, $this->msg_extracted_comments, $extracted_comments) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($id, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($id, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($id, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgstr_1_post_ID, $this->msgidlang_meta, $msgid_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($all_post->ID, $this->msg_sort_slug, sanitize_title($all_post->post_content)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("xd_test_importation", $selectplugin_domain) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("xd_test_importation") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("xd_test_importation_list") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("xd_test_importation") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("xd_test_importation_list") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_delete_post($oneline->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to update_option("xili_dictionary_settings", $submitted_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($msgid_post_ID, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $msgid_post_ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("xd_test_importation_list", $this->domain_to_detect_list) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($msgid_post_ID, $this->msglang_meta, $thelangs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($msgstr_post_ID, $this->msgidlang_meta, $msgid_post_ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($onepost["ID"], $this->msglang_meta, []) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_option("_xd_erasing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("_xd_erasing_step", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_erasing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_erasing_step", $step + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_erasing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_erasing_count_lines", $count_lines) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("_xd_erasing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("_xd_erasing_start") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("_xd_erasing_count_lines") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("_xd_deletion_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("_xd_cache_temp_array_IDs") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("_xd_erasing_step", $step + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_erasing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_erasing_start", $max + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("_xd_erasing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("_xd_erasing_start") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("_xd_erasing_count_lines") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("_xd_deletion_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("_xd_cache_temp_array_IDs") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to wp_delete_post($one_id, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to wp_delete_post($msgstrs->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to wp_delete_post($msgstrs->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to wp_delete_post($one_id, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to wp_delete_post($msgstrs->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to wp_delete_post($msgstrs->ID, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to wp_delete_post($one_id, false) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to update_option("_xd_cache_temp_array_IDs", $id_list) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_deletion_type", $deletion_type) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("xili_dictionary_settings", $this->xili_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_importing_step", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_importing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_importing_step", $step + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_importing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_importing_count_entries", $count_entries) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("_xd_importing_start") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("_xd_cache_pomo_file") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("_xd_importing_count_entries") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("_xd_importing_step", $step + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_importing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_importing_step", $step + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_importing_start", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_importing_start", $max + 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("_xd_importing_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("_xd_importing_start") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("_xd_cache_pomo_file") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("_xd_importing_count_entries") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("_xd_cache_pomo_file", $entries) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("_xd_cache_pomo_file", $temp_po) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
