Timeout in resolving values
Timeout in running neo4j query
Running Main.py on cod-confirmation-for-india

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.844362.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.319613.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.280386.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.827560.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 463 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.005175.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.582086.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.091778.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 212 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:06.039673.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 3447
Added 2771 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 25356
Added 21909 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:03.111819.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cod-confirmation-for-india/all_transactions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cod-confirmation-for-india/call-confirm.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cod-confirmation-for-india/cod_orders.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cod-confirmation-for-india/cod_setting.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cod-confirmation-for-india/export_csv.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cod-confirmation-for-india/help.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cod-confirmation-for-india/muyplg.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cod-confirmation-for-india/order_place.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cod-confirmation-for-india/sms-confirm.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.878943.

1 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3446 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
21909 PHP_REACHES edges created
25356 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1262 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.121929.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:08.389713.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 32 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.122500.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 18 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.150333.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.857091.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.254318.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.009385.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.038124.

50 PHP_REACHES edges created
50 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 32 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.120930.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
22 SQL operations to process.
SELECT order_confirm,order_cancel,order_pending,order_cancel_mode,order_status_change FROM $wpdbCOD_settings WHERE id = 1
SELECT order_confirm,order_cancel,order_pending,order_cancel_mode,order_status_change FROM $wpdbCOD_settings WHERE id = 1
SQL command (SELECT order_confirm,order_cancel,order_pending,order_cancel_mode,order_status_change FROM $wpdbCOD_settings WHERE id = 1) cannot be parsed correct.
ALTER TABLE `$wpdbCOD_settings` ADD `order_status_change` ENUM('1','0') NOT NULL DEFAULT '1' AFTER `pause_plug`
SQL command (ALTER TABLE `$wpdbCOD_settings` ADD `order_status_change` ENUM('1','0') NOT NULL DEFAULT '1' AFTER `pause_plug`) cannot be parsed correct.
SELECT order_confirm,order_cancel,order_pending,order_cancel_mode,order_status_change FROM $wpdbCOD_settings WHERE id = 1
SQL command (SELECT order_confirm,order_cancel,order_pending,order_cancel_mode,order_status_change FROM $wpdbCOD_settings WHERE id = 1) cannot be parsed correct.
UPDATE $wpdbCOD_settings SET order_confirm='sanitize_text_field($_POST["order_confirm"])',order_cancel='sanitize_text_field($_POST["order_cancel"])',order_pending='sanitize_text_field($_POST["order_pending"])',pause_plug='0',order_cancel_mode='filter_input(INPUT_POST, "cancel_mode", FILTER_SANITIZE_NUMBER_INT)',app_mode='1',request_btn='0',order_contact='',call_btn='0',cancel_btn='0',owner_phno='',order_status_change='filter_input(INPUT_POST, "order_status_change", FILTER_SANITIZE_NUMBER_INT)',IVR_call_message='sanitize_text_field($_POST["IVR_call_message"])',IVR_confirm_message='sanitize_text_field($_POST["IVR_confirm_message"])',IVR_cancel_message='sanitize_text_field($_POST["IVR_cancel_message"])' WHERE id = 1
UPDATE $wpdbCOD_settings SET order_confirm='sanitize_text_field($_POST["order_confirm"])',order_cancel='sanitize_text_field($_POST["order_cancel"])',order_pending='sanitize_text_field($_POST["order_pending"])',pause_plug='0',order_cancel_mode='filter_input(INPUT_POST, "cancel_mode", FILTER_SANITIZE_NUMBER_INT)',app_mode='1',request_btn='0',order_contact='',call_btn='0',cancel_btn='0',owner_phno='',order_status_change='filter_input(INPUT_POST, "order_status_change", FILTER_SANITIZE_NUMBER_INT)',IVR_call_message='sanitize_text_field($_POST["IVR_call_message"])',IVR_confirm_message='sanitize_text_field($_POST["IVR_confirm_message"])',IVR_cancel_message='sanitize_text_field($_POST["IVR_cancel_message"])' WHERE id = 1
SQL command (UPDATE $wpdbCOD_settings SET order_confirm='sanitize_text_field($_POST["order_confirm"])',order_cancel='sanitize_text_field($_POST["order_cancel"])',order_pending='sanitize_text_field($_POST["order_pending"])',pause_plug='0',order_cancel_mode='filter_input(INPUT_POST, "cancel_mode", FILTER_SANITIZE_NUMBER_INT)',app_mode='1',request_btn='0',order_contact='',call_btn='0',cancel_btn='0',owner_phno='',order_status_change='filter_input(INPUT_POST, "order_status_change", FILTER_SANITIZE_NUMBER_INT)',IVR_call_message='sanitize_text_field($_POST["IVR_call_message"])',IVR_confirm_message='sanitize_text_field($_POST["IVR_confirm_message"])',IVR_cancel_message='sanitize_text_field($_POST["IVR_cancel_message"])' WHERE id = 1) cannot be parsed correct.
SELECT IVR_call_message FROM $wpdbCOD_settings WHERE id = 1
SELECT IVR_call_message FROM $wpdbCOD_settings WHERE id = 1
SQL command (SELECT IVR_call_message FROM $wpdbCOD_settings WHERE id = 1) cannot be parsed correct.
ALTER TABLE `$wpdbCOD_settings` ADD `IVR_call_message` VARCHAR(500) NOT NULL  DEFAULT 'thank you for your order , this is an order confirmation call , please press {Confirmation_Digit} to confirm OR press {Cancellation_Digit} to cancel your order' AFTER `app_mode`, ADD `IVR_confirm_message` VARCHAR(300) NOT NULL  DEFAULT 'thank you , your order has been confirmed' AFTER `IVR_call_message`, ADD `IVR_cancel_message` VARCHAR(300) NOT NULL  DEFAULT 'ok , your order has been cancelled' AFTER `IVR_confirm_message`
SQL command (ALTER TABLE `$wpdbCOD_settings` ADD `IVR_call_message` VARCHAR(500) NOT NULL DEFAULT 'thank you for your order , this is an order confirmation call , please press {Confirmation_Digit} to confirm OR press {Cancellation_Digit} to cancel your order' AFTER `app_mode`, ADD `IVR_confirm_message` VARCHAR(300) NOT NULL DEFAULT 'thank you , your order has been confirmed' AFTER `IVR_call_message`, ADD `IVR_cancel_message` VARCHAR(300) NOT NULL DEFAULT 'ok , your order has been cancelled' AFTER `IVR_confirm_message`) cannot be parsed correct.
SELECT order_confirm,order_cancel,order_pending,pause_plug,order_cancel_mode,app_mode,request_btn,order_contact,cancel_btn,call_btn,owner_phno,order_status_change,IVR_call_message,IVR_confirm_message,IVR_cancel_message FROM $wpdbCOD_settings WHERE id = 1
SELECT order_confirm,order_cancel,order_pending,pause_plug,order_cancel_mode,app_mode,request_btn,order_contact,cancel_btn,call_btn,owner_phno,order_status_change,IVR_call_message,IVR_confirm_message,IVR_cancel_message FROM $wpdbCOD_settings WHERE id = 1
SQL command (SELECT order_confirm,order_cancel,order_pending,pause_plug,order_cancel_mode,app_mode,request_btn,order_contact,cancel_btn,call_btn,owner_phno,order_status_change,IVR_call_message,IVR_confirm_message,IVR_cancel_message FROM $wpdbCOD_settings WHERE id = 1) cannot be parsed correct.
ALTER TABLE `$wpdbCOD_settings` ADD `order_status_change` ENUM('1','0') NOT NULL DEFAULT '1' AFTER `pause_plug`
SQL command (ALTER TABLE `$wpdbCOD_settings` ADD `order_status_change` ENUM('1','0') NOT NULL DEFAULT '1' AFTER `pause_plug`) cannot be parsed correct.
SELECT order_confirm,order_cancel,order_pending,pause_plug,order_cancel_mode,app_mode,request_btn,order_contact,cancel_btn,call_btn,owner_phno,order_status_change FROM $wpdbCOD_settings WHERE id = 1
SELECT order_confirm,order_cancel,order_pending,pause_plug,order_cancel_mode,app_mode,request_btn,order_contact,cancel_btn,call_btn,owner_phno,order_status_change FROM $wpdbCOD_settings WHERE id = 1
SQL command (SELECT order_confirm,order_cancel,order_pending,pause_plug,order_cancel_mode,app_mode,request_btn,order_contact,cancel_btn,call_btn,owner_phno,order_status_change FROM $wpdbCOD_settings WHERE id = 1) cannot be parsed correct.
SELECT order_confirm,order_cancel,order_pending,pause_plug,order_cancel_mode,app_mode,request_btn,order_contact,cancel_btn,call_btn,owner_phno,order_status_change,IVR_call_message,IVR_confirm_message,IVR_cancel_message FROM $wpdbCOD_settings WHERE id = 1
SQL command (SELECT order_confirm,order_cancel,order_pending,pause_plug,order_cancel_mode,app_mode,request_btn,order_contact,cancel_btn,call_btn,owner_phno,order_status_change,IVR_call_message,IVR_confirm_message,IVR_cancel_message FROM $wpdbCOD_settings WHERE id = 1) cannot be parsed correct.
CREATE TABLE `$wpdbCOD_settings` (
          `id` int(11) NOT NULL AUTO_INCREMENT,
          `order_confirm` varchar(255) NOT NULL,
          `order_cancel` varchar(255) NOT NULL,
          `order_pending` varchar(255) NOT NULL,
          `pause_plug` enum('0','1') NOT NULL DEFAULT '0',
          `order_status_change` enum('0','1') NOT NULL DEFAULT '1',
          `order_cancel_mode` enum('0','1') NOT NULL DEFAULT '1',
          `order_contact` varchar(255) NOT NULL,
          `owner_phno` bigint(20) NOT NULL,
          `request_btn` enum('0','1') NOT NULL DEFAULT '0',
          `call_btn` enum('0','1') NOT NULL DEFAULT '0',
          `cancel_btn` enum('0','1') NOT NULL DEFAULT '0',
          `app_mode` enum('1','2','3') NOT NULL DEFAULT '1',
          PRIMARY KEY (id)
        ) ENGINE=InnoDB DEFAULT CHARSET=latin1
SQL command (CREATE TABLE `$wpdbCOD_settings` ( `id` int(11) NOT NULL AUTO_INCREMENT, `order_confirm` varchar(255) NOT NULL, `order_cancel` varchar(255) NOT NULL, `order_pending` varchar(255) NOT NULL, `pause_plug` enum('0','1') NOT NULL DEFAULT '0', `order_status_change` enum('0','1') NOT NULL DEFAULT '1', `order_cancel_mode` enum('0','1') NOT NULL DEFAULT '1', `order_contact` varchar(255) NOT NULL, `owner_phno` bigint(20) NOT NULL, `request_btn` enum('0','1') NOT NULL DEFAULT '0', `call_btn` enum('0','1') NOT NULL DEFAULT '0', `cancel_btn` enum('0','1') NOT NULL DEFAULT '0', `app_mode` enum('1','2','3') NOT NULL DEFAULT '1', PRIMARY KEY (id) ) ENGINE=InnoDB DEFAULT CHARSET=latin1) cannot be parsed correct.
INSERT INTO $wpdbCOD_settings (app_mode,order_status_change,order_confirm,order_cancel,order_pending,pause_plug,order_cancel_mode,cancel_btn) VALUES ('1','1','Order Confirmed','Order Canceled','Order Pending','0','1','0')
SQL command (INSERT INTO $wpdbCOD_settings (app_mode,order_status_change,order_confirm,order_cancel,order_pending,pause_plug,order_cancel_mode,cancel_btn) VALUES ('1','1','Order Confirmed','Order Canceled','Order Pending','0','1','0')) cannot be parsed correct.
CREATE TABLE `$table_prefixCOD_settings` (
              `id` int(11) NOT NULL AUTO_INCREMENT,
              `order_confirm` varchar(255) NOT NULL,
              `order_cancel` varchar(255) NOT NULL,
              `order_pending` varchar(255) NOT NULL,
              `pause_plug` enum('0','1') NOT NULL DEFAULT '0',
              `order_cancel_mode` enum('0','1') NOT NULL DEFAULT '1',
              `order_contact` varchar(255) NOT NULL,
              `owner_phno` bigint(20) NOT NULL,
              `request_btn` enum('0','1') NOT NULL DEFAULT '0',
              `call_btn` enum('0','1') NOT NULL DEFAULT '0',
              `cancel_btn` enum('0','1') NOT NULL DEFAULT '1',
              `app_mode` enum('1','2','3') NOT NULL DEFAULT '1',
              `IVR_call_message` VARCHAR(500) NOT NULL  DEFAULT 'thank you for your order , this is an order confirmation call , please press {Confirmation_Digit} to confirm OR press {Cancellation_Digit} to cancel your order',
              `IVR_confirm_message` VARCHAR(300) NOT NULL  DEFAULT 'thank you , your order has been confirmed',
              `IVR_cancel_message` VARCHAR(300) NOT NULL  DEFAULT 'ok , your order has been cancelled',
              PRIMARY KEY (id)
            ) ENGINE=InnoDB DEFAULT CHARSET=latin1
SQL command (CREATE TABLE `$table_prefixCOD_settings` ( `id` int(11) NOT NULL AUTO_INCREMENT, `order_confirm` varchar(255) NOT NULL, `order_cancel` varchar(255) NOT NULL, `order_pending` varchar(255) NOT NULL, `pause_plug` enum('0','1') NOT NULL DEFAULT '0', `order_cancel_mode` enum('0','1') NOT NULL DEFAULT '1', `order_contact` varchar(255) NOT NULL, `owner_phno` bigint(20) NOT NULL, `request_btn` enum('0','1') NOT NULL DEFAULT '0', `call_btn` enum('0','1') NOT NULL DEFAULT '0', `cancel_btn` enum('0','1') NOT NULL DEFAULT '1', `app_mode` enum('1','2','3') NOT NULL DEFAULT '1', `IVR_call_message` VARCHAR(500) NOT NULL DEFAULT 'thank you for your order , this is an order confirmation call , please press {Confirmation_Digit} to confirm OR press {Cancellation_Digit} to cancel your order', `IVR_confirm_message` VARCHAR(300) NOT NULL DEFAULT 'thank you , your order has been confirmed', `IVR_cancel_message` VARCHAR(300) NOT NULL DEFAULT 'ok , your order has been cancelled', PRIMARY KEY (id) ) ENGINE=InnoDB DEFAULT CHARSET=latin1) cannot be parsed correct.
INSERT INTO $table_prefixCOD_settings (app_mode,order_confirm,order_cancel,order_pending,pause_plug,order_cancel_mode) VALUES ('1','Order Confirmed','Order Canceled','Order Pending','0','1')
SQL command (INSERT INTO $table_prefixCOD_settings (app_mode,order_confirm,order_cancel,order_pending,pause_plug,order_cancel_mode) VALUES ('1','Order Confirmed','Order Canceled','Order Pending','0','1')) cannot be parsed correct.
DROP table $wpdbCOD_settings
SQL command (DROP table $wpdbCOD_settings) cannot be parsed correct.
SELECT pause_plug,app_mode,order_status_change,IVR_call_message,IVR_confirm_message,IVR_cancel_message FROM `$wpdbCOD_settings` limit 1
SQL command (SELECT pause_plug,app_mode,order_status_change,IVR_call_message,IVR_confirm_message,IVR_cancel_message FROM `$wpdbCOD_settings` limit 1) cannot be parsed correct.
ALTER TABLE `$wpdbCOD_settings` ADD `order_status_change` ENUM('1','0') NOT NULL DEFAULT '1' AFTER `pause_plug`
SQL command (ALTER TABLE `$wpdbCOD_settings` ADD `order_status_change` ENUM('1','0') NOT NULL DEFAULT '1' AFTER `pause_plug`) cannot be parsed correct.
SELECT pause_plug,app_mode,order_status_change,IVR_call_message,IVR_confirm_message,IVR_cancel_message FROM `$wpdbCOD_settings` limit 1
SQL command (SELECT pause_plug,app_mode,order_status_change,IVR_call_message,IVR_confirm_message,IVR_cancel_message FROM `$wpdbCOD_settings` limit 1) cannot be parsed correct.
SELECT owner_phno,request_btn,call_btn,cancel_btn,order_status_change FROM $wpdbCOD_settings WHERE id = 1
SELECT owner_phno,request_btn,call_btn,cancel_btn,order_status_change FROM $wpdbCOD_settings WHERE id = 1
SQL command (SELECT owner_phno,request_btn,call_btn,cancel_btn,order_status_change FROM $wpdbCOD_settings WHERE id = 1) cannot be parsed correct.
ALTER TABLE `$wpdbCOD_settings` ADD `order_status_change` ENUM('1','0') NOT NULL DEFAULT '1' AFTER `pause_plug`
SQL command (ALTER TABLE `$wpdbCOD_settings` ADD `order_status_change` ENUM('1','0') NOT NULL DEFAULT '1' AFTER `pause_plug`) cannot be parsed correct.
SELECT owner_phno,request_btn,call_btn,cancel_btn,order_status_change FROM $wpdbCOD_settings WHERE id = 1
SQL command (SELECT owner_phno,request_btn,call_btn,cancel_btn,order_status_change FROM $wpdbCOD_settings WHERE id = 1) cannot be parsed correct.
SELECT order_confirm,order_cancel,order_pending,pause_plug,order_cancel_mode,order_contact,owner_phno,order_status_change FROM $wpdbCOD_settings WHERE id = 1
SELECT order_confirm,order_cancel,order_pending,pause_plug,order_cancel_mode,order_contact,owner_phno,order_status_change FROM $wpdbCOD_settings WHERE id = 1
SQL command (SELECT order_confirm,order_cancel,order_pending,pause_plug,order_cancel_mode,order_contact,owner_phno,order_status_change FROM $wpdbCOD_settings WHERE id = 1) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [175, 191, 204, 878, 903, 919, 947, 963, 991, 1001, 1034, 1052, 1955, 1973, 2094, 4266, 4282, 4295, 4617, 4633, 4646, 4790]
Added 0 SQL nodes. 0 out of 22 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:07.083539.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'COD_remote_call([], COD_SHOPIAPPS_URL . "msg_text.php")'' cannot be parsed correct.
HTML code '$'plugin_dir_url()'' cannot be parsed correct.
HTML code '$'wp_create_nonce("ajax-nonce")'' cannot be parsed correct.
HTML code '$'COD_remote_call([], COD_SHOPIAPPS_URL . "msg_text.php")'' cannot be parsed correct.
HTML code '$'plugin_dir_url()'' cannot be parsed correct.
HTML code '$'wp_create_nonce("ajax-nonce")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("ajax-nonce")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("ajax-nonce")'' cannot be parsed correct.
HTML code '$'COD_remote_call([], COD_SHOPIAPPS_URL . "msg_text.php")'' cannot be parsed correct.
HTML code '$'plugin_dir_url()'' cannot be parsed correct.
HTML code '$'plugin_dir_url()'' cannot be parsed correct.
HTML code '$'plugin_dir_url()'' cannot be parsed correct.
HTML code '$'json_decode($get_settings, true)_remain_bln'' cannot be parsed correct.
HTML code '$'plugin_dir_url()'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'$wpdb->query($ins)_0_order_confirm'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'$wpdb->query($ins)_0_order_pending'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'$wpdb->query($ins)_0_order_cancel'' cannot be parsed correct.
HTML code '$'display:none;'' cannot be parsed correct.
HTML code '$'json_decode($get_settings, true)_msg_text'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'display: none;'' cannot be parsed correct.
HTML code '$'$wpdb->query($ins)_0_order_contact'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'display: none;'' cannot be parsed correct.
HTML code '$'$wpdb->query($ins)_0_owner_phno'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'display:none;'' cannot be parsed correct.
HTML code '$'$wpdb->query($ins)_0_IVR_call_messagejson_decode($get_settings, true)_IVR_call_message'' cannot be parsed correct.
HTML code '$'$wpdb->query($ins)_0_IVR_confirm_messagejson_decode($get_settings, true)_IVR_confirm_message'' cannot be parsed correct.
HTML code '$'$wpdb->query($ins)_0_IVR_cancel_messagejson_decode($get_settings, true)_IVR_cancel_message'' cannot be parsed correct.
HTML code '$'json_decode($get_settings, true)_url'' cannot be parsed correct.
HTML code '$'json_decode($get_settings, true)_key'' cannot be parsed correct.
HTML code '$'json_decode($get_settings, true)_salt'' cannot be parsed correct.
HTML code '$'substr(hash("sha256", mt_rand() . microtime()), 0, 20)'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'httpshttp://$_SERVER_HTTP_HOST$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'httpshttp://$_SERVER_HTTP_HOST$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'COD_STORE_URL'' cannot be parsed correct.
HTML code '$'json_decode($get_settings, true)_salt'' cannot be parsed correct.
HTML code '$'stream_get_contents($fh)'' cannot be parsed correct.
HTML code '$'COD_remote_call(["action" => "Help", "shop" => COD_STORE_URL], COD_SHOPIAPPS_URL . "help.php")'' cannot be parsed correct.
HTML code '$'$posted_hash'' cannot be parsed correct.
HTML code '$'<h3>Woocommerce is compulsory for activate this plugin!</h3>'' cannot be parsed correct.
HTML code '$'COD_remote_call($params, $url)'' cannot be parsed correct.
HTML code '$'COD_remote_call($params, $url)'' cannot be parsed correct.
HTML code '$'COD_remote_call($params, $url)'' cannot be parsed correct.
HTML code '$'json_encode($resp)'' cannot be parsed correct.
HTML code '$'get_bloginfo("name")'' cannot be parsed correct.
HTML code '$'COD_order_data($order)_order_number'' cannot be parsed correct.
HTML code '$'$item_image'' cannot be parsed correct.
HTML code '$'$item_name'' cannot be parsed correct.
HTML code '$'get_woocommerce_currency_symbol()$item_price'' cannot be parsed correct.
HTML code '$'$item_quantity'' cannot be parsed correct.
HTML code '$'get_woocommerce_currency_symbol()$item_subtotal'' cannot be parsed correct.
HTML code '$'get_woocommerce_currency_symbol()COD_order_data($order)_total'' cannot be parsed correct.
HTML code '$'COD_order_data($order)_shipping_address_first_name COD_order_data($order)_shipping_address_last_name'' cannot be parsed correct.
HTML code '$'COD_order_data($order)_shipping_address_address_1'' cannot be parsed correct.
HTML code '$'COD_order_data($order)_shipping_address_state'' cannot be parsed correct.
HTML code '$'COD_order_data($order)_shipping_address_postcode'' cannot be parsed correct.
HTML code '$'COD_order_data($order)_billing_address_phone'' cannot be parsed correct.
HTML code '$'filter_input(INPUT_POST, "order_id", FILTER_SANITIZE_NUMBER_INT)'' cannot be parsed correct.
HTML code '$'filter_input(INPUT_GET, "wpse9870_api", FILTER_SANITIZE_NUMBER_INT)'' cannot be parsed correct.
HTML code '$'filter_input(INPUT_POST, "order_id", FILTER_SANITIZE_NUMBER_INT)'' cannot be parsed correct.
HTML code '$'filter_input(INPUT_GET, "wpse9870_api", FILTER_SANITIZE_NUMBER_INT)'' cannot be parsed correct.
HTML code '$'filter_input(INPUT_GET, "wpse9870_api", FILTER_SANITIZE_NUMBER_INT)'' cannot be parsed correct.
HTML code '$'home_url()'' cannot be parsed correct.
HTML code '$'$wpdb->get_results($sql, ARRAY_A)_0_owner_phno'' cannot be parsed correct.
HTML code '$'" />
    <input type="hidden" name="salt" value="'' cannot be parsed correct.
HTML code '$'" />
    <input type="hidden" name="hash" value=""/>
    <input type="hidden" name="txnid" value="'' cannot be parsed correct.
HTML code '$'" />
    <input type="hidden" name="amount" value="" />
    <input type="hidden" name="firstname" id="firstname" value="'' cannot be parsed correct.
HTML code '$'If you like <strong>COD Order Confirmation</strong> please leave us a <a href="https://wordpress.org/support/plugin/cod-confirmation-for-india/reviews/#new-post" target="_blank" data-rated="Thanks :)">âââââ</a> rating. A huge thanks in advance!'' cannot be parsed correct.
HTML code '$'Something went wrong!'' cannot be parsed correct.
HTML code '$'<h1 style=\'font-size: 35px;text-align: center;display:block;line-height: 2;\'>'' cannot be parsed correct.
HTML code '$'Thank you, Your order has been confirmed!'' cannot be parsed correct.
HTML code '$'Thank you, Your order has been cancelled!'' cannot be parsed correct.
HTML code '$'Thank you, Store owner will contact you soon!'' cannot be parsed correct.
HTML code '$'Thank you'' cannot be parsed correct.
HTML code '$'</h1>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:09.206178.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.048378.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 2 do_action/apply_filters calls and 14 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.652252.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running ArrayElementDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MsqlDetector
### Start running OpenSSLDetector
### Finish running HashDetector
### Start running ParadoxDetector
### Finish running MongoDbDetector
### Start running PasswordHashingDetector
### Finish running Oci8Detector
### Start running PhpCurlDetector
### Finish running OpenSSLDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running ParadoxDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PasswordHashingDetector
### Start running PhpVarDetector
### Finish running PHPRetrievalDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PHPIncludedDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running PHPStorageDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SqlServerDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running PropertyDetector
### Start running WordPressRetrievalDetector
### Finish running UserInputDetector
### Start running WordPressStorageDetector
### Finish running VariableDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running GenericDatabaseUsageDetector
### Start running GenericEncryptionDetector
### Finish running WordPressRemoteDetector
### Start running DeletionDetector
### Finish running WordPressRetrievalDetector
### Start running UninstallDetector
### Finish running GenericEncryptionDetector
### Finish running MySQLiDetector
### Finish running maxdbDetector
### Finish running WordPressStorageDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finished running detectors
cod_setting.php:125
  - hash called with approved hash algorithm sha256.
muyplg.php:198
  - hash called with approved hash algorithm sha256.
muyplg.php:228
  - hash called with approved hash algorithm sha512. 

export_csv.php:28
  - STORAGE call to fputcsv($fh, array_keys(current($json))).
  - Data types: file
export_csv.php:32
  - STORAGE call to fputcsv($fh, $row).
  - Data types: file 

cod_setting.php:118
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
muyplg.php:40
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
muyplg.php:191
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
muyplg.php:289
  - object property '$order->billing_first_name' of personal types {'first_name'} is found.
  - Data types: first_name
muyplg.php:290
  - object property '$order->billing_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
muyplg.php:292
  - object property '$order->billing_address_1' of personal types {'address'} is found.
  - Data types: address
muyplg.php:293
  - object property '$order->billing_address_2' of personal types {'address'} is found.
  - Data types: address
muyplg.php:294
  - object property '$order->billing_city' of personal types {'city'} is found.
  - Data types: city
muyplg.php:295
  - object property '$order->billing_state' of personal types {'state'} is found.
  - Data types: state
muyplg.php:296
  - object property '$order->billing_postcode' of personal types {'postcode'} is found.
  - Data types: postcode
muyplg.php:297
  - object property '$order->billing_country' of personal types {'country'} is found.
  - Data types: country
muyplg.php:298
  - object property '$order->billing_email' of personal types {'email'} is found.
  - Data types: email
muyplg.php:302
  - object property '$order->shipping_first_name' of personal types {'first_name'} is found.
  - Data types: first_name
muyplg.php:303
  - object property '$order->shipping_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
muyplg.php:305
  - object property '$order->shipping_address_1' of personal types {'address'} is found.
  - Data types: address
muyplg.php:306
  - object property '$order->shipping_address_2' of personal types {'address'} is found.
  - Data types: address
muyplg.php:307
  - object property '$order->shipping_city' of personal types {'city'} is found.
  - Data types: city
muyplg.php:308
  - object property '$order->shipping_state' of personal types {'state'} is found.
  - Data types: state
muyplg.php:309
  - object property '$order->shipping_postcode' of personal types {'postcode'} is found.
  - Data types: postcode
muyplg.php:310
  - object property '$order->shipping_country' of personal types {'country'} is found.
  - Data types: country 

cod_setting.php:118
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
cod_setting.php:119
  - variable '$user_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
cod_setting.php:367
  - variable '$user_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
cod_setting.php:369
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
muyplg.php:40
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
muyplg.php:41
  - variable '$user_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
muyplg.php:43
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email 

muyplg.php:439
  - API call to wp_remote_post($url, ["method" => "POST", "timeout" => 45, "redirection" => 5, "httpversion" => "1.0", "blocking" => true, "headers" => [], "body" => $params]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

cod_setting.php:116
  - RETRIEVAL call to get_users("role=Administrator") alters data types {'user_meta', 'user'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user_meta, user
muyplg.php:14
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
muyplg.php:38
  - RETRIEVAL call to get_users("role=Administrator") alters data types {'user_meta', 'user'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user_meta, user
muyplg.php:178
  - RETRIEVAL call to get_users("role=Administrator") alters data types {'user_meta', 'user'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user_meta, user
muyplg.php:264
  - RETRIEVAL call to get_post($order->id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
order_place.php:5
  - RETRIEVAL call to get_post_meta($order_id, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta 

call-confirm.php:19
  - STORAGE call to delete_post_meta($order_id, "Order Failed", "Confirmation failed by COD") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
call-confirm.php:21
  - STORAGE call to add_post_meta($order_id, "Order Confirm", $data["order_confirm"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
call-confirm.php:24
  - STORAGE call to add_post_meta($order_id, "Order Cancelled", $data["order_cancel"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
call-confirm.php:27
  - STORAGE call to add_post_meta($order_id, "Order Failed", "Confirmation failed by COD") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
sms-confirm.php:58
  - STORAGE call to add_post_meta($order_id, "Order Confirm", $data["order_confirm"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
sms-confirm.php:61
  - STORAGE call to add_post_meta($order_id, "Order Cancelled", $data["order_cancel"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
sms-confirm.php:65
  - STORAGE call to add_post_meta($order_id, "Order Failed", "Confirmation failed by COD") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
sms-confirm.php:68
  - STORAGE call to add_post_meta($order_id, "Contact to Customer", $data["order_contact"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
sms-confirm.php:71
  - STORAGE call to add_post_meta($order_id, "Customer called", "Customer has contacted to you") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta 

cod_setting.php:125
  - CRYPTOGRAPHY call to hash("sha256", mt_rand() . microtime()).
muyplg.php:198
  - CRYPTOGRAPHY call to hash("sha256", mt_rand() . microtime()).
muyplg.php:228
  - CRYPTOGRAPHY call to hash("sha512", trim($hash_string)). 

call-confirm.php:19
  - DELETION call to delete_post_meta($order_id, "Order Failed", "Confirmation failed by COD") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta 

By data type:
address
	PropertyDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
city
	PropertyDetector.(unknown) - {'city'}
	PropertyDetector.(unknown) - {'city'}
country
	PropertyDetector.(unknown) - {'country'}
	PropertyDetector.(unknown) - {'country'}
email
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
file
	PHPStorageDetector.fputcsv($fh, $row) - {'file'}
	PHPStorageDetector.fputcsv($fh, array_keys(current($json))) - {'file'}
first_name
	PropertyDetector.(unknown) - {'first_name'}
	PropertyDetector.(unknown) - {'first_name'}
last_name
	PropertyDetector.(unknown) - {'last_name'}
	PropertyDetector.(unknown) - {'last_name'}
none
	GenericEncryptionDetector.hash("sha256", mt_rand() . microtime()) - set()
	HashDetector.(unknown) - set()
	HashDetector.(unknown) - set()
	GenericEncryptionDetector.hash("sha256", mt_rand() . microtime()) - set()
	HashDetector.(unknown) - set()
	GenericEncryptionDetector.hash("sha512", trim($hash_string)) - set()
option
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
post
	WordPressRetrievalDetector.get_post($order->id) - {'post_meta', 'wp_post', 'post'}
post_meta
	WordPressStorageDetector.delete_post_meta($order_id, "Order Failed", "Confirmation failed by COD") - {'post_meta'}
	WordPressStorageDetector.add_post_meta($order_id, "Order Failed", "Confirmation failed by COD") - {'post_meta'}
	WordPressStorageDetector.add_post_meta($order_id, "Order Failed", "Confirmation failed by COD") - {'post_meta'}
	WordPressStorageDetector.add_post_meta($order_id, "Order Cancelled", $data["order_cancel"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post($order->id) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.add_post_meta($order_id, "Customer called", "Customer has contacted to you") - {'post_meta'}
	WordPressStorageDetector.add_post_meta($order_id, "Contact to Customer", $data["order_contact"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_payment_method", true) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($order_id, "Order Confirm", $data["order_confirm"]) - {'post_meta'}
	DeletionDetector.delete_post_meta($order_id, "Order Failed", "Confirmation failed by COD") - {'post_meta'}
	WordPressStorageDetector.add_post_meta($order_id, "Order Confirm", $data["order_confirm"]) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($order_id, "Order Cancelled", $data["order_cancel"]) - {'post_meta'}
postcode
	PropertyDetector.(unknown) - {'postcode'}
	PropertyDetector.(unknown) - {'postcode'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
state
	PropertyDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
user
	WordPressRetrievalDetector.get_users("role=Administrator") - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_users("role=Administrator") - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_users("role=Administrator") - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
user_meta
	WordPressRetrievalDetector.get_users("role=Administrator") - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_users("role=Administrator") - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_users("role=Administrator") - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
wp_post
	WordPressRetrievalDetector.get_post($order->id) - {'post_meta', 'wp_post', 'post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:11.497999.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 18 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.157286.

18 STORE_REACHES edges created
18 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 190 nodes as PERSONAL
In total, tainted 190 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 16 nodes as ENCRYPTED
In total, tainted 16 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:08.325889.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:14.693412!
DELETION call to delete_post_meta($order_id, "Order Failed", "Confirmation failed by COD") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
CRYPTOGRAPHY call to hash("sha256", mt_rand() . microtime()).,None,None
CRYPTOGRAPHY call to hash("sha256", mt_rand() . microtime()).,None,None
CRYPTOGRAPHY call to hash("sha512", trim($hash_string)).,None,None
hash called with approved hash algorithm sha256.,sha256,None
hash called with approved hash algorithm sha256.,sha256,None
hash called with approved hash algorithm sha512.,sha512,None
STORAGE call to fputcsv($fh, array_keys(current($json))).,None,None
STORAGE call to fputcsv($fh, $row).,None,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$order->billing_first_name' of personal types {'first_name'} is found.,,None
object property '$order->billing_last_name' of personal types {'last_name'} is found.,,None
object property '$order->billing_address_1' of personal types {'address'} is found.,,None
object property '$order->billing_address_2' of personal types {'address'} is found.,,None
object property '$order->billing_city' of personal types {'city'} is found.,,None
object property '$order->billing_state' of personal types {'state'} is found.,,None
object property '$order->billing_postcode' of personal types {'postcode'} is found.,,None
object property '$order->billing_country' of personal types {'country'} is found.,,None
object property '$order->billing_email' of personal types {'email'} is found.,,None
object property '$order->shipping_first_name' of personal types {'first_name'} is found.,,None
object property '$order->shipping_last_name' of personal types {'last_name'} is found.,,None
object property '$order->shipping_address_1' of personal types {'address'} is found.,,None
object property '$order->shipping_address_2' of personal types {'address'} is found.,,None
object property '$order->shipping_city' of personal types {'city'} is found.,,None
object property '$order->shipping_state' of personal types {'state'} is found.,,None
object property '$order->shipping_postcode' of personal types {'postcode'} is found.,,None
object property '$order->shipping_country' of personal types {'country'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
API call to wp_remote_post($url, ["method" => "POST", "timeout" => 45, "redirection" => 5, "httpversion" => "1.0", "blocking" => true, "headers" => [], "body" => $params]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_users("role=Administrator") alters data types {'user_meta', 'user'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_users("role=Administrator") alters data types {'user_meta', 'user'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to get_post($order->id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_users("role=Administrator") alters data types {'user_meta', 'user'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to get_post_meta($order_id, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to delete_post_meta($order_id, "Order Failed", "Confirmation failed by COD") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to add_post_meta($order_id, "Order Confirm", $data["order_confirm"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_post_meta($order_id, "Order Cancelled", $data["order_cancel"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_post_meta($order_id, "Order Failed", "Confirmation failed by COD") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_post_meta($order_id, "Order Confirm", $data["order_confirm"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_post_meta($order_id, "Order Cancelled", $data["order_cancel"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_post_meta($order_id, "Order Failed", "Confirmation failed by COD") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_post_meta($order_id, "Contact to Customer", $data["order_contact"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_post_meta($order_id, "Customer called", "Customer has contacted to you") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Unstructured data storage of PII types (['email']) to files through function "fputcsv", found in file export_csv.php at line 28. 

[has_storage] Storage check is CUSTOM_UNSTRUCTURED 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 1751 , but is impossible due to custom storage of PII without identifiers. Found in file export_csv.php at line 28 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Complete data access is required for storage at node ID 1751 , but is impossible due to custom storage of PII without identifiers. Found in file export_csv.php at line 28 

[Art.15, Right to access] Data access is NONE 

[third_party] Third party usage is NONE for data types [] 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file muyplg.php at line 439 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? True 

[main] Is third_party in violation? False 

[main] Is encryption in violation? True 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function cod-confirmation-for-india_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;





    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'cod-confirmation-for-india' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function cod-confirmation-for-india_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'cod-confirmation-for-india' ),
        'callback'             => 'cod-confirmation-for-india_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'cod-confirmation-for-india_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function cod-confirmation-for-india_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'cod-confirmation-for-india' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'cod-confirmation-for-india' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'cod-confirmation-for-india' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'cod-confirmation-for-india', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'cod-confirmation-for-india_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
