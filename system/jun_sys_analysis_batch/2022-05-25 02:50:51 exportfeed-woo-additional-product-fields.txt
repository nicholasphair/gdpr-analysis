Timeout in resolving values
Timeout in running neo4j query
Running Main.py on exportfeed-woo-additional-product-fields

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.331266.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.084502.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.178208.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.389166.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 129 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.681021.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 2 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.815623.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.103224.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 30 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:00.819482.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 1029
Added 868 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 1029
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.043336.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/exportfeed-woo-additional-product-fields/class.exportfeed-additional-fields.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/exportfeed-woo-additional-product-fields/exportfeed-woo-additional-product-fields.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/exportfeed-woo-additional-product-fields/index.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.351641.

129 PHP_REACHES edges created
2 CALLS edges created
898 PHP_REACHES edges created
1029 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 310 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.017337.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.069530.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 1 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.593809.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.166467.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.080693.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.031273.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.004646.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.043379.

1 PHP_REACHES edges created
1 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 1 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.134263.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.116535.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<li>Brand: get_post_meta($post->ID, "_wapf_brand", true)</li>'' cannot be parsed correct.
HTML code '$'<li>Shipping Cost: get_post_meta($post->ID, "_wapf_shipping_cost", true)</li>'' cannot be parsed correct.
HTML code '$'<li>Note: get_post_meta($post->ID, "_wapf_notes", true)</li>'' cannot be parsed correct.
HTML code '$'<strong>sprintf(esc_html__("Cart product feed additional plugin %s requires WordPress %s or higher.", "wapf_woo_additional_fields"), WAPF_ADDITIONAL_FIELDS_VERSION, WAPF_ADDITIONAL_MINIMUM_WP_VERSION)</strong> sprintf(__("Please <a href="%1$s">upgrade WordPress</a> to a current version", "wapf_woo_additional_fields"))'' cannot be parsed correct.
HTML code '$'<div id="cpf_attr" class="options_group">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div id="cpf_attr" class="options_group show_if_simple show_if_external">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div class="cpf_additional_product_fields">
        <ul>'' cannot be parsed correct.
HTML code '$'</ul></div>'' cannot be parsed correct.
HTML code '$'Hi there!  I\'m just a plugin to add extra fields to your WooCommerce products, not much I can do when called directly.'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:01.656225.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.052873.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 1 do_action/apply_filters calls and 6 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.593270.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MongoDbDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MsqlDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running ArrayElementDetector
### Start running PHPIncludedDetector
### Finish running PHPDataObjectDetector
### Start running PHPRetrievalDetector
### Finish running OpenSSLDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PhpCurlDetector
### Start running PhpVarDetector
### Finish running PHPIncludedDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running PHPStorageDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running PropertyDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running WordPressRemoteDetector
### Start running WordPressRetrievalDetector
### Finish running SqlServerDetector
### Start running WordPressStorageDetector
### Finish running MySQLiDetector
### Start running WP_UserDetector
### Finish running maxdbDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running VariableDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
class.exportfeed-additional-fields.php:51
  - RETRIEVAL call to get_post_meta($post->ID, "_wapf_brand", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
class.exportfeed-additional-fields.php:170
  - RETRIEVAL call to get_post_meta($variation->ID, "_wapf_brand", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
class.exportfeed-additional-fields.php:183
  - RETRIEVAL call to get_post_meta($variation->ID, "_wapf_mpn", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
class.exportfeed-additional-fields.php:195
  - RETRIEVAL call to get_post_meta($variation->ID, "_wapf_upc", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
class.exportfeed-additional-fields.php:208
  - RETRIEVAL call to get_post_meta($variation->ID, "_wapf_ean", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
class.exportfeed-additional-fields.php:220
  - RETRIEVAL call to get_post_meta($variation->ID, "_wapf_valid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
class.exportfeed-additional-fields.php:239
  - RETRIEVAL call to get_post_meta($variation->ID, "_wapf_description", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
class.exportfeed-additional-fields.php:338
  - RETRIEVAL call to get_post_meta($post->ID, "_wapf_brand", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
class.exportfeed-additional-fields.php:339
  - RETRIEVAL call to get_post_meta($post->ID, "_wapf_brand", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
class.exportfeed-additional-fields.php:340
  - RETRIEVAL call to get_post_meta($post->ID, "_wapf_shipping_cost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
class.exportfeed-additional-fields.php:341
  - RETRIEVAL call to get_post_meta($post->ID, "_wapf_shipping_cost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
class.exportfeed-additional-fields.php:342
  - RETRIEVAL call to get_post_meta($post->ID, "_wapf_notes", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
class.exportfeed-additional-fields.php:343
  - RETRIEVAL call to get_post_meta($post->ID, "_wapf_notes", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
class.exportfeed-additional-fields.php:390
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

class.exportfeed-additional-fields.php:135
  - STORAGE call to update_post_meta($post_id, "_wapf_brand", esc_attr($woocommerce_brand)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
class.exportfeed-additional-fields.php:138
  - STORAGE call to update_post_meta($post_id, "_wapf_mpn", esc_attr($woocommerce_mpn)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
class.exportfeed-additional-fields.php:141
  - STORAGE call to update_post_meta($post_id, "_wapf_upc", esc_attr($woocommerce_upc)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
class.exportfeed-additional-fields.php:144
  - STORAGE call to update_post_meta($post_id, "_wapf_ean", esc_attr($woocommerce_ean)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
class.exportfeed-additional-fields.php:147
  - STORAGE call to update_post_meta($post_id, "_wapf_shipping_cost", esc_attr($woocommerce_shipping_cost)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
class.exportfeed-additional-fields.php:150
  - STORAGE call to update_post_meta($post_id, "_wapf_notes", esc_attr($woocommerce_product_note)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
class.exportfeed-additional-fields.php:271
  - STORAGE call to update_post_meta($variation_id, "_wapf_brand", stripslashes($_brand[$i])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
class.exportfeed-additional-fields.php:280
  - STORAGE call to update_post_meta($variation_id, "_wapf_mpn", stripslashes($_mpn[$i])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
class.exportfeed-additional-fields.php:289
  - STORAGE call to update_post_meta($variation_id, "_wapf_upc", stripslashes($_upc[$i])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
class.exportfeed-additional-fields.php:298
  - STORAGE call to update_post_meta($variation_id, "_wapf_ean", stripslashes($_ean[$i])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
class.exportfeed-additional-fields.php:306
  - STORAGE call to update_post_meta($variation_id, "_wapf_description", stripslashes($_descr[$i])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
class.exportfeed-additional-fields.php:314
  - STORAGE call to update_post_meta($variation_id, "_wapf_valid", stripslashes($_valid[$i])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
class.exportfeed-additional-fields.php:401
  - STORAGE call to update_option("active_plugins", array_filter($plugins)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

class.exportfeed-additional-fields.php:415
  - Data from table $wpdbpostmeta deleted: "$wpdb->delete($table, ["meta_key" => "_wapf_brand"])"
class.exportfeed-additional-fields.php:416
  - Data from table $wpdbpostmeta deleted: "$wpdb->delete($table, ["meta_key" => "_wapf_mpn"])"
class.exportfeed-additional-fields.php:417
  - Data from table $wpdbpostmeta deleted: "$wpdb->delete($table, ["meta_key" => "_wapf_upc"])"
class.exportfeed-additional-fields.php:418
  - Data from table $wpdbpostmeta deleted: "$wpdb->delete($table, ["meta_key" => "_wapf_ean"])"
class.exportfeed-additional-fields.php:419
  - Data from table $wpdbpostmeta deleted: "$wpdb->delete($table, ["meta_key" => "_wapf_shipping_cost"])"
class.exportfeed-additional-fields.php:420
  - Data from table $wpdbpostmeta deleted: "$wpdb->delete($table, ["meta_key" => "_wapf_notes"])" 

By data type:
none
	DeletionDetector.$wpdb->delete($table, ["meta_key" => "_wapf_notes"]) - set()
	DeletionDetector.$wpdb->delete($table, ["meta_key" => "_wapf_shipping_cost"]) - set()
	DeletionDetector.$wpdb->delete($table, ["meta_key" => "_wapf_mpn"]) - set()
	DeletionDetector.$wpdb->delete($table, ["meta_key" => "_wapf_ean"]) - set()
	DeletionDetector.$wpdb->delete($table, ["meta_key" => "_wapf_upc"]) - set()
	DeletionDetector.$wpdb->delete($table, ["meta_key" => "_wapf_brand"]) - set()
option
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
	WordPressStorageDetector.update_option("active_plugins", array_filter($plugins)) - {'option'}
post_meta
	WordPressStorageDetector.update_post_meta($variation_id, "_wapf_description", stripslashes($_descr[$i])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($variation_id, "_wapf_ean", stripslashes($_ean[$i])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($variation->ID, "_wapf_valid", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($variation->ID, "_wapf_mpn", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($variation->ID, "_wapf_upc", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($variation_id, "_wapf_brand", stripslashes($_brand[$i])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_wapf_shipping_cost", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_wapf_brand", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($variation_id, "_wapf_mpn", stripslashes($_mpn[$i])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($variation->ID, "_wapf_description", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_wapf_brand", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_wapf_shipping_cost", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_wapf_notes", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_wapf_brand", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_wapf_notes", esc_attr($woocommerce_product_note)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_wapf_ean", esc_attr($woocommerce_ean)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($variation_id, "_wapf_valid", stripslashes($_valid[$i])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($variation->ID, "_wapf_brand", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($variation_id, "_wapf_upc", stripslashes($_upc[$i])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_wapf_mpn", esc_attr($woocommerce_mpn)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_wapf_notes", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($variation->ID, "_wapf_ean", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_wapf_upc", esc_attr($woocommerce_upc)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_wapf_shipping_cost", esc_attr($woocommerce_shipping_cost)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_wapf_brand", esc_attr($woocommerce_brand)) - {'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:09.787897.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 157 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.250555.

157 STORE_REACHES edges created
157 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.006522.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:27.444502!
Data from table $wpdbpostmeta deleted: "$wpdb->delete($table, ["meta_key" => "_wapf_brand"])",None,None
Data from table $wpdbpostmeta deleted: "$wpdb->delete($table, ["meta_key" => "_wapf_mpn"])",None,None
Data from table $wpdbpostmeta deleted: "$wpdb->delete($table, ["meta_key" => "_wapf_upc"])",None,None
Data from table $wpdbpostmeta deleted: "$wpdb->delete($table, ["meta_key" => "_wapf_ean"])",None,None
Data from table $wpdbpostmeta deleted: "$wpdb->delete($table, ["meta_key" => "_wapf_shipping_cost"])",None,None
Data from table $wpdbpostmeta deleted: "$wpdb->delete($table, ["meta_key" => "_wapf_notes"])",None,None
RETRIEVAL call to get_post_meta($variation->ID, "_wapf_brand", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($variation->ID, "_wapf_mpn", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($variation->ID, "_wapf_upc", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($variation->ID, "_wapf_ean", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($variation->ID, "_wapf_valid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($variation->ID, "_wapf_description", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_wapf_brand", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_wapf_brand", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_wapf_shipping_cost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_wapf_shipping_cost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_wapf_notes", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_wapf_notes", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_wapf_brand", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to update_post_meta($post_id, "_wapf_brand", esc_attr($woocommerce_brand)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_wapf_mpn", esc_attr($woocommerce_mpn)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_wapf_upc", esc_attr($woocommerce_upc)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_wapf_ean", esc_attr($woocommerce_ean)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_wapf_shipping_cost", esc_attr($woocommerce_shipping_cost)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_wapf_notes", esc_attr($woocommerce_product_note)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($variation_id, "_wapf_brand", stripslashes($_brand[$i])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($variation_id, "_wapf_mpn", stripslashes($_mpn[$i])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($variation_id, "_wapf_upc", stripslashes($_upc[$i])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($variation_id, "_wapf_ean", stripslashes($_ean[$i])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($variation_id, "_wapf_description", stripslashes($_descr[$i])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($variation_id, "_wapf_valid", stripslashes($_valid[$i])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("active_plugins", array_filter($plugins)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
