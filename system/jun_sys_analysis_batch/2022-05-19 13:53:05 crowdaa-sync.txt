Timeout in resolving values
Timeout in running neo4j query
Running Main.py on crowdaa-sync

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.992579.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.984362.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 78 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.610062.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 6 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.721698.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1749 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.416074.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 114 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.333116.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 1 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.092592.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 674 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:10.722954.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 10526
Added 7904 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 11358
Added 832 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.675170.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/crowdaa-sync.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/admin/class-crowdaa-sync-add-info-api.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/admin/class-crowdaa-sync-add-info-wp.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/admin/class-crowdaa-sync-admin-display.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/admin/class-crowdaa-sync-admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/admin/class-crowdaa-sync-api.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/admin/class-crowdaa-sync-meta-box.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/admin/class-crowdaa-sync-rest-api.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/admin/class-crowdaa-sync-wp-hooks.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/admin/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/admin/partials/crowdaa-sync-admin-display.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/includes/class-crowdaa-sync-activator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/includes/class-crowdaa-sync-deactivator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/includes/class-crowdaa-sync-exception.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/includes/class-crowdaa-sync-i18n.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/includes/class-crowdaa-sync-loader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/includes/class-crowdaa-sync-lock.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/includes/class-crowdaa-sync-logs.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/includes/class-crowdaa-sync.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/includes/class-crowdaa-sync-timer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/includes/class-crowdaa-sync-versions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/includes/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/public/class-crowdaa-sync-public.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/public/index.php' cannot be parsed correct.
Added new directory node for: vendor
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/autoload.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/autoload.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/composer/autoload_classmap.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/composer/autoload_classmap.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/composer/autoload_files.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/composer/autoload_files.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/composer/autoload_namespaces.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/composer/autoload_namespaces.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/composer/autoload_psr4.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/composer/autoload_psr4.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/composer/autoload_real.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/composer/autoload_real.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/composer/autoload_static.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/composer/autoload_static.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/composer/ClassLoader.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/composer/ClassLoader.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/BodySummarizerInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/BodySummarizerInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/BodySummarizer.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/BodySummarizer.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/ClientInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/ClientInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Client.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Client.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/ClientTrait.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/ClientTrait.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/functions_include.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/functions_include.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/functions.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/functions.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/HandlerStack.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/HandlerStack.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/MessageFormatterInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/MessageFormatterInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/MessageFormatter.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/MessageFormatter.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Middleware.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Middleware.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Pool.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Pool.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/PrepareBodyMiddleware.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/PrepareBodyMiddleware.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/RedirectMiddleware.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/RedirectMiddleware.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/RequestOptions.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/RequestOptions.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/RetryMiddleware.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/RetryMiddleware.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/TransferStats.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/TransferStats.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Utils.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Utils.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Cookie
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Cookie/CookieJarInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Cookie/CookieJarInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Cookie
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Cookie/CookieJar.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Cookie/CookieJar.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Cookie
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Cookie/FileCookieJar.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Cookie/FileCookieJar.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Cookie
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Cookie/SessionCookieJar.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Cookie/SessionCookieJar.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Cookie
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Cookie/SetCookie.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Cookie/SetCookie.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Exception
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/BadResponseException.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/BadResponseException.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Exception
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/ClientException.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/ClientException.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Exception
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/ConnectException.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/ConnectException.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Exception
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/GuzzleException.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/GuzzleException.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Exception
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/InvalidArgumentException.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/InvalidArgumentException.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Exception
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/RequestException.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/RequestException.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Exception
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/ServerException.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/ServerException.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Exception
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/TooManyRedirectsException.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/TooManyRedirectsException.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Exception
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/TransferException.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Exception/TransferException.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Handler
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/CurlFactoryInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/CurlFactoryInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Handler
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/CurlFactory.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/CurlFactory.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Handler
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/CurlHandler.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/CurlHandler.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Handler
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/CurlMultiHandler.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/CurlMultiHandler.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Handler
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/EasyHandle.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/EasyHandle.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Handler
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/HeaderProcessor.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/HeaderProcessor.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Handler
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/MockHandler.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/MockHandler.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Handler
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/Proxy.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/Proxy.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: guzzle
Added new directory node for: src
Added new directory node for: Handler
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/StreamHandler.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/guzzle/src/Handler/StreamHandler.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/AggregateException.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/AggregateException.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/CancellationException.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/CancellationException.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/Coroutine.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/Coroutine.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/Create.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/Create.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/Each.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/Each.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/EachPromise.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/EachPromise.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/FulfilledPromise.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/FulfilledPromise.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/functions_include.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/functions_include.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/functions.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/functions.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/Is.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/Is.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/PromiseInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/PromiseInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/Promise.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/Promise.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/PromisorInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/PromisorInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/RejectedPromise.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/RejectedPromise.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/RejectionException.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/RejectionException.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/TaskQueueInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/TaskQueueInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/TaskQueue.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/TaskQueue.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: promises
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/Utils.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/promises/src/Utils.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/AppendStream.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/AppendStream.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/BufferStream.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/BufferStream.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/CachingStream.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/CachingStream.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/DroppingStream.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/DroppingStream.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/FnStream.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/FnStream.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Header.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Header.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/HttpFactory.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/HttpFactory.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/InflateStream.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/InflateStream.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/LazyOpenStream.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/LazyOpenStream.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/LimitStream.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/LimitStream.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Message.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Message.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/MessageTrait.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/MessageTrait.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/MimeType.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/MimeType.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/MultipartStream.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/MultipartStream.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/NoSeekStream.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/NoSeekStream.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/PumpStream.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/PumpStream.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Query.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Query.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Request.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Request.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Response.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Response.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Rfc7230.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Rfc7230.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/ServerRequest.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/ServerRequest.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/StreamDecoratorTrait.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/StreamDecoratorTrait.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Stream.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Stream.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/StreamWrapper.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/StreamWrapper.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/UploadedFile.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/UploadedFile.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/UriNormalizer.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/UriNormalizer.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Uri.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Uri.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/UriResolver.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/UriResolver.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Utils.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Utils.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: guzzlehttp
Added new directory node for: psr7
Added new directory node for: src
Added new directory node for: Exception
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Exception/MalformedUriException.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/guzzlehttp/psr7/src/Exception/MalformedUriException.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-client
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-client/src/ClientExceptionInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-client/src/ClientExceptionInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-client
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-client/src/ClientInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-client/src/ClientInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-client
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-client/src/NetworkExceptionInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-client/src/NetworkExceptionInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-client
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-client/src/RequestExceptionInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-client/src/RequestExceptionInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-factory
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-factory/src/RequestFactoryInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-factory/src/RequestFactoryInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-factory
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-factory/src/ResponseFactoryInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-factory/src/ResponseFactoryInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-factory
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-factory/src/ServerRequestFactoryInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-factory/src/ServerRequestFactoryInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-factory
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-factory/src/StreamFactoryInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-factory/src/StreamFactoryInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-factory
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-factory/src/UploadedFileFactoryInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-factory/src/UploadedFileFactoryInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-factory
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-factory/src/UriFactoryInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-factory/src/UriFactoryInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-message
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-message/src/MessageInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-message/src/MessageInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-message
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-message/src/RequestInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-message/src/RequestInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-message
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-message/src/ResponseInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-message/src/ResponseInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-message
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-message/src/ServerRequestInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-message/src/ServerRequestInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-message
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-message/src/StreamInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-message/src/StreamInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-message
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-message/src/UploadedFileInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-message/src/UploadedFileInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: psr
Added new directory node for: http-message
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-message/src/UriInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/psr/http-message/src/UriInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: ralouphie
Added new directory node for: getallheaders
Added new directory node for: src
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/ralouphie/getallheaders/src/getallheaders.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/ralouphie/getallheaders/src/getallheaders.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: symfony
Added new directory node for: deprecation-contracts
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/symfony/deprecation-contracts/function.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/crowdaa-sync/vendor/symfony/deprecation-contracts/function.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:14.968247.

702 Nodes Created
78 PHP_REACHES edges created
6 REACHES edges created
1000 PHP_REACHES edges created
1749 PHP_REACHES edges created
81 CALLS edges created
1 PHP_REACHES edges created
1 CALLS edges created
1 PHP_REACHES edges created
30 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
8579 PHP_REACHES edges created
832 PHP_REACHES edges created
2 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
5 DIRECTORY_OF edges created
1 FILE_OF edges created
4 DIRECTORY_OF edges created
1 FILE_OF edges created
12060 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 3946 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.290099.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 2 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:04.042203.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 356 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:09.438566.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 147 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.205607.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.825248.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:04.828494.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.041477.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.031622.

2 CALLS edges created
503 PHP_REACHES edges created
505 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 485 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.143655.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
5 SQL operations to process.
which ffmpeg
SQL command (which ffmpeg) cannot be parsed correct.
ffmpeg -i escapeshellarg($ffmpeg_path) -bsf:a aac_adtstoasc -vcodec copy -c copy -crf 50 escapeshellarg($converted_video_path)
SQL command (ffmpeg -i escapeshellarg($ffmpeg_path) -bsf:a aac_adtstoasc -vcodec copy -c copy -crf 50 escapeshellarg($converted_video_path)) cannot be parsed correct.
SELECT $wpdbposts.* FROM $wpdbposts
          WHERE
            $wpdbposts.post_modified_gmt >= gmdate("Y-m-d H:i:s", $wp_to_api_sync_from) AND
            $wpdbposts.post_type          = %s AND
            $wpdbposts.post_status        = %s
          ORDER BY $wpdbposts.post_modified_gmt ASC
          LIMIT 0, %d
SELECT $wpdbposts.* FROM $wpdbposts
          WHERE
            $wpdbposts.post_modified_gmt >= gmdate("Y-m-d H:i:s", $wp_to_api_sync_from) AND
            $wpdbposts.post_type          = post AND
            $wpdbposts.post_status        = %s
          ORDER BY $wpdbposts.post_modified_gmt ASC
          LIMIT 0, %d
SELECT $wpdbposts.* FROM $wpdbposts
publish        WHERE
            $wpdbposts.post_modified_gmt >= gmdate("Y-m-d H:i:s", $wp_to_api_sync_from) AND
            $wpdbposts.post_type          = post AND
            $wpdbposts.post_status        = %s
          ORDER BY $wpdbposts.post_modified_gmt ASC
          LIMIT 0, %d
SELECT $wpdbpost100* FROM $wpdbposts
publish        WHERE
            $wpdbposts.post_modified_gmt >= gmdate("Y-m-d H:i:s", $wp_to_api_sync_from) AND
            $wpdbposts.post_type          = post AND
            $wpdbposts.post_status        = %s
          ORDER BY $wpdbposts.post_modified_gmt ASC
          LIMIT 0, %d
SELECT $wpdbpost100* FROM $wpdbposts
publish        WHERE
            $wpdbposts.post_modified_gmt >= gmdate("Y-m-d H:i:s", $wp_to_api_sync_from) AND
            $wpdbposts.post_type          = post AND
            $wpdbposts.post_status        = %s
          ORDER BY $wpdbposts.post_modified_gmt ASC
          LIMIT 0, %d
SQL command (SELECT $wpdbpost100* FROM $wpdbposts publish WHERE $wpdbposts.post_modified_gmt >= gmdate("Y-m-d H:i:s", $wp_to_api_sync_from) AND $wpdbposts.post_type = post AND $wpdbposts.post_status = %s ORDER BY $wpdbposts.post_modified_gmt ASC LIMIT 0, %d) cannot be parsed correct.
SELECT post_id FROM $wpdb WHERE meta_key = api_post_id AND meta_value = %s
SELECT post_id FROM $wpdb WHERE meta_key = api_post_id AND meta_value = $meta_value
SELECT post_id FROM $wpdb WHERE meta_key = api_post_id AND meta_value = $meta_value
SQL command (SELECT post_id FROM $wpdb WHERE meta_key = api_post_id AND meta_value = $meta_value) cannot be parsed correct.
SELECT ID FROM $wpdb WHERE guid='$image_url';
SELECT ID FROM $wpdb WHERE guid='$image_url';
SQL command (SELECT ID FROM $wpdb WHERE guid='$image_url';) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [5916, 5968, 714, 2083, 9630]
Added 0 SQL nodes. 0 out of 5 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:02.855044.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'error'' cannot be parsed correct.
HTML code '$'wp_get_attachment_image_src($attachment_id, "thumbnail")_0'' cannot be parsed correct.
HTML code '$'wp_get_attachment_url($attachment_id)'' cannot be parsed correct.
HTML code '$'get_the_title($attachment_id)'' cannot be parsed correct.
HTML code '$'second_featured_img'' cannot be parsed correct.
HTML code '$'second_featured_img'' cannot be parsed correct.
HTML code '$'second_featured_img'' cannot be parsed correct.
HTML code '$'get_admin_page_title()'' cannot be parsed correct.
HTML code '$'get_option("crowdaa_api_url")'' cannot be parsed correct.
HTML code '$'get_option("crowdaa_user_auth_api_key")'' cannot be parsed correct.
HTML code '$'get_option("crowdaa_user_api_key")'' cannot be parsed correct.
HTML code '$'get_option("crowdaa_user_email")'' cannot be parsed correct.
HTML code '$'get_option("crowdaa_user_password")'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'get_option("crowdaa_sync_max_duration", 60)'' cannot be parsed correct.
HTML code '$'null'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'$term'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$' is-dismissible">
        <p>
         '' cannot be parsed correct.
HTML code '$'        </p>
      </div>
    '' cannot be parsed correct.
HTML code '$'" />
                </div>
             '' cannot be parsed correct.
HTML code '$'"
                >
                  <div class="thumbnail">
                    <div class="centered">
                      <img src="../wp-includes/images/media/video.png" class="icon" draggable="false" alt="" />
                    </div>
                    <div class="filename">
                      <div>
                        '' cannot be parsed correct.
HTML code '$'                      </div>
                    </div>
                  </div>
                </div>
              '' cannot be parsed correct.
HTML code '$'</h2>
      <form method="post" action="'' cannot be parsed correct.
HTML code '$'" height="150px" />
          </div>
        '' cannot be parsed correct.
HTML code '$'</h2>
      <form method="post" action="'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:02.917686.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.039732.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 10 do_action/apply_filters calls and 24 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.899641.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running IngresDetector
### Start running MongoDbDetector
### Finish running InformixDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MySQLDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PHPIncludedDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running PHPStorageDetector
### Start running SybaseDetector
### Finish running Sqlite3Detector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running PropertyDetector
### Start running VariableDetector
### Finish running maxdbDetector
### Start running WordpressHashingFnDetector
### Finish running MySQLiDetector
### Start running WordPressRemoteDetector
### Finish running TokyoTyrantDetector
### Start running WordPressRetrievalDetector
### Finish running SqlServerDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running WordpressHashingFnDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running VariableDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRemoteDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
admin/class-crowdaa-sync-admin-display.php:105
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-admin-display.php:105
  - Request variable '$_POST["user_password"]' of personal types {'password'} is found.
  - Data types: password
admin/class-crowdaa-sync-admin-display.php:106
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-admin-display.php:107
  - Request variable '$_POST["user_password"]' of personal types {'password'} is found.
  - Data types: password 

admin/class-crowdaa-sync-admin-display.php:163
  - MD5 called with parameters [user_password]. Ignore if [user_password] does not contain personal information. 

includes/class-crowdaa-sync-logs.php:72
  - RETRIEVAL call to fgetc($fd).
  - Data types: file
includes/class-crowdaa-sync-logs.php:76
  - RETRIEVAL call to fgets($fd).
  - Data types: file 

includes/class-crowdaa-sync-logs.php:34
  - STORAGE call to fwrite($fd, $to_write).
  - Data types: file 

admin/class-crowdaa-sync-rest-api.php:145
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:166
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email 

admin/class-crowdaa-sync-admin-display.php:106
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-admin-display.php:107
  - variable '$user_password' of personal types {'password'} is found.
  - Data types: password
admin/class-crowdaa-sync-admin-display.php:111
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-admin-display.php:112
  - variable '$user_password' of personal types {'password'} is found.
  - Data types: password
admin/class-crowdaa-sync-admin-display.php:162
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-admin-display.php:163
  - variable '$user_password' of personal types {'password'} is found.
  - Data types: password
admin/class-crowdaa-sync-rest-api.php:50
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
admin/class-crowdaa-sync-rest-api.php:51
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:56
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
admin/class-crowdaa-sync-rest-api.php:59
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:83
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
admin/class-crowdaa-sync-rest-api.php:84
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:85
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:85
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
admin/class-crowdaa-sync-rest-api.php:94
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
admin/class-crowdaa-sync-rest-api.php:112
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:114
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:117
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:119
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:123
  - variable '$email_ok' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:125
  - variable '$email_ok' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:128
  - variable '$email_ok' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:129
  - variable '$email_ok' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:132
  - variable '$email_ok' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:145
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:160
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:166
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
admin/class-crowdaa-sync-rest-api.php:190
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
admin/partials/crowdaa-sync-admin-display.php:27
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
admin/partials/crowdaa-sync-admin-display.php:28
  - variable '$user_password' of personal types {'password'} is found.
  - Data types: password
admin/partials/crowdaa-sync-admin-display.php:49
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
admin/partials/crowdaa-sync-admin-display.php:49
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
admin/partials/crowdaa-sync-admin-display.php:53
  - variable '$user_password' of personal types {'password'} is found.
  - Data types: password
admin/partials/crowdaa-sync-admin-display.php:53
  - variable '$user_password' of personal types {'password'} is found.
  - Data types: password
admin/partials/crowdaa-sync-admin-display.php:58
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
admin/partials/crowdaa-sync-admin-display.php:58
  - variable '$user_password' of personal types {'password'} is found.
  - Data types: password
admin/partials/crowdaa-sync-admin-display.php:74
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
admin/partials/crowdaa-sync-admin-display.php:74
  - variable '$user_password' of personal types {'password'} is found.
  - Data types: password 

admin/class-crowdaa-sync-rest-api.php:85
  - CRYPTOGRAPHY call to wp_create_user($username, $password, $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).
  - Data types: user, user_meta 

admin/class-crowdaa-sync-add-info-wp.php:539
  - API call to wp_remote_get($img_url, ["method" => "GET", "timeout" => 45, "stream" => true, "filename" => $upload_fname, "sslcertificates" => CROWDAA_SYNC_CACERT_PATH]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
admin/class-crowdaa-sync-api.php:896
  - API call to wp_remote_request($this->api_url . $url, $options). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

admin/class-crowdaa-sync-add-info-api.php:68
  - RETRIEVAL call to get_option("crowdaa_cron_sync_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-add-info-api.php:72
  - RETRIEVAL call to get_option("crowdaa_sync_articles_api_to_wp_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-add-info-api.php:73
  - RETRIEVAL call to get_option("crowdaa_sync_articles_wp_to_api_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-add-info-api.php:105
  - RETRIEVAL call to get_option("crowdaa_sync_articles_api_to_wp_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-add-info-api.php:106
  - RETRIEVAL call to get_option("crowdaa_sync_articles_wp_to_api_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-add-info-api.php:125
  - RETRIEVAL call to get_option("crowdaa_sync_articles_wp_to_api_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-add-info-api.php:126
  - RETRIEVAL call to get_option("crowdaa_sync_articles_api_to_wp_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-add-info-api.php:128
  - RETRIEVAL call to get_option("crowdaa_auth_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-add-info-api.php:209
  - RETRIEVAL call to get_post_meta($post->ID, "api_post_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-api.php:235
  - RETRIEVAL call to get_posts(["post_type" => "post", "meta_key" => "api_post_id", "meta_compare" => "=", "meta_value" => $api_post_id]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
admin/class-crowdaa-sync-add-info-api.php:258
  - RETRIEVAL call to get_post_meta($wp_post["post_id"], "crowdaa_last_wp_to_api_sync", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-api.php:265
  - RETRIEVAL call to get_post_meta($wp_post["post_id"], "crowdaa_need_sync", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-api.php:266
  - RETRIEVAL call to get_post_meta($wp_post["post_id"], "crowdaa_version", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-api.php:277
  - RETRIEVAL call to get_post_meta($wp_post["post_id"], "crowdaa_need_sync", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-api.php:278
  - RETRIEVAL call to get_post_meta($wp_post["post_id"], "crowdaa_version", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-api.php:281
  - RETRIEVAL call to get_post_meta($wp_post["post_id"], "api_post_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-api.php:405
  - RETRIEVAL call to get_option("crowdaa_sync_articles_api_to_wp_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-add-info-api.php:406
  - RETRIEVAL call to get_option("crowdaa_sync_articles_wp_to_api_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-add-info-api.php:517
  - RETRIEVAL call to get_option("crowdaa_sync_feed_categories", "all") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-add-info-api.php:661
  - RETRIEVAL call to get_option("default_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-add-info-wp.php:224
  - RETRIEVAL call to get_post_meta($wp_post_id, "api_media_map", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-wp.php:241
  - RETRIEVAL call to get_post_meta($wp_post_id, "second_featured_img", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-wp.php:282
  - RETRIEVAL call to get_post_meta($wp_post_id, "api_feedpicture_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-wp.php:347
  - RETRIEVAL call to get_post_meta($wp_post_id, "api_feedpicture_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-admin-display.php:66
  - RETRIEVAL call to get_option("crowdaa_cron_sync_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:67
  - RETRIEVAL call to get_option("crowdaa_sync_articles_wp_to_api_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:68
  - RETRIEVAL call to get_option("crowdaa_sync_articles_api_to_wp_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:69
  - RETRIEVAL call to get_option("crowdaa_sync_wpapi_register_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:70
  - RETRIEVAL call to get_option("crowdaa_sync_max_duration", 60) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-api.php:18
  - RETRIEVAL call to get_option("crowdaa_user_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-api.php:19
  - RETRIEVAL call to get_option("crowdaa_api_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-api.php:98
  - RETRIEVAL call to get_post_meta($wp_post_id, "api_feedpicture_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:104
  - RETRIEVAL call to get_post_meta($wp_post_id, "api_media_map", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:136
  - RETRIEVAL call to get_option("crowdaa_auth_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-api.php:155
  - RETRIEVAL call to get_post_field("post_content", $wp_post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post, post_meta, wp_post
admin/class-crowdaa-sync-api.php:242
  - RETRIEVAL call to get_option("crowdaa_auth_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-api.php:298
  - RETRIEVAL call to get_option("crowdaa_auth_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-api.php:359
  - RETRIEVAL call to get_option("crowdaa_auth_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-api.php:378
  - RETRIEVAL call to get_post_field("post_content", $wp_post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post, post_meta, wp_post
admin/class-crowdaa-sync-api.php:435
  - RETRIEVAL call to get_post_meta($wp_post_id, "api_media_map", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:442
  - RETRIEVAL call to get_option("default_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-api.php:449
  - RETRIEVAL call to get_post_meta($wp_post_id, "api_feedpicture_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:474
  - RETRIEVAL call to get_post_meta($wp_post_id, "api_feedpicture_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:485
  - RETRIEVAL call to get_post_meta($wp_post_id, "second_featured_img", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:489
  - RETRIEVAL call to get_post_meta($wp_post_id, "second_featured_img", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string), 2: $single (bool). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:535
  - RETRIEVAL call to get_post_meta($wp_post_id, "api_media_map", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:596
  - RETRIEVAL call to get_option("crowdaa_auth_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-api.php:649
  - RETRIEVAL call to get_post_meta($wp_post_id, "api_media_map", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:858
  - RETRIEVAL call to get_option("crowdaa_auth_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-meta-box.php:136
  - RETRIEVAL call to get_post_meta($post->ID, $meta_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-rest-api.php:33
  - RETRIEVAL call to get_option("crowdaa_sync_wpapi_register_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-rest-api.php:88
  - RETRIEVAL call to get_user_by("id", $user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
admin/class-crowdaa-sync-rest-api.php:117
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
admin/class-crowdaa-sync-rest-api.php:154
  - RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-rest-api.php:180
  - RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-crowdaa-sync-wp-hooks.php:48
  - RETRIEVAL call to get_post_meta($post_id, "second_featured_img", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-wp-hooks.php:75
  - RETRIEVAL call to get_post_meta(get_the_ID(), "second_featured_img", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-wp-hooks.php:112
  - RETRIEVAL call to get_post_meta($post_id, "api_post_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-crowdaa-sync-wp-hooks.php:127
  - RETRIEVAL call to get_post_meta(get_the_ID(), "second_featured_img", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/partials/crowdaa-sync-admin-display.php:26
  - RETRIEVAL call to get_option("crowdaa_api_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/partials/crowdaa-sync-admin-display.php:27
  - RETRIEVAL call to get_option("crowdaa_user_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/partials/crowdaa-sync-admin-display.php:28
  - RETRIEVAL call to get_option("crowdaa_user_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/partials/crowdaa-sync-admin-display.php:29
  - RETRIEVAL call to get_option("crowdaa_user_auth_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/partials/crowdaa-sync-admin-display.php:30
  - RETRIEVAL call to get_option("crowdaa_user_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/partials/crowdaa-sync-admin-display.php:31
  - RETRIEVAL call to get_option("crowdaa_auth_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/partials/crowdaa-sync-admin-display.php:81
  - RETRIEVAL call to get_option("crowdaa_cron_sync_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/partials/crowdaa-sync-admin-display.php:82
  - RETRIEVAL call to get_option("crowdaa_sync_articles_wp_to_api_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/crowdaa-sync-admin-display.php:83
  - RETRIEVAL call to get_option("crowdaa_sync_articles_api_to_wp_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/crowdaa-sync-admin-display.php:84
  - RETRIEVAL call to get_option("crowdaa_sync_wpapi_register_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/crowdaa-sync-admin-display.php:85
  - RETRIEVAL call to get_option("crowdaa_sync_max_duration", 60) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/crowdaa-sync-admin-display.php:134
  - RETRIEVAL call to get_option("default_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/partials/crowdaa-sync-admin-display.php:159
  - RETRIEVAL call to get_option("crowdaa_sync_feed_categories", "all") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
crowdaa-sync.php:48
  - RETRIEVAL call to get_option("crowdaa_last_version", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-crowdaa-sync-timer.php:37
  - RETRIEVAL call to get_option("crowdaa_sync_max_duration", 60) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-crowdaa-sync-versions.php:18
  - RETRIEVAL call to get_option("crowdaa_last_version", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-crowdaa-sync-versions.php:29
  - RETRIEVAL call to get_option("crowdaa_sync_internal_version", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-crowdaa-sync-versions.php:33
  - RETRIEVAL call to get_option("crowdaa_sync_internal_version", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option 

admin/class-crowdaa-sync-add-info-api.php:80
  - STORAGE call to update_option("crowdaa_sync_articles_wp_to_api_from", $opqueue["articles"]["wp_to_api_last"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-add-info-api.php:83
  - STORAGE call to update_option("crowdaa_sync_articles_api_to_wp_from", $opqueue["articles"]["api_to_wp_last"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-add-info-api.php:415
  - STORAGE call to update_option("crowdaa_sync_articles_wp_to_api_from", $opqueue["articles"]["wp_to_api_last"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-add-info-api.php:418
  - STORAGE call to update_option("crowdaa_sync_articles_api_to_wp_from", $opqueue["articles"]["api_to_wp_last"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-add-info-api.php:631
  - STORAGE call to update_post_meta($post["post_id"], "crowdaa_need_sync", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-api.php:632
  - STORAGE call to update_post_meta($post["post_id"], "crowdaa_version", Crowdaa_Sync_Versions->get_version()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-api.php:633
  - STORAGE call to update_post_meta($post["post_id"], "crowdaa_last_wp_to_api_sync", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-wp.php:164
  - STORAGE call to wp_insert_post($post_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
admin/class-crowdaa-sync-add-info-wp.php:165
  - STORAGE call to update_post_meta($wp_post_id, "api_post_id", $api_data->_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-wp.php:176
  - STORAGE call to update_post_meta($wp_post_id, "crowdaa_need_sync", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-wp.php:177
  - STORAGE call to update_post_meta($wp_post_id, "crowdaa_version", Crowdaa_Sync_Versions->get_version()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-wp.php:198
  - STORAGE call to wp_update_post($data). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
admin/class-crowdaa-sync-add-info-wp.php:199
  - STORAGE call to update_post_meta($wp_post_id, "api_post_id", $api_data->_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-wp.php:206
  - STORAGE call to update_post_meta($wp_post_id, "crowdaa_need_sync", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-wp.php:207
  - STORAGE call to update_post_meta($wp_post_id, "crowdaa_version", Crowdaa_Sync_Versions->get_version()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-wp.php:268
  - STORAGE call to update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-wp.php:269
  - STORAGE call to update_post_meta($wp_post_id, "second_featured_img", implode(",", $attaches)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-wp.php:310
  - STORAGE call to update_post_meta($wp_post_id, "api_feedpicture_id", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-add-info-wp.php:330
  - STORAGE call to update_post_meta($wp_post_id, "api_feedpicture_id", serialize(["api_id" => $api_data->feedPicture->_id, "attachment_id" => $attachment_id])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-admin-display.php:35
  - STORAGE call to update_option("crowdaa_cron_sync_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:37
  - STORAGE call to update_option("crowdaa_cron_sync_enabled", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:41
  - STORAGE call to update_option("crowdaa_sync_articles_wp_to_api_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:43
  - STORAGE call to update_option("crowdaa_sync_articles_wp_to_api_enabled", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:47
  - STORAGE call to update_option("crowdaa_sync_articles_api_to_wp_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:49
  - STORAGE call to update_option("crowdaa_sync_articles_api_to_wp_enabled", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:53
  - STORAGE call to update_option("crowdaa_sync_wpapi_register_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:55
  - STORAGE call to update_option("crowdaa_sync_wpapi_register_enabled", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:64
  - STORAGE call to update_option("crowdaa_sync_max_duration", $sync_max_duration) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:87
  - STORAGE call to update_option("crowdaa_user_id", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:88
  - STORAGE call to update_option("crowdaa_auth_token", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:89
  - STORAGE call to update_option("crowdaa_api_url", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:90
  - STORAGE call to update_option("crowdaa_user_email", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:91
  - STORAGE call to update_option("crowdaa_user_password", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:92
  - STORAGE call to update_option("crowdaa_user_auth_api_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:94
  - STORAGE call to update_option("crowdaa_api_url", esc_url_raw($_POST["api_url"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:162
  - STORAGE call to update_option("crowdaa_user_email", $user_email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:163
  - STORAGE call to update_option("crowdaa_user_password", md5($user_password)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:164
  - STORAGE call to update_option("crowdaa_user_api_key", $user_api_key) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:165
  - STORAGE call to update_option("crowdaa_user_auth_api_key", $user_auth_api_key) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:166
  - STORAGE call to update_option("crowdaa_user_id", $json->data->userId) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:167
  - STORAGE call to update_option("crowdaa_auth_token", $json->data->authToken) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:253
  - STORAGE call to update_option("crowdaa_sync_feed_categories", "all") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-admin-display.php:263
  - STORAGE call to update_option("crowdaa_sync_feed_categories", implode(",", $categories)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-api.php:422
  - STORAGE call to update_post_meta($wp_post_id, "api_post_id", $json->articleId) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:439
  - STORAGE call to update_post_meta($wp_post_id, "api_media_map", $api_media_map_raw) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:458
  - STORAGE call to delete_post_meta($wp_post_id, "api_feedpicture_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:488
  - STORAGE call to update_post_meta($wp_post_id, "second_featured_img", $default_image["attachment_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:496
  - STORAGE call to update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:514
  - STORAGE call to update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:520
  - STORAGE call to update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:548
  - STORAGE call to update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:558
  - STORAGE call to update_post_meta($wp_post_id, "second_featured_img", implode(",", $gallery_ids)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:662
  - STORAGE call to update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:664
  - STORAGE call to update_post_meta($wp_post_id, "api_feedpicture_id", serialize(["api_id" => $json->id, "attachment_id" => $attachment_id])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-api.php:669
  - STORAGE call to update_option("default_image", serialize(["api_id" => $json->id, "attachment_id" => $attachment_id, "url" => $image_url])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-crowdaa-sync-meta-box.php:164
  - STORAGE call to update_post_meta($post_id, "second_featured_img", implode(",", $imgs)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-meta-box.php:166
  - STORAGE call to update_post_meta($post_id, "second_featured_img", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/class-crowdaa-sync-rest-api.php:85
  - STORAGE call to wp_create_user($username, $password, $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).
  - Data types: user, user_meta
admin/class-crowdaa-sync-wp-hooks.php:90
  - STORAGE call to update_post_meta($post_id, "crowdaa_need_sync", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
crowdaa-sync.php:50
  - STORAGE call to update_option("crowdaa_sync_wp_to_api_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
crowdaa-sync.php:51
  - STORAGE call to update_option("crowdaa_last_version", CROWDAA_SYNC_META_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-crowdaa-sync-versions.php:20
  - STORAGE call to update_option("crowdaa_last_version", CROWDAA_SYNC_META_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-crowdaa-sync-versions.php:21
  - STORAGE call to update_option("crowdaa_sync_wp_to_api_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-crowdaa-sync-versions.php:22
  - STORAGE call to update_option("crowdaa_sync_internal_version", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-crowdaa-sync-versions.php:36
  - STORAGE call to update_option("crowdaa_sync_internal_version", $ver) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-crowdaa-sync-versions.php:38
  - STORAGE call to update_option("crowdaa_sync_wp_to_api_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

admin/class-crowdaa-sync-api.php:458
  - DELETION call to delete_post_meta($wp_post_id, "api_feedpicture_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta 

By data type:
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPStorageDetector.fwrite($fd, $to_write) - {'file'}
	PHPRetrievalDetector.fgets($fd) - {'file'}
	PHPRetrievalDetector.fgetc($fd) - {'file'}
none
	WordPressStorageDetector.wp_insert_post($post_data) - set()
	WordPressStorageDetector.wp_update_post($data) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => "post", "meta_key" => "api_post_id", "meta_compare" => "=", "meta_value" => $api_post_id]) - set()
option
	WordPressRetrievalDetector.get_option("default_image") - {'option'}
	WordPressStorageDetector.update_option("crowdaa_user_email", "") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_max_duration", 60) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_wp_to_api_from", 0) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_max_duration", $sync_max_duration) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_feed_categories", "all") - {'option'}
	WordPressStorageDetector.update_option("default_image", serialize(["api_id" => $json->id, "attachment_id" => $attachment_id, "url" => $image_url])) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_feed_categories", implode(",", $categories)) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_user_id", "") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_articles_api_to_wp_enabled") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_api_url") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_max_duration", 60) - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_user_api_key") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_last_version", false) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_last_version", CROWDAA_SYNC_META_VERSION) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_internal_version", $ver) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_internal_version", "0") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_articles_wp_to_api_enabled", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_auth_token") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_last_version", false) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_api_url", "") - {'option'}
	WordPressStorageDetector.update_option("crowdaa_user_password", "") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_auth_token") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_auth_token") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_feed_categories", "all") - {'option'}
	WordPressStorageDetector.update_option("crowdaa_cron_sync_enabled", "yes") - {'option'}
	WordPressStorageDetector.update_option("crowdaa_auth_token", "") - {'option'}
	WordPressStorageDetector.update_option("crowdaa_user_auth_api_key", "") - {'option'}
	WordPressStorageDetector.update_option("crowdaa_api_url", esc_url_raw($_POST["api_url"])) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_user_email", $user_email) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_wp_to_api_from", 0) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_user_password", md5($user_password)) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_user_api_key", $user_api_key) - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_auth_token") - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_articles_api_to_wp_enabled", "yes") - {'option'}
	WordPressStorageDetector.update_option("crowdaa_user_id", $json->data->userId) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_articles_api_to_wp_enabled", "no") - {'option'}
	WordPressStorageDetector.update_option("crowdaa_last_version", CROWDAA_SYNC_META_VERSION) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_wp_to_api_from", 0) - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_articles_wp_to_api_from", 0) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_auth_token", $json->data->authToken) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_articles_wp_to_api_from", $opqueue["articles"]["wp_to_api_last"]) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_cron_sync_enabled", "no") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_internal_version", "0") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_wpapi_register_enabled", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_auth_token") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_auth_token") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_articles_api_to_wp_enabled", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_articles_wp_to_api_from", 0) - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_api_url") - {'option'}
	WordPressRetrievalDetector.get_option("blogname") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_cron_sync_enabled") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_articles_api_to_wp_from", 0) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_user_auth_api_key", $user_auth_api_key) - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_internal_version", "0") - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_wpapi_register_enabled", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_wpapi_register_enabled") - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_articles_api_to_wp_from", $opqueue["articles"]["api_to_wp_last"]) - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_articles_api_to_wp_from", 0) - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_articles_wp_to_api_from", 0) - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_articles_wp_to_api_enabled", "no") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_user_email") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_user_api_key") - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_articles_api_to_wp_from", $opqueue["articles"]["api_to_wp_last"]) - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_wpapi_register_enabled", "yes") - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_wpapi_register_enabled", "no") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_articles_api_to_wp_enabled", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("default_image") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_user_password") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_feed_categories", "all") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_user_auth_api_key") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_auth_token") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_articles_wp_to_api_enabled", "yes") - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_articles_wp_to_api_enabled", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("default_image") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_cron_sync_enabled") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_max_duration", 60) - {'option'}
	WordPressRetrievalDetector.get_option("blogname") - {'option'}
	WordPressStorageDetector.update_option("crowdaa_sync_articles_wp_to_api_from", $opqueue["articles"]["wp_to_api_last"]) - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_articles_api_to_wp_from", 0) - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_auth_token") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_cron_sync_enabled") - {'option'}
	WordPressRetrievalDetector.get_option("crowdaa_sync_articles_wp_to_api_enabled") - {'option'}
password
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
post
	WordPressRetrievalDetector.get_post_field("post_content", $wp_post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_content", $wp_post_id) - {'post', 'post_meta', 'wp_post'}
post_meta
	WordPressStorageDetector.update_post_meta($post["post_id"], "crowdaa_version", Crowdaa_Sync_Versions->get_version()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post["post_id"], "crowdaa_last_wp_to_api_sync", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "api_post_id", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "api_post_id", $api_data->_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "second_featured_img", implode(",", $imgs)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "second_featured_img", $default_image["attachment_id"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "second_featured_img", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "crowdaa_need_sync", "no") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "crowdaa_need_sync", "yes") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "crowdaa_version", Crowdaa_Sync_Versions->get_version()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_field("post_content", $wp_post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "api_post_id", $api_data->_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "crowdaa_need_sync", "no") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post_id, "api_media_map", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "api_feedpicture_id", serialize(["api_id" => $json->id, "attachment_id" => $attachment_id])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "api_feedpicture_id", serialize(["api_id" => $api_data->feedPicture->_id, "attachment_id" => $attachment_id])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "api_feedpicture_id", "") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post_id, "api_feedpicture_id", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post_id, "second_featured_img", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post_id, "api_media_map", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_field("post_content", $wp_post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($wp_post_id, "api_media_map", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "second_featured_img", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post_id, "api_media_map", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "api_post_id", $json->articleId) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "crowdaa_version", Crowdaa_Sync_Versions->get_version()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "api_media_map", $api_media_map_raw) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post_id, "second_featured_img", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $meta_key, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post["post_id"], "crowdaa_version", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post["post_id"], "api_post_id", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "second_featured_img", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post["post_id"], "crowdaa_need_sync", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post_id, "api_feedpicture_id", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "second_featured_img", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "second_featured_img", implode(",", $attaches)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post_id, "api_media_map", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($wp_post_id, "api_feedpicture_id") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post["post_id"], "crowdaa_last_wp_to_api_sync", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post_id, "api_feedpicture_id", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($wp_post_id, "api_feedpicture_id") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post_id, "second_featured_img", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post["post_id"], "crowdaa_need_sync", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post_id, "api_feedpicture_id", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "api_post_id", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post["post_id"], "crowdaa_version", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post["post_id"], "crowdaa_need_sync", "no") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($wp_post_id, "second_featured_img", implode(",", $gallery_ids)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($wp_post_id, "api_feedpicture_id", true) - {'post_meta'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
user
	WordPressStorageDetector.wp_create_user($username, $password, $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("id", $user_id) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_create_user($username, $password, $email) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
user_meta
	WordPressStorageDetector.wp_create_user($username, $password, $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("id", $user_id) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_create_user($username, $password, $email) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
wp_post
	WordPressRetrievalDetector.get_post_field("post_content", $wp_post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_content", $wp_post_id) - {'post', 'post_meta', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:23.722744.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 2425 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.901888.

1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
2425 STORE_REACHES edges created
2425 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 1000 nodes as PERSONAL
Tainted 1611 nodes as PERSONAL
In total, tainted 1611 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 75 nodes as ENCRYPTED
In total, tainted 75 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:28.984920.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:02:18.518871!
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_password"]' of personal types {'password'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_password"]' of personal types {'password'} is found.,,None
DELETION call to delete_post_meta($wp_post_id, "api_feedpicture_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
MD5 called with parameters [user_password]. Ignore if [user_password] does not contain personal information.,md5,None
RETRIEVAL call to fgetc($fd).,None,None
RETRIEVAL call to fgets($fd).,None,None
STORAGE call to fwrite($fd, $to_write).,None,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_password' of personal types {'password'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_password' of personal types {'password'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_password' of personal types {'password'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_ok' of personal types {'email'} is found.,,None
variable '$email_ok' of personal types {'email'} is found.,,None
variable '$email_ok' of personal types {'email'} is found.,,None
variable '$email_ok' of personal types {'email'} is found.,,None
variable '$email_ok' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_password' of personal types {'password'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_password' of personal types {'password'} is found.,,None
variable '$user_password' of personal types {'password'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_password' of personal types {'password'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_password' of personal types {'password'} is found.,,None
API call to wp_remote_get($img_url, ["method" => "GET", "timeout" => 45, "stream" => true, "filename" => $upload_fname, "sslcertificates" => CROWDAA_SYNC_CACERT_PATH]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_request($this->api_url . $url, $options). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_option("crowdaa_sync_articles_api_to_wp_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_articles_wp_to_api_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_articles_wp_to_api_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_articles_api_to_wp_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_auth_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "api_post_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(["post_type" => "post", "meta_key" => "api_post_id", "meta_compare" => "=", "meta_value" => $api_post_id]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($wp_post["post_id"], "crowdaa_last_wp_to_api_sync", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post["post_id"], "crowdaa_need_sync", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post["post_id"], "crowdaa_version", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post["post_id"], "crowdaa_need_sync", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post["post_id"], "crowdaa_version", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post["post_id"], "api_post_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_articles_api_to_wp_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_articles_wp_to_api_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_feed_categories", "all") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("default_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_cron_sync_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_articles_api_to_wp_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_articles_wp_to_api_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post_id, "api_media_map", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post_id, "second_featured_img", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post_id, "api_feedpicture_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post_id, "api_feedpicture_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_cron_sync_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_articles_wp_to_api_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_articles_api_to_wp_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_wpapi_register_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_max_duration", 60) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post_id, "api_media_map", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_auth_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_field("post_content", $wp_post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).,None,None
RETRIEVAL call to get_option("crowdaa_user_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_api_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_auth_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_auth_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_auth_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_field("post_content", $wp_post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).,None,None
RETRIEVAL call to get_post_meta($wp_post_id, "api_media_map", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("default_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post_id, "api_feedpicture_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post_id, "api_feedpicture_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post_id, "second_featured_img", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post_id, "second_featured_img", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string), 2: $single (bool). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post_id, "api_media_map", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_auth_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post_id, "api_media_map", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_auth_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($wp_post_id, "api_feedpicture_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, $meta_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_wpapi_register_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("id", $user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post_meta($post_id, "api_post_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "second_featured_img", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "second_featured_img", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "second_featured_img", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("default_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_feed_categories", "all") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_api_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_user_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_user_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_user_auth_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_user_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_auth_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_cron_sync_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_articles_wp_to_api_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_articles_api_to_wp_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_wpapi_register_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_max_duration", 60) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_last_version", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_max_duration", 60) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_last_version", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_internal_version", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("crowdaa_sync_internal_version", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
STORAGE call to update_option("crowdaa_sync_articles_wp_to_api_from", $opqueue["articles"]["wp_to_api_last"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_sync_articles_api_to_wp_from", $opqueue["articles"]["api_to_wp_last"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post["post_id"], "crowdaa_need_sync", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post["post_id"], "crowdaa_version", Crowdaa_Sync_Versions->get_version()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post["post_id"], "crowdaa_last_wp_to_api_sync", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("crowdaa_sync_articles_wp_to_api_from", $opqueue["articles"]["wp_to_api_last"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_sync_articles_api_to_wp_from", $opqueue["articles"]["api_to_wp_last"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_insert_post($post_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($wp_post_id, "api_post_id", $api_data->_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "crowdaa_need_sync", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "crowdaa_version", Crowdaa_Sync_Versions->get_version()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_post($data). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($wp_post_id, "api_post_id", $api_data->_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "crowdaa_need_sync", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "crowdaa_version", Crowdaa_Sync_Versions->get_version()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "second_featured_img", implode(",", $attaches)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "api_feedpicture_id", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "api_feedpicture_id", serialize(["api_id" => $api_data->feedPicture->_id, "attachment_id" => $attachment_id])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("crowdaa_user_email", $user_email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_user_password", md5($user_password)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_user_api_key", $user_api_key) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_user_auth_api_key", $user_auth_api_key) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_user_id", $json->data->userId) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_auth_token", $json->data->authToken) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_sync_feed_categories", "all") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_sync_feed_categories", implode(",", $categories)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_cron_sync_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_cron_sync_enabled", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_sync_articles_wp_to_api_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_sync_articles_wp_to_api_enabled", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_sync_articles_api_to_wp_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_sync_articles_api_to_wp_enabled", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_sync_wpapi_register_enabled", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_sync_wpapi_register_enabled", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_sync_max_duration", $sync_max_duration) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_user_id", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_auth_token", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_api_url", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_user_email", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_user_password", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_user_auth_api_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_api_url", esc_url_raw($_POST["api_url"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "api_post_id", $json->articleId) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "api_media_map", $api_media_map_raw) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($wp_post_id, "api_feedpicture_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "second_featured_img", $default_image["attachment_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "second_featured_img", implode(",", $gallery_ids)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($wp_post_id, "api_feedpicture_id", serialize(["api_id" => $json->id, "attachment_id" => $attachment_id])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("default_image", serialize(["api_id" => $json->id, "attachment_id" => $attachment_id, "url" => $image_url])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "second_featured_img", implode(",", $imgs)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "second_featured_img", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_create_user($username, $password, $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, "crowdaa_need_sync", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("crowdaa_sync_wp_to_api_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_last_version", CROWDAA_SYNC_META_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_last_version", CROWDAA_SYNC_META_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_sync_wp_to_api_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_sync_internal_version", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_sync_internal_version", $ver) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("crowdaa_sync_wp_to_api_from", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
CRYPTOGRAPHY call to wp_create_user($username, $password, $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "wp_insert_post($post_data)", found in file admin/class-crowdaa-sync-add-info-wp.php at line 164. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_post_meta($wp_post_id, "api_post_id", $api_data->_id)", found in file admin/class-crowdaa-sync-add-info-wp.php at line 165. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_post_meta($wp_post_id, "second_featured_img", $default_image["attachment_id"])", found in file admin/class-crowdaa-sync-api.php at line 488. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_option("default_image", serialize(["api_id" => $json->id, "attachment_id" => $attachment_id, "url" => $image_url]))", found in file admin/class-crowdaa-sync-api.php at line 669. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_post_meta($wp_post_id, "crowdaa_need_sync", "no")", found in file admin/class-crowdaa-sync-add-info-wp.php at line 176. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_post_meta($wp_post_id, "crowdaa_version", Crowdaa_Sync_Versions->get_version())", found in file admin/class-crowdaa-sync-add-info-wp.php at line 177. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "wp_update_post($data)", found in file admin/class-crowdaa-sync-add-info-wp.php at line 198. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_post_meta($wp_post_id, "api_post_id", $api_data->_id)", found in file admin/class-crowdaa-sync-add-info-wp.php at line 199. 

[has_storage] WP User info of types (['user', 'email', 'user_meta']) stored through WordPress function "wp_create_user($username, $password, $email)", found in file admin/class-crowdaa-sync-rest-api.php at line 85. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_option("crowdaa_sync_internal_version", $ver)", found in file includes/class-crowdaa-sync-versions.php at line 36. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_post_meta($wp_post_id, "api_feedpicture_id", serialize(["api_id" => $json->id, "attachment_id" => $attachment_id]))", found in file admin/class-crowdaa-sync-api.php at line 664. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_post_meta($wp_post_id, "api_feedpicture_id", serialize(["api_id" => $api_data->feedPicture->_id, "attachment_id" => $attachment_id]))", found in file admin/class-crowdaa-sync-add-info-wp.php at line 330. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_post_meta($wp_post_id, "api_feedpicture_id", "")", found in file admin/class-crowdaa-sync-add-info-wp.php at line 310. 

[has_storage] PII of types (['email']) stored through WordPress function "update_option("crowdaa_user_email", $user_email)", found in file admin/class-crowdaa-sync-admin-display.php at line 162. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_option("crowdaa_user_password", md5($user_password))", found in file admin/class-crowdaa-sync-admin-display.php at line 163. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_option("crowdaa_user_id", $json->data->userId)", found in file admin/class-crowdaa-sync-admin-display.php at line 166. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_option("crowdaa_auth_token", $json->data->authToken)", found in file admin/class-crowdaa-sync-admin-display.php at line 167. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_post_meta($wp_post_id, "api_post_id", $json->articleId)", found in file admin/class-crowdaa-sync-api.php at line 422. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_post_meta($wp_post_id, "api_media_map", $api_media_map_raw)", found in file admin/class-crowdaa-sync-api.php at line 439. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map))", found in file admin/class-crowdaa-sync-api.php at line 548. 

[has_storage] Unstructured data storage of PII types (['user', 'email', 'user_meta', 'password']) to files through function "fwrite", found in file includes/class-crowdaa-sync-logs.php at line 34. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_post_meta($wp_post_id, "second_featured_img", implode(",", $attaches))", found in file admin/class-crowdaa-sync-add-info-wp.php at line 269. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map))", found in file admin/class-crowdaa-sync-add-info-wp.php at line 268. 

[has_storage] PII of types (['user', 'email', 'user_meta', 'password']) stored through WordPress function "update_post_meta($wp_post_id, "second_featured_img", implode(",", $gallery_ids))", found in file admin/class-crowdaa-sync-api.php at line 558. 

[has_storage] Storage check is CUSTOM_UNSTRUCTURED 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post($post_data) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-add-info-wp.php at line 164. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($wp_post_id, "api_post_id", $api_data->_id) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-add-info-wp.php at line 165. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($wp_post_id, "second_featured_img", $default_image["attachment_id"]) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-api.php at line 488. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("default_image", serialize(["api_id" => $json->id, "attachment_id" => $attachment_id, "url" => $image_url])) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-api.php at line 669. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($wp_post_id, "crowdaa_need_sync", "no") does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-add-info-wp.php at line 176. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($wp_post_id, "crowdaa_version", Crowdaa_Sync_Versions->get_version()) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-add-info-wp.php at line 177. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_update_post($data) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-add-info-wp.php at line 198. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($wp_post_id, "api_post_id", $api_data->_id) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-add-info-wp.php at line 199. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("crowdaa_sync_internal_version", $ver) does not have corresponding deletion method. Storage method found in file includes/class-crowdaa-sync-versions.php at line 36. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($wp_post_id, "api_feedpicture_id", serialize(["api_id" => $json->id, "attachment_id" => $attachment_id])) has deletion method delete_post_meta($wp_post_id, "api_feedpicture_id"). Storage method found in file admin/class-crowdaa-sync-api.php at line 664. Deletion method found in file admin/class-crowdaa-sync-api.php at line 458. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($wp_post_id, "api_feedpicture_id", serialize(["api_id" => $api_data->feedPicture->_id, "attachment_id" => $attachment_id])) has deletion method delete_post_meta($wp_post_id, "api_feedpicture_id"). Storage method found in file admin/class-crowdaa-sync-add-info-wp.php at line 330. Deletion method found in file admin/class-crowdaa-sync-api.php at line 458. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($wp_post_id, "api_feedpicture_id", "") has deletion method delete_post_meta($wp_post_id, "api_feedpicture_id"). Storage method found in file admin/class-crowdaa-sync-add-info-wp.php at line 310. Deletion method found in file admin/class-crowdaa-sync-api.php at line 458. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("crowdaa_user_email", $user_email) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-admin-display.php at line 162. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("crowdaa_user_password", md5($user_password)) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-admin-display.php at line 163. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("crowdaa_user_id", $json->data->userId) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-admin-display.php at line 166. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("crowdaa_auth_token", $json->data->authToken) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-admin-display.php at line 167. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($wp_post_id, "api_post_id", $json->articleId) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-api.php at line 422. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($wp_post_id, "api_media_map", $api_media_map_raw) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-api.php at line 439. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-api.php at line 548. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 16296 , but is impossible due to custom storage of PII without identifiers. Found in file includes/class-crowdaa-sync-logs.php at line 34 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($wp_post_id, "second_featured_img", implode(",", $attaches)) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-add-info-wp.php at line 269. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($wp_post_id, "api_media_map", serialize($api_media_map)) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-add-info-wp.php at line 268. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($wp_post_id, "second_featured_img", implode(",", $gallery_ids)) does not have corresponding deletion method. Storage method found in file admin/class-crowdaa-sync-api.php at line 558. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4094. Found in file admin/class-crowdaa-sync-add-info-wp.php at line 164 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4100. Found in file admin/class-crowdaa-sync-add-info-wp.php at line 165 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9998. Found in file admin/class-crowdaa-sync-api.php at line 488 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11042. Found in file admin/class-crowdaa-sync-api.php at line 669 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4148. Found in file admin/class-crowdaa-sync-add-info-wp.php at line 176 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4156. Found in file admin/class-crowdaa-sync-add-info-wp.php at line 177 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4254. Found in file admin/class-crowdaa-sync-add-info-wp.php at line 198 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4260. Found in file admin/class-crowdaa-sync-add-info-wp.php at line 199 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 16798. Found in file includes/class-crowdaa-sync-versions.php at line 36 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11014. Found in file admin/class-crowdaa-sync-api.php at line 664 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4942. Found in file admin/class-crowdaa-sync-add-info-wp.php at line 330 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4794. Found in file admin/class-crowdaa-sync-add-info-wp.php at line 310 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6689. Found in file admin/class-crowdaa-sync-admin-display.php at line 162 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6696. Found in file admin/class-crowdaa-sync-admin-display.php at line 163 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6721. Found in file admin/class-crowdaa-sync-admin-display.php at line 166 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6732. Found in file admin/class-crowdaa-sync-admin-display.php at line 167 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9592. Found in file admin/class-crowdaa-sync-api.php at line 422 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9710. Found in file admin/class-crowdaa-sync-api.php at line 439 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 10386. Found in file admin/class-crowdaa-sync-api.php at line 548 

[Art.15, Right to access] Complete data access is required for storage at node ID 16296 , but is impossible due to custom storage of PII without identifiers. Found in file includes/class-crowdaa-sync-logs.php at line 34 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4581. Found in file admin/class-crowdaa-sync-add-info-wp.php at line 269 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4568. Found in file admin/class-crowdaa-sync-add-info-wp.php at line 268 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 10449. Found in file admin/class-crowdaa-sync-api.php at line 558 

[Art.15, Right to access] Data access is NONE 

[third_party] Third party usage is NONE for data types [] 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file admin/class-crowdaa-sync-add-info-wp.php at line 539 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file admin/class-crowdaa-sync-api.php at line 896 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? True 

[main] Is third_party in violation? False 

[main] Is encryption in violation? True 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        
