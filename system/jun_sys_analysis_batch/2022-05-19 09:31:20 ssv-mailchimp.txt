Timeout in resolving values
Timeout in running neo4j query
Running Main.py on ssv-mailchimp

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.695565.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.007513.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 247 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:01.172675.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.479681.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 2246 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.406681.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 432 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:05.160975.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 54 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.092020.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 704 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:15.207238.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 14858
Added 11175 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 19818
Added 4960 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.443978.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/ssv-mailchimp.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/general.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/SSV_General.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/lib/SqlFormatter.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/Form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/Message.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/User.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/custom-fields/Field.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/custom-fields/HeaderField.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/custom-fields/InputField.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/custom-fields/LabelField.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/custom-fields/TabField.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/custom-fields/input-fields/CheckboxInputField.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/custom-fields/input-fields/CustomInputField.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/custom-fields/input-fields/DateInputField.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/custom-fields/input-fields/HiddenInputField.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/custom-fields/input-fields/ImageInputField.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/custom-fields/input-fields/RoleCheckboxInputField.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/custom-fields/input-fields/RoleSelectInputField.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/custom-fields/input-fields/SelectInputField.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/models/custom-fields/input-fields/TextInputField.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/general/options/options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/options/events.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/options/general.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/options/options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ssv-mailchimp/options/users.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:02.565710.

1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2493 PHP_REACHES edges created
60 CALLS edges created
286 PHP_REACHES edges created
1 CALLS edges created
1 PHP_REACHES edges created
2 CALLS edges created
1 PHP_REACHES edges created
3 CALLS edges created
1 PHP_REACHES edges created
1 CALLS edges created
1 PHP_REACHES edges created
1 CALLS edges created
1 PHP_REACHES edges created
73 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
11933 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4960 PHP_REACHES edges created
19818 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 4906 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.336066.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 1 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.699913.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 470 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:16.971432.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 433 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.177746.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.791659.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:09.626178.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.051491.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.029655.

1 CALLS edges created
903 PHP_REACHES edges created
904 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 460 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.177785.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
4 SQL operations to process.
SELECT meta_key FROM $wpdb
SQL command (SELECT meta_key FROM $wpdb) cannot be parsed correct.

		CREATE TABLE IF NOT EXISTS $table_name (
			ID bigint(20) NOT NULL,
			postID bigint(20) NOT NULL,
			fieldName VARCHAR(50) NOT NULL,
			fieldTitle VARCHAR(50) NOT NULL,
			customField TEXT NOT NULL,
            UNIQUE (postID, fieldName),
			PRIMARY KEY (ID, postID)
		) $wpdb->get_charset_collate();
SQL command ( CREATE TABLE IF NOT EXISTS $table_name ( ID bigint(20) NOT NULL, postID bigint(20) NOT NULL, fieldName VARCHAR(50) NOT NULL, fieldTitle VARCHAR(50) NOT NULL, customField TEXT NOT NULL, UNIQUE (postID, fieldName), PRIMARY KEY (ID, postID) ) $wpdb->get_charset_collate();) cannot be parsed correct.
SELECT * FROM $table WHERE postID = $post_ID ORDER BY ID ASC
SQL command (SELECT * FROM $table WHERE postID = $post_ID ORDER BY ID ASC) cannot be parsed correct.
SELECT customField FROM $table WHERE customField LIKE '%"name":"$name"%
SQL command (SELECT customField FROM $table WHERE customField LIKE '%"name":"$name"%) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [808, 3539, 10096, 13924]
Added 0 SQL nodes. 0 out of 4 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:02.432445.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<script type="text/javascript">'' cannot be parsed correct.
HTML code '$'$adminReferer'' cannot be parsed correct.
HTML code '$'$resetButtonReset to Default'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'json_encode($selected)'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$variable;'' cannot be parsed correct.
HTML code '$'trim(preg_replace("/\\s+", " ", $print))'' cannot be parsed correct.
HTML code '$'25count($options)'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'disabled'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'25count($options)'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'Message("User not found.", Message::"ERROR_MESSAGE")->getHTML()'' cannot be parsed correct.
HTML code '$'$this_overrideRight'' cannot be parsed correct.
HTML code '$'$this_overrideRight'' cannot be parsed correct.
HTML code '$'truefalse'' cannot be parsed correct.
HTML code '$'$field'' cannot be parsed correct.
HTML code '$'$field'' cannot be parsed correct.
HTML code '$'$field'' cannot be parsed correct.
HTML code '$'$field->toJSON()'' cannot be parsed correct.
HTML code '$'truefalse'' cannot be parsed correct.
HTML code '$'$buttonText'' cannot be parsed correct.
HTML code '$'$tab'' cannot be parsed correct.
HTML code '$'$tab'' cannot be parsed correct.
HTML code '$'$childField->getHTML($this->overrideRight)'' cannot be parsed correct.
HTML code '$'$buttonText'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$this_message'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this_name'' cannot be parsed correct.
HTML code '$'$filter'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'$this_text'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'$this_name'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'*'' cannot be parsed correct.
HTML code '$'type=$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'name=$this'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'$defaultValue'' cannot be parsed correct.
HTML code '$'$placeholder'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'name=$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'name=$this'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'checked($isChecked, true, false)'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'*'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'name=$this'' cannot be parsed correct.
HTML code '$'value=$this_defaultValue'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'*'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'name=$this'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'DateTime("NOW")->format("Y-m-d")'' cannot be parsed correct.
HTML code '$'disabled($this->disabled, true, false)'' cannot be parsed correct.
HTML code '$'placeholder="yyyy-mm-dd"'' cannot be parsed correct.
HTML code '$'dateAfter=$this_dateRangeAfter'' cannot be parsed correct.
HTML code '$'dateBefore=$this_dateRangeBefore'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'*'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'name=$this'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'*'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'name=$this'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'name=$this'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'disabled(!current_user_can("edit_roles"), true, false)'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'selected($option, $this->value)'' cannot be parsed correct.
HTML code '$'translate_user_role($wp_roles->roles[$option]["name"])'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'name=$this'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'disabled(!current_user_can("edit_roles"), true, false)'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'selected($option, $this->value)'' cannot be parsed correct.
HTML code '$'translate_user_role($wp_roles->roles[$option]["name"])'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'name=$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'name=$this'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'checked($this->value, true, false)'' cannot be parsed correct.
HTML code '$'disabled(!current_user_can("edit_roles"), true, false)'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'name=$this'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'DateTime("NOW")->format("Y-m-d")'' cannot be parsed correct.
HTML code '$'disabled($this->disabled, true, false)'' cannot be parsed correct.
HTML code '$'$placeholder'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'name=$this'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'selected($option, $this->value)'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'name=$this'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'disabled($this->disabled, true, false)'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'selected($option, $this->value)'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'*'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'*'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'name=$this'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'DateTime("NOW")->format("Y-m-d")'' cannot be parsed correct.
HTML code '$'$placeholder'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'count($fields)'' cannot be parsed correct.
HTML code '$'$field'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$field'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'get_option(SSV_MailChimp::"OPTION_API_KEY")'' cannot be parsed correct.
HTML code '$'get_option(SSV_MailChimp::"OPTION_MAX_REQUEST_COUNT")'' cannot be parsed correct.
HTML code '$'checked(get_option(SSV_MailChimp::"OPTION_CREATE_LIST"), true, false)'' cannot be parsed correct.
HTML code '$'$_GET_page'' cannot be parsed correct.
HTML code '$'$_GET_page'' cannot be parsed correct.
HTML code '$'$_GET_page'' cannot be parsed correct.
HTML code '$'str_replace(SSV_MailChimp::"PATH", "ssv-mailchimp/", )'' cannot be parsed correct.
HTML code '$'$listID'' cannot be parsed correct.
HTML code '$'selected($listID, $selected, false)'' cannot be parsed correct.
HTML code '$'$listName'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'json_decode($link, true)_ID'' cannot be parsed correct.
HTML code '$'json_decode($link, true)_fieldName'' cannot be parsed correct.
HTML code '$'json_decode($link, true)_tagName'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'_selected_result_'' cannot be parsed correct.
HTML code '$'" onClick='' cannot be parsed correct.
HTML code '$'_remove('' cannot be parsed correct.
HTML code '$'")\' value="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</option>
                '' cannot be parsed correct.
HTML code '$'" name="'' cannot be parsed correct.
HTML code '$'" value=""/>
        <!--suppress JSUnusedAssignment -->
        <script>
            var options = '' cannot be parsed correct.
HTML code '$';
            document.getElementById(\''' cannot be parsed correct.
HTML code '$'\').value = options;
            function '' cannot be parsed correct.
HTML code '$'_add(val) {
                options.push(val);
                document.getElementById(\''' cannot be parsed correct.
HTML code '$'\').value = options;
                var option = document.createElement("option");
                option.id = \''' cannot be parsed correct.
HTML code '$'<br/>'' cannot be parsed correct.
HTML code '$'" multiple title="Columns to Export" style="min-width: 200px;">
                '' cannot be parsed correct.
HTML code '$'_non_selected_result_'' cannot be parsed correct.
HTML code '$'" onClick='' cannot be parsed correct.
HTML code '$'_add('' cannot be parsed correct.
HTML code '$'")\' value="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'</option>
                '' cannot be parsed correct.
HTML code '$'" multiple title="Columns to Export" style="min-width: 200px;">
                '' cannot be parsed correct.
HTML code '$'_selected_result_\' + val;
                option.text = val;
                option.addEventListener("click", function () {
                    '' cannot be parsed correct.
HTML code '$'_remove(val);
                }, false);
                document.getElementById(\'selected_fields\').add(option);
                option = document.getElementById(\''' cannot be parsed correct.
HTML code '$'_non_selected_result_\' + val);
                option.setAttribute("disabled", "disabled");
            }

            function '' cannot be parsed correct.
HTML code '$'_remove(val) {
                var index = options.indexOf(val);
                if (index > -1) {
                    options.splice(index, 1);
                }
                document.getElementById(\''' cannot be parsed correct.
HTML code '$'\').value = options;
                var option = document.getElementById(\''' cannot be parsed correct.
HTML code '$'_non_selected_result_\' + val);
                option.removeAttribute("disabled");
                option = document.getElementById(\''' cannot be parsed correct.
HTML code '$'_selected_result_\' + val);
                option.parentNode.removeChild(option);
            }
        </script>
        '' cannot be parsed correct.
HTML code '$'">
            <table id="custom-fields-placeholder" class="sortable"></table>
            <button type="button" onclick="mp_ssv_add_new_custom_field()">Add Field</button>
        </div>
        <script>
            var i = '' cannot be parsed correct.
HTML code '$';
            mp_ssv_sortable_table(\'custom-fields-placeholder\');
            function mp_ssv_add_new_custom_field() {
                mp_ssv_add_new_field(\'input\', \'text\', i, {"override_right": "'' cannot be parsed correct.
HTML code '$'"},'' cannot be parsed correct.
HTML code '$');
                i++;
            }
            '' cannot be parsed correct.
HTML code '$'\', \''' cannot be parsed correct.
HTML code '$'\', '' cannot be parsed correct.
HTML code '$', '' cannot be parsed correct.
HTML code '$', '' cannot be parsed correct.
HTML code '$');
            '' cannot be parsed correct.
HTML code '$'                <button type="submit" name="submit" class="btn waves-effect waves-light btn waves-effect waves-light--primary">'' cannot be parsed correct.
HTML code '$'</button>
                '' cannot be parsed correct.
HTML code '$'            </form>
            '' cannot be parsed correct.
HTML code '$'">
                    <form action="#" method="POST" enctype="multipart/form-data">
                        <input type="hidden" name="tab" value="'' cannot be parsed correct.
HTML code '$'">
                       '' cannot be parsed correct.
HTML code '$'                        '' cannot be parsed correct.
HTML code '$'</button>
                        '' cannot be parsed correct.
HTML code '$'" style="padding: 10px;">
            '' cannot be parsed correct.
HTML code '$'        </div>
        '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</label>
        </td>
        <td>
            <label>
                Filter
                <input id="filter'' cannot be parsed correct.
HTML code '$'" type="checkbox" name="filter_'' cannot be parsed correct.
HTML code '$'">
            </label>
        </td>
        <td>
           '' cannot be parsed correct.
HTML code '$'        </td>
        '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'</h2>
        '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'</p><br/>
        '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'><a href="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a></li>
        '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</label>
            <input '' cannot be parsed correct.
HTML code '$' id='' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'/>
        </div>
        '' cannot be parsed correct.
HTML code '$'" type="text" name="'' cannot be parsed correct.
HTML code '$'" title="'' cannot be parsed correct.
HTML code '$'"/'' cannot be parsed correct.
HTML code '$'>
            <input type="hidden" id="'' cannot be parsed correct.
HTML code '$'_reset"'' cannot be parsed correct.
HTML code '$' value="false"/>
            <input type="checkbox" id="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$' value="true" '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'/>
            <label for='' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</label>
        </div>
        '' cannot be parsed correct.
HTML code '$'" name="'' cannot be parsed correct.
HTML code '$'" title="'' cannot be parsed correct.
HTML code '$'">
            <option value="false">Not Checked</option>
            <option value="true">Checked</option>
        </select>
        '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' />'' cannot be parsed correct.
HTML code '$'" type="text" name="'' cannot be parsed correct.
HTML code '$'" title="'' cannot be parsed correct.
HTML code '$'"/'' cannot be parsed correct.
HTML code '$'</label>
            <input type="date" id="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'/>
        </div>
        '' cannot be parsed correct.
HTML code '$'\');
                    dateField.change(function () {
                        if (dateField.val() === \'\') {
                            dateField.addClass(\'invalid\')
                        } else {
                            dateField.removeClass(\'invalid\')
                        }
                    });
                });
            </script>
            '' cannot be parsed correct.
HTML code '$'" type="text" name="'' cannot be parsed correct.
HTML code '$'_after" title="'' cannot be parsed correct.
HTML code '$'" placeholder="yyyy-mm-dd"/>'' cannot be parsed correct.
HTML code '$'" type="text" name="'' cannot be parsed correct.
HTML code '$'_before" title="'' cannot be parsed correct.
HTML code '$'" placeholder="yyyy-mm-dd"/>'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</label><br/>
                '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'/>
                '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'>
                    </div>
                    <div class="file-path-wrapper">
                        <input class="file-path validate" type="text" title="'' cannot be parsed correct.
HTML code '$'">
                    </div>
                </div>
            </div>
           '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</label><br/>
            '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'/>
            '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'><br/>
            '' cannot be parsed correct.
HTML code '$'" name="'' cannot be parsed correct.
HTML code '$'" title="'' cannot be parsed correct.
HTML code '$'">
            <option value="0">No Image</option>
            <option value="1">Has Image</option>
        </select>
        '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'>
                    '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'</option>
                    '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</label>
            </div>
            '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</label><br/>
                <select id='' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'>
                    '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'</option>
                    '' cannot be parsed correct.
HTML code '$'" name="'' cannot be parsed correct.
HTML code '$'" title="'' cannot be parsed correct.
HTML code '$'">
            <option value="false">Not Checked</option>
            <option value="true">Checked</option>
        </select>
        '' cannot be parsed correct.
HTML code '$'>
            <input type="hidden" id="'' cannot be parsed correct.
HTML code '$'_reset"'' cannot be parsed correct.
HTML code '$' value="false"/>
            <input type="checkbox" id="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$' value="true" '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'/>
            <label for='' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</label>
        </div>
        '' cannot be parsed correct.
HTML code '$'" name="'' cannot be parsed correct.
HTML code '$'" title="'' cannot be parsed correct.
HTML code '$'">
            <option value="false">Not Checked</option>
            <option value="true">Checked</option>
        </select>
        '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' title='' cannot be parsed correct.
HTML code '$'"/>
                <label'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'>
                    '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'</option>
                    '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</label>
            </div>
            '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</label><br/>
                <select id='' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'>
                    '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'</option>
                    '' cannot be parsed correct.
HTML code '$'" name="'' cannot be parsed correct.
HTML code '$'</label>
            </div>
            '' cannot be parsed correct.
HTML code '$'</label>
            <input type="text" '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' title='' cannot be parsed correct.
HTML code '$'"/>
           '' cannot be parsed correct.
HTML code '$'" type="text" name="'' cannot be parsed correct.
HTML code '$'" class="field-filter" title="'' cannot be parsed correct.
HTML code '$'"/'' cannot be parsed correct.
HTML code '$'" name="custom_field_fields[]" multiple>
                        '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'>
                                '' cannot be parsed correct.
HTML code '$'                            </option>
                            '' cannot be parsed correct.
HTML code '$'" title="'' cannot be parsed correct.
HTML code '$'">
           '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</option>
            '' cannot be parsed correct.
HTML code '$'" title="MailChimp API Key"/>
            </td>
        </tr>
        <tr>
            <th scope="row">Max Request</th>
            <td>
                <label>
                    <input type="number" class="regular-text" name="max_request" value="'' cannot be parsed correct.
HTML code '$' />
                    Create a mailing list for all new events created. Users registering for this event will automatically be added.
                </label>
            </td>
        </tr>
    </table>
    '' cannot be parsed correct.
HTML code '$'" placeholder="10"/>
                    The maximum amount of *|MERGE|* tags returned by Mailchimp.
                </label>
            </td>
        </tr>
    </table>
    '' cannot be parsed correct.
HTML code '$'&tab=general" class="nav-tab '' cannot be parsed correct.
HTML code '$'">General</a>
            <a href="?page='' cannot be parsed correct.
HTML code '$'&tab=users" class="nav-tab '' cannot be parsed correct.
HTML code '$'">Users</a>
           '' cannot be parsed correct.
HTML code '$'&tab=events" class="nav-tab '' cannot be parsed correct.
HTML code '$'">Events</a>
           '' cannot be parsed correct.
HTML code '$'/images/link-new-tab-small.png" style="vertical-align:middle">
            </a>
        </h2>
        '' cannot be parsed correct.
HTML code '$'">Mailchimp Options</a></h2'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'</option>
                    '' cannot be parsed correct.
HTML code '$' />
                        Show all the meta keys.
                    </label>
                </td>
            </tr>
        '' cannot be parsed correct.
HTML code '$';
            function mp_ssv_add_new_custom_merge_tag() {
                mp_ssv_add_new_merge_tag(i, null, null);
                i++;
            }
            '' cannot be parsed correct.
HTML code '$'\', \''' cannot be parsed correct.
HTML code '$'\', \''' cannot be parsed correct.
HTML code '$'\');
            '' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:35.721148.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.050283.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 2 do_action/apply_filters calls and 11 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.605906.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FrontBaseDetector
### Start running IngresDetector
### Finish running FirebirdInterBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MySQLDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ArrayElementDetector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running HashDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPStorageDetector
### Start running PhpVarDetector
### Finish running PHPRetrievalDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running OpenSSLDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running PHPIncludedDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SqlServerDetector
### Start running WordpressHashingFnDetector
### Finish running PropertyDetector
### Start running WordPressRemoteDetector
### Finish running MySQLiDetector
### Start running WordPressRetrievalDetector
### Finish running maxdbDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running GenericDatabaseUsageDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running VariableDetector
### Start running UninstallDetector
### Finish running WordpressHashingFnDetector
### Finish running UninstallDetector
### Finish running WordPressRemoteDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finish running DeletionDetector
### Finished running detectors
options/events.php:13
  - Request variable '$_POST["email_on_registration"]' of personal types {'email'} is found.
  - Data types: email 

functions.php:78
  - MD5 called with parameters [strtolower, mailchimpMember, email_address]. Ignore if [strtolower, mailchimpMember, email_address] does not contain personal information.
functions.php:194
  - MD5 called with parameters [member, strtolower, user_email]. Ignore if [member, strtolower, user_email] does not contain personal information. 

functions.php:70
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
functions.php:122
  - object property '$author->user_email' of personal types {'email'} is found.
  - Data types: email
functions.php:194
  - object property '$member->user_email' of personal types {'email'} is found.
  - Data types: email
general/models/User.php:326
  - object property '$this->data->user_pass' of personal types {'password'} is found.
  - Data types: password
general/models/User.php:373
  - object property '$this->user_email' of personal types {'email'} is found.
  - Data types: email
general/models/User.php:412
  - object property '$this->user_email' of personal types {'email'} is found.
  - Data types: email 

general/models/User.php:80
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
general/models/User.php:80
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
general/models/User.php:83
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
general/models/User.php:86
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
general/models/User.php:90
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
general/models/User.php:92
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
general/models/User.php:123
  - variable '$usernameField' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
general/models/User.php:144
  - variable '$emailField' of personal types {'email'} is found.
  - Data types: email
general/models/User.php:207
  - variable '$usernameField' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
general/models/User.php:207
  - variable '$usernameField' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
general/models/User.php:208
  - variable '$emailField' of personal types {'email'} is found.
  - Data types: email
general/models/User.php:208
  - variable '$emailField' of personal types {'email'} is found.
  - Data types: email 

general/models/User.php:89
  - CRYPTOGRAPHY call to wp_create_user(SSV_General->sanitize($username, "text"), SSV_General->sanitize($password, "text"), SSV_General->sanitize($email, "email")) alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).
  - Data types: user_meta, user
general/models/User.php:371
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $this->ID, "user_email" => $value]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user_meta, user
general/models/User.php:376
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $this->ID, "display_name" => $value]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user_meta, user
general/models/User.php:383
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $this->ID, "display_name" => $display_name]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user_meta, user 

functions.php:91
  - API call to wp_remote_request($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
functions.php:144
  - API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
functions.php:205
  - API call to wp_remote_request($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
ssv-mailchimp.php:76
  - API call to wp_remote_get($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
ssv-mailchimp.php:103
  - API call to wp_remote_get($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

functions.php:21
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:33
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:61
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_MERGE_TAG_LINKS", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
functions.php:74
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:107
  - RETRIEVAL call to get_option(SSV_Mailchimp::"OPTION_CREATE_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:129
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:157
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_CREATE_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:163
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:176
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:189
  - RETRIEVAL call to get_option(SSV_Mailchimp::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:193
  - RETRIEVAL call to get_option(SSV_Mailchimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:216
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:224
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:224
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_IGNORE_USERS_LIST_MESSAGE") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
general/models/User.php:48
  - RETRIEVAL call to get_user_by("id", $id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
general/models/User.php:65
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
general/models/User.php:295
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
general/models/User.php:418
  - RETRIEVAL call to get_user_meta($this->ID, $meta_key, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
options/events.php:24
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_CREATE_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
options/general.php:29
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
options/general.php:36
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_MAX_REQUEST_COUNT") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
options/options.php:20
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
options/users.php:18
  - RETRIEVAL call to get_users() alters data types {'user_meta', 'user'}. Returns (array).
  - Data types: user_meta, user
options/users.php:20
  - RETRIEVAL call to get_option(SSV_Mailchimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
options/users.php:45
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_MERGE_TAG_LINKS", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
options/users.php:54
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_USERS_LIST", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
options/users.php:67
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_SHOW_ALL_META_KEYS") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
options/users.php:74
  - RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_USERS_LIST", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
ssv-mailchimp.php:63
  - RETRIEVAL call to get_option(self::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ssv-mailchimp.php:86
  - RETRIEVAL call to get_option(self::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ssv-mailchimp.php:90
  - RETRIEVAL call to get_option(self::"OPTION_MAX_REQUEST_COUNT") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

functions.php:145
  - STORAGE call to update_post_meta($event->getID(), "mailchimp_list", $listID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
general/models/User.php:89
  - STORAGE call to wp_create_user(SSV_General->sanitize($username, "text"), SSV_General->sanitize($password, "text"), SSV_General->sanitize($email, "email")) alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).
  - Data types: user_meta, user
general/models/User.php:371
  - STORAGE call to wp_update_user(["ID" => $this->ID, "user_email" => $value]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user_meta, user
general/models/User.php:372
  - STORAGE call to update_user_meta($this->ID, "user_email", $value) alters data types {'user_meta', 'email'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta, email
general/models/User.php:376
  - STORAGE call to wp_update_user(["ID" => $this->ID, "display_name" => $value]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user_meta, user
general/models/User.php:377
  - STORAGE call to update_user_meta($this->ID, "display_name", $value) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
general/models/User.php:381
  - STORAGE call to update_user_meta($this->ID, $meta_key, $value) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
general/models/User.php:383
  - STORAGE call to wp_update_user(["ID" => $this->ID, "display_name" => $display_name]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user_meta, user
general/models/User.php:384
  - STORAGE call to update_user_meta($this->ID, "display_name", $display_name) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
general/models/User.php:390
  - STORAGE call to update_user_meta($this->ID, $meta_key, $value) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
options/events.php:13
  - STORAGE call to update_option(SSV_MailChimp::"OPTION_CREATE_LIST", SSV_General->sanitize($_POST["email_on_registration"], "boolean")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
options/general.php:19
  - STORAGE call to update_option(SSV_MailChimp::"OPTION_API_KEY", SSV_General->sanitize($_POST["api_key"], "text")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
options/general.php:20
  - STORAGE call to update_option(SSV_MailChimp::"OPTION_MAX_REQUEST_COUNT", SSV_General->sanitize($_POST["max_request"], "int")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
options/users.php:11
  - STORAGE call to update_option(SSV_MailChimp::"OPTION_IGNORE_USERS_LIST_MESSAGE", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
options/users.php:24
  - STORAGE call to update_option(SSV_MailChimp::"OPTION_USERS_LIST", SSV_General->sanitize($_POST["users_list"], "text")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
options/users.php:26
  - STORAGE call to delete_option(SSV_MailChimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
options/users.php:29
  - STORAGE call to update_option(SSV_MailChimp::"OPTION_SHOW_ALL_META_KEYS", $showAllKeys) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
options/users.php:42
  - STORAGE call to update_option(SSV_MailChimp::"OPTION_MERGE_TAG_LINKS", $links) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
ssv-mailchimp.php:50
  - STORAGE call to delete_option(self::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
ssv-mailchimp.php:51
  - STORAGE call to delete_option(self::"OPTION_MAX_REQUEST_COUNT") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
ssv-mailchimp.php:52
  - STORAGE call to delete_option(self::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
ssv-mailchimp.php:53
  - STORAGE call to delete_option(self::"OPTION_MERGE_TAG_LINKS") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
ssv-mailchimp.php:54
  - STORAGE call to delete_option(self::"OPTION_CREATE_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
ssv-mailchimp.php:55
  - STORAGE call to delete_option(self::"OPTION_IGNORE_USERS_LIST_MESSAGE") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
ssv-mailchimp.php:56
  - STORAGE call to update_option(self::"OPTION_SHOW_ALL_META_KEYS", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

general/models/Form.php:240
  - Data from table None deleted: "$wpdb->delete(SSV_General::"CUSTOM_FIELDS_TABLE", ["postID" => $post->ID])"
options/users.php:26
  - DELETION call to delete_option(SSV_MailChimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
ssv-mailchimp.php:50
  - DELETION call to delete_option(self::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
ssv-mailchimp.php:51
  - DELETION call to delete_option(self::"OPTION_MAX_REQUEST_COUNT") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
ssv-mailchimp.php:52
  - DELETION call to delete_option(self::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
ssv-mailchimp.php:53
  - DELETION call to delete_option(self::"OPTION_MERGE_TAG_LINKS") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
ssv-mailchimp.php:54
  - DELETION call to delete_option(self::"OPTION_CREATE_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
ssv-mailchimp.php:55
  - DELETION call to delete_option(self::"OPTION_IGNORE_USERS_LIST_MESSAGE") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	WordPressStorageDetector.update_user_meta($this->ID, "user_email", $value) - {'user_meta', 'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
none
	PHPIncludedDetector.(unknown) - set()
	DeletionDetector.$wpdb->delete(SSV_General::"CUSTOM_FIELDS_TABLE", ["postID" => $post->ID]) - set()
	PHPIncludedDetector.(unknown) - set()
option
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_MERGE_TAG_LINKS", []) - {'option'}
	WordPressStorageDetector.delete_option(self::"OPTION_IGNORE_USERS_LIST_MESSAGE") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_API_KEY") - {'option'}
	DeletionDetector.delete_option(SSV_MailChimp::"OPTION_USERS_LIST") - {'option'}
	WordPressStorageDetector.update_option(SSV_MailChimp::"OPTION_API_KEY", SSV_General->sanitize($_POST["api_key"], "text")) - {'option'}
	DeletionDetector.delete_option(self::"OPTION_IGNORE_USERS_LIST_MESSAGE") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_USERS_LIST") - {'option'}
	WordPressStorageDetector.delete_option(SSV_MailChimp::"OPTION_USERS_LIST") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_CREATE_LIST") - {'option'}
	WordPressStorageDetector.update_option(SSV_MailChimp::"OPTION_USERS_LIST", SSV_General->sanitize($_POST["users_list"], "text")) - {'option'}
	DeletionDetector.delete_option(self::"OPTION_CREATE_LIST") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_API_KEY") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_Mailchimp::"OPTION_CREATE_LIST") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_API_KEY") - {'option'}
	WordPressRetrievalDetector.get_option(self::"OPTION_API_KEY") - {'option'}
	WordPressStorageDetector.delete_option(self::"OPTION_USERS_LIST") - {'option'}
	WordPressStorageDetector.delete_option(self::"OPTION_CREATE_LIST") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_USERS_LIST", "") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_CREATE_LIST") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_Mailchimp::"OPTION_API_KEY") - {'option'}
	DeletionDetector.delete_option(self::"OPTION_MAX_REQUEST_COUNT") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_USERS_LIST") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_SHOW_ALL_META_KEYS") - {'option'}
	WordPressStorageDetector.delete_option(self::"OPTION_MERGE_TAG_LINKS") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_MERGE_TAG_LINKS", []) - {'option'}
	WordPressRetrievalDetector.get_option(SSV_Mailchimp::"OPTION_USERS_LIST") - {'option'}
	WordPressStorageDetector.update_option(SSV_MailChimp::"OPTION_SHOW_ALL_META_KEYS", $showAllKeys) - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_USERS_LIST") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_USERS_LIST") - {'option'}
	WordPressStorageDetector.update_option(SSV_MailChimp::"OPTION_MERGE_TAG_LINKS", $links) - {'option'}
	DeletionDetector.delete_option(self::"OPTION_USERS_LIST") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_IGNORE_USERS_LIST_MESSAGE") - {'option'}
	WordPressStorageDetector.update_option(SSV_MailChimp::"OPTION_CREATE_LIST", SSV_General->sanitize($_POST["email_on_registration"], "boolean")) - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_MAX_REQUEST_COUNT") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_API_KEY") - {'option'}
	WordPressStorageDetector.delete_option(self::"OPTION_API_KEY") - {'option'}
	DeletionDetector.delete_option(self::"OPTION_MERGE_TAG_LINKS") - {'option'}
	WordPressStorageDetector.update_option(SSV_MailChimp::"OPTION_MAX_REQUEST_COUNT", SSV_General->sanitize($_POST["max_request"], "int")) - {'option'}
	WordPressRetrievalDetector.get_option(self::"OPTION_API_KEY") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_Mailchimp::"OPTION_USERS_LIST") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_USERS_LIST", "") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_API_KEY") - {'option'}
	WordPressRetrievalDetector.get_option(self::"OPTION_MAX_REQUEST_COUNT") - {'option'}
	WordPressStorageDetector.delete_option(self::"OPTION_MAX_REQUEST_COUNT") - {'option'}
	WordPressRetrievalDetector.get_option(SSV_MailChimp::"OPTION_USERS_LIST") - {'option'}
	WordPressStorageDetector.update_option(self::"OPTION_SHOW_ALL_META_KEYS", false) - {'option'}
	WordPressStorageDetector.update_option(SSV_MailChimp::"OPTION_IGNORE_USERS_LIST_MESSAGE", true) - {'option'}
	DeletionDetector.delete_option(self::"OPTION_API_KEY") - {'option'}
password
	PropertyDetector.(unknown) - {'password'}
post_meta
	WordPressStorageDetector.update_post_meta($event->getID(), "mailchimp_list", $listID) - {'post_meta'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
user
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressStorageDetector.wp_update_user(["ID" => $this->ID, "display_name" => $value]) - {'user_meta', 'user'}
	WordpressHashingFnDetector.wp_create_user(SSV_General->sanitize($username, "text"), SSV_General->sanitize($password, "text"), SSV_General->sanitize($email, "email")) - {'user_meta', 'user'}
	WordPressStorageDetector.wp_update_user(["ID" => $this->ID, "user_email" => $value]) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.wp_create_user(SSV_General->sanitize($username, "text"), SSV_General->sanitize($password, "text"), SSV_General->sanitize($email, "email")) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressStorageDetector.wp_update_user(["ID" => $this->ID, "display_name" => $display_name]) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $this->ID, "user_email" => $value]) - {'user_meta', 'user'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $this->ID, "display_name" => $value]) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_users() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("id", $id) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $this->ID, "display_name" => $display_name]) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
user_meta
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressStorageDetector.wp_update_user(["ID" => $this->ID, "display_name" => $value]) - {'user_meta', 'user'}
	WordpressHashingFnDetector.wp_create_user(SSV_General->sanitize($username, "text"), SSV_General->sanitize($password, "text"), SSV_General->sanitize($email, "email")) - {'user_meta', 'user'}
	WordPressStorageDetector.wp_update_user(["ID" => $this->ID, "user_email" => $value]) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($this->ID, $meta_key, $value) - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_meta($this->ID, $meta_key, true) - {'user_meta'}
	WordPressStorageDetector.wp_create_user(SSV_General->sanitize($username, "text"), SSV_General->sanitize($password, "text"), SSV_General->sanitize($email, "email")) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressStorageDetector.wp_update_user(["ID" => $this->ID, "display_name" => $display_name]) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $this->ID, "user_email" => $value]) - {'user_meta', 'user'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $this->ID, "display_name" => $value]) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($this->ID, "display_name", $display_name) - {'user_meta'}
	WordPressRetrievalDetector.get_users() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("id", $id) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $this->ID, "display_name" => $display_name]) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($this->ID, $meta_key, $value) - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($this->ID, "user_email", $value) - {'user_meta', 'email'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($this->ID, "display_name", $value) - {'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:13.617400.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 435 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.337906.

435 STORE_REACHES edges created
435 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 446 nodes as PERSONAL
In total, tainted 446 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 98 nodes as ENCRYPTED
In total, tainted 98 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:13.156982.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:02:32.225080!
Request variable '$_POST["email_on_registration"]' of personal types {'email'} is found.,,None
Data from table None deleted: "$wpdb->delete(SSV_General::"CUSTOM_FIELDS_TABLE", ["postID" => $post->ID])",None,None
DELETION call to delete_option(SSV_MailChimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(self::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(self::"OPTION_MAX_REQUEST_COUNT") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(self::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(self::"OPTION_MERGE_TAG_LINKS") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(self::"OPTION_CREATE_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(self::"OPTION_IGNORE_USERS_LIST_MESSAGE") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
MD5 called with parameters [member, strtolower, user_email]. Ignore if [member, strtolower, user_email] does not contain personal information.,md5,None
MD5 called with parameters [strtolower, mailchimpMember, email_address]. Ignore if [strtolower, mailchimpMember, email_address] does not contain personal information.,md5,None
object property '$author->user_email' of personal types {'email'} is found.,,None
object property '$member->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$this->data->user_pass' of personal types {'password'} is found.,,None
object property '$this->user_email' of personal types {'email'} is found.,,None
object property '$this->user_email' of personal types {'email'} is found.,,None
variable '$usernameField' of personal types {'user_meta', 'user'} is found.,,None
variable '$emailField' of personal types {'email'} is found.,,None
variable '$usernameField' of personal types {'user_meta', 'user'} is found.,,None
variable '$usernameField' of personal types {'user_meta', 'user'} is found.,,None
variable '$emailField' of personal types {'email'} is found.,,None
variable '$emailField' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_request($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_request($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_option(SSV_Mailchimp::"OPTION_CREATE_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_CREATE_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_Mailchimp::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_Mailchimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_IGNORE_USERS_LIST_MESSAGE") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_MERGE_TAG_LINKS", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($this->ID, $meta_key, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("id", $id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_CREATE_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_MAX_REQUEST_COUNT") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_users() alters data types {'user_meta', 'user'}. Returns (array).,None,None
RETRIEVAL call to get_option(SSV_Mailchimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_MERGE_TAG_LINKS", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_USERS_LIST", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_SHOW_ALL_META_KEYS") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(SSV_MailChimp::"OPTION_USERS_LIST", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"OPTION_MAX_REQUEST_COUNT") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_post_meta($event->getID(), "mailchimp_list", $listID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_user(["ID" => $this->ID, "user_email" => $value]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($this->ID, "user_email", $value) alters data types {'user_meta', 'email'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_user(["ID" => $this->ID, "display_name" => $value]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($this->ID, "display_name", $value) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($this->ID, $meta_key, $value) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_user(["ID" => $this->ID, "display_name" => $display_name]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($this->ID, "display_name", $display_name) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($this->ID, $meta_key, $value) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_create_user(SSV_General->sanitize($username, "text"), SSV_General->sanitize($password, "text"), SSV_General->sanitize($email, "email")) alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).,None,None
STORAGE call to update_option(SSV_MailChimp::"OPTION_CREATE_LIST", SSV_General->sanitize($_POST["email_on_registration"], "boolean")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(SSV_MailChimp::"OPTION_API_KEY", SSV_General->sanitize($_POST["api_key"], "text")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(SSV_MailChimp::"OPTION_MAX_REQUEST_COUNT", SSV_General->sanitize($_POST["max_request"], "int")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(SSV_MailChimp::"OPTION_IGNORE_USERS_LIST_MESSAGE", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(SSV_MailChimp::"OPTION_USERS_LIST", SSV_General->sanitize($_POST["users_list"], "text")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option(SSV_MailChimp::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option(SSV_MailChimp::"OPTION_SHOW_ALL_META_KEYS", $showAllKeys) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(SSV_MailChimp::"OPTION_MERGE_TAG_LINKS", $links) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option(self::"OPTION_API_KEY") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(self::"OPTION_MAX_REQUEST_COUNT") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(self::"OPTION_USERS_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(self::"OPTION_MERGE_TAG_LINKS") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(self::"OPTION_CREATE_LIST") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(self::"OPTION_IGNORE_USERS_LIST_MESSAGE") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option(self::"OPTION_SHOW_ALL_META_KEYS", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $this->ID, "user_email" => $value]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $this->ID, "display_name" => $value]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $this->ID, "display_name" => $display_name]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_create_user(SSV_General->sanitize($username, "text"), SSV_General->sanitize($password, "text"), SSV_General->sanitize($email, "email")) alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "update_option(SSV_MailChimp::"OPTION_API_KEY", SSV_General->sanitize($_POST["api_key"], "text"))", found in file options/general.php at line 19. 

[has_storage] WP User info of types (['user_meta', 'email', 'user']) stored through WordPress function "wp_update_user(["ID" => $this->ID, "display_name" => $value])", found in file general/models/User.php at line 376. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "update_option(SSV_MailChimp::"OPTION_USERS_LIST", SSV_General->sanitize($_POST["users_list"], "text"))", found in file options/users.php at line 24. 

[has_storage] PII of types (['user_meta', 'email', 'user']) stored through WordPress function "update_post_meta($event->getID(), "mailchimp_list", $listID)", found in file functions.php at line 145. 

[has_storage] WP User info of types (['email', 'user_meta', 'user']) stored through WordPress function "wp_update_user(["ID" => $this->ID, "user_email" => $value])", found in file general/models/User.php at line 371. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "update_user_meta($this->ID, $meta_key, $value)", found in file general/models/User.php at line 390. 

[has_storage] WP User info of types (['email', 'user_meta', 'user']) stored through WordPress function "wp_create_user(SSV_General->sanitize($username, "text"), SSV_General->sanitize($password, "text"), SSV_General->sanitize($email, "email"))", found in file general/models/User.php at line 89. 

[has_storage] WP User info of types (['user_meta', 'email', 'user']) stored through WordPress function "wp_update_user(["ID" => $this->ID, "display_name" => $display_name])", found in file general/models/User.php at line 383. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "update_option(SSV_MailChimp::"OPTION_SHOW_ALL_META_KEYS", $showAllKeys)", found in file options/users.php at line 29. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "update_option(SSV_MailChimp::"OPTION_CREATE_LIST", SSV_General->sanitize($_POST["email_on_registration"], "boolean"))", found in file options/events.php at line 13. 

[has_storage] PII of types (['user_meta', 'email', 'user']) stored through WordPress function "update_user_meta($this->ID, "display_name", $display_name)", found in file general/models/User.php at line 384. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "update_option(SSV_MailChimp::"OPTION_MAX_REQUEST_COUNT", SSV_General->sanitize($_POST["max_request"], "int"))", found in file options/general.php at line 20. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "update_user_meta($this->ID, $meta_key, $value)", found in file general/models/User.php at line 381. 

[has_storage] PII of types (['user', 'user_meta', 'email']) stored through WordPress function "update_user_meta($this->ID, "user_email", $value)", found in file general/models/User.php at line 372. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "update_user_meta($this->ID, "display_name", $value)", found in file general/models/User.php at line 377. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_API_KEY", SSV_General->sanitize($_POST["api_key"], "text")) has deletion method delete_option(SSV_MailChimp::"OPTION_USERS_LIST"). Storage method found in file options/general.php at line 19. Deletion method found in file options/users.php at line 26. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_API_KEY", SSV_General->sanitize($_POST["api_key"], "text")) has deletion method delete_option(self::"OPTION_API_KEY"). Storage method found in file options/general.php at line 19. Deletion method found in file ssv-mailchimp.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_API_KEY", SSV_General->sanitize($_POST["api_key"], "text")) has deletion method delete_option(self::"OPTION_MAX_REQUEST_COUNT"). Storage method found in file options/general.php at line 19. Deletion method found in file ssv-mailchimp.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_API_KEY", SSV_General->sanitize($_POST["api_key"], "text")) has deletion method delete_option(self::"OPTION_USERS_LIST"). Storage method found in file options/general.php at line 19. Deletion method found in file ssv-mailchimp.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_API_KEY", SSV_General->sanitize($_POST["api_key"], "text")) has deletion method delete_option(self::"OPTION_MERGE_TAG_LINKS"). Storage method found in file options/general.php at line 19. Deletion method found in file ssv-mailchimp.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_API_KEY", SSV_General->sanitize($_POST["api_key"], "text")) has deletion method delete_option(self::"OPTION_CREATE_LIST"). Storage method found in file options/general.php at line 19. Deletion method found in file ssv-mailchimp.php at line 54. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_API_KEY", SSV_General->sanitize($_POST["api_key"], "text")) has deletion method delete_option(self::"OPTION_IGNORE_USERS_LIST_MESSAGE"). Storage method found in file options/general.php at line 19. Deletion method found in file ssv-mailchimp.php at line 55. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_USERS_LIST", SSV_General->sanitize($_POST["users_list"], "text")) has deletion method delete_option(SSV_MailChimp::"OPTION_USERS_LIST"). Storage method found in file options/users.php at line 24. Deletion method found in file options/users.php at line 26. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_USERS_LIST", SSV_General->sanitize($_POST["users_list"], "text")) has deletion method delete_option(self::"OPTION_API_KEY"). Storage method found in file options/users.php at line 24. Deletion method found in file ssv-mailchimp.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_USERS_LIST", SSV_General->sanitize($_POST["users_list"], "text")) has deletion method delete_option(self::"OPTION_MAX_REQUEST_COUNT"). Storage method found in file options/users.php at line 24. Deletion method found in file ssv-mailchimp.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_USERS_LIST", SSV_General->sanitize($_POST["users_list"], "text")) has deletion method delete_option(self::"OPTION_USERS_LIST"). Storage method found in file options/users.php at line 24. Deletion method found in file ssv-mailchimp.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_USERS_LIST", SSV_General->sanitize($_POST["users_list"], "text")) has deletion method delete_option(self::"OPTION_MERGE_TAG_LINKS"). Storage method found in file options/users.php at line 24. Deletion method found in file ssv-mailchimp.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_USERS_LIST", SSV_General->sanitize($_POST["users_list"], "text")) has deletion method delete_option(self::"OPTION_CREATE_LIST"). Storage method found in file options/users.php at line 24. Deletion method found in file ssv-mailchimp.php at line 54. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_USERS_LIST", SSV_General->sanitize($_POST["users_list"], "text")) has deletion method delete_option(self::"OPTION_IGNORE_USERS_LIST_MESSAGE"). Storage method found in file options/users.php at line 24. Deletion method found in file ssv-mailchimp.php at line 55. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($event->getID(), "mailchimp_list", $listID) does not have corresponding deletion method. Storage method found in file functions.php at line 145. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($this->ID, $meta_key, $value) does not have corresponding deletion method. Storage method found in file general/models/User.php at line 390. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_SHOW_ALL_META_KEYS", $showAllKeys) has deletion method delete_option(SSV_MailChimp::"OPTION_USERS_LIST"). Storage method found in file options/users.php at line 29. Deletion method found in file options/users.php at line 26. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_SHOW_ALL_META_KEYS", $showAllKeys) has deletion method delete_option(self::"OPTION_API_KEY"). Storage method found in file options/users.php at line 29. Deletion method found in file ssv-mailchimp.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_SHOW_ALL_META_KEYS", $showAllKeys) has deletion method delete_option(self::"OPTION_MAX_REQUEST_COUNT"). Storage method found in file options/users.php at line 29. Deletion method found in file ssv-mailchimp.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_SHOW_ALL_META_KEYS", $showAllKeys) has deletion method delete_option(self::"OPTION_USERS_LIST"). Storage method found in file options/users.php at line 29. Deletion method found in file ssv-mailchimp.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_SHOW_ALL_META_KEYS", $showAllKeys) has deletion method delete_option(self::"OPTION_MERGE_TAG_LINKS"). Storage method found in file options/users.php at line 29. Deletion method found in file ssv-mailchimp.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_SHOW_ALL_META_KEYS", $showAllKeys) has deletion method delete_option(self::"OPTION_CREATE_LIST"). Storage method found in file options/users.php at line 29. Deletion method found in file ssv-mailchimp.php at line 54. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_SHOW_ALL_META_KEYS", $showAllKeys) has deletion method delete_option(self::"OPTION_IGNORE_USERS_LIST_MESSAGE"). Storage method found in file options/users.php at line 29. Deletion method found in file ssv-mailchimp.php at line 55. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_CREATE_LIST", SSV_General->sanitize($_POST["email_on_registration"], "boolean")) has deletion method delete_option(SSV_MailChimp::"OPTION_USERS_LIST"). Storage method found in file options/events.php at line 13. Deletion method found in file options/users.php at line 26. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_CREATE_LIST", SSV_General->sanitize($_POST["email_on_registration"], "boolean")) has deletion method delete_option(self::"OPTION_API_KEY"). Storage method found in file options/events.php at line 13. Deletion method found in file ssv-mailchimp.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_CREATE_LIST", SSV_General->sanitize($_POST["email_on_registration"], "boolean")) has deletion method delete_option(self::"OPTION_MAX_REQUEST_COUNT"). Storage method found in file options/events.php at line 13. Deletion method found in file ssv-mailchimp.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_CREATE_LIST", SSV_General->sanitize($_POST["email_on_registration"], "boolean")) has deletion method delete_option(self::"OPTION_USERS_LIST"). Storage method found in file options/events.php at line 13. Deletion method found in file ssv-mailchimp.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_CREATE_LIST", SSV_General->sanitize($_POST["email_on_registration"], "boolean")) has deletion method delete_option(self::"OPTION_MERGE_TAG_LINKS"). Storage method found in file options/events.php at line 13. Deletion method found in file ssv-mailchimp.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_CREATE_LIST", SSV_General->sanitize($_POST["email_on_registration"], "boolean")) has deletion method delete_option(self::"OPTION_CREATE_LIST"). Storage method found in file options/events.php at line 13. Deletion method found in file ssv-mailchimp.php at line 54. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_CREATE_LIST", SSV_General->sanitize($_POST["email_on_registration"], "boolean")) has deletion method delete_option(self::"OPTION_IGNORE_USERS_LIST_MESSAGE"). Storage method found in file options/events.php at line 13. Deletion method found in file ssv-mailchimp.php at line 55. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($this->ID, "display_name", $display_name) does not have corresponding deletion method. Storage method found in file general/models/User.php at line 384. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_MAX_REQUEST_COUNT", SSV_General->sanitize($_POST["max_request"], "int")) has deletion method delete_option(SSV_MailChimp::"OPTION_USERS_LIST"). Storage method found in file options/general.php at line 20. Deletion method found in file options/users.php at line 26. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_MAX_REQUEST_COUNT", SSV_General->sanitize($_POST["max_request"], "int")) has deletion method delete_option(self::"OPTION_API_KEY"). Storage method found in file options/general.php at line 20. Deletion method found in file ssv-mailchimp.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_MAX_REQUEST_COUNT", SSV_General->sanitize($_POST["max_request"], "int")) has deletion method delete_option(self::"OPTION_MAX_REQUEST_COUNT"). Storage method found in file options/general.php at line 20. Deletion method found in file ssv-mailchimp.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_MAX_REQUEST_COUNT", SSV_General->sanitize($_POST["max_request"], "int")) has deletion method delete_option(self::"OPTION_USERS_LIST"). Storage method found in file options/general.php at line 20. Deletion method found in file ssv-mailchimp.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_MAX_REQUEST_COUNT", SSV_General->sanitize($_POST["max_request"], "int")) has deletion method delete_option(self::"OPTION_MERGE_TAG_LINKS"). Storage method found in file options/general.php at line 20. Deletion method found in file ssv-mailchimp.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_MAX_REQUEST_COUNT", SSV_General->sanitize($_POST["max_request"], "int")) has deletion method delete_option(self::"OPTION_CREATE_LIST"). Storage method found in file options/general.php at line 20. Deletion method found in file ssv-mailchimp.php at line 54. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(SSV_MailChimp::"OPTION_MAX_REQUEST_COUNT", SSV_General->sanitize($_POST["max_request"], "int")) has deletion method delete_option(self::"OPTION_IGNORE_USERS_LIST_MESSAGE"). Storage method found in file options/general.php at line 20. Deletion method found in file ssv-mailchimp.php at line 55. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($this->ID, $meta_key, $value) does not have corresponding deletion method. Storage method found in file general/models/User.php at line 381. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($this->ID, "user_email", $value) does not have corresponding deletion method. Storage method found in file general/models/User.php at line 372. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($this->ID, "display_name", $value) does not have corresponding deletion method. Storage method found in file general/models/User.php at line 377. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 24048. Found in file options/general.php at line 19 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 24478. Found in file options/users.php at line 24 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 695. Found in file functions.php at line 145 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13524. Found in file general/models/User.php at line 390 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 24529. Found in file options/users.php at line 29 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 23942. Found in file options/events.php at line 13 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13468. Found in file general/models/User.php at line 384 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 24066. Found in file options/general.php at line 20 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13423. Found in file general/models/User.php at line 381 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13342. Found in file general/models/User.php at line 372 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13390. Found in file general/models/User.php at line 377 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file functions.php at line 205 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file ssv-mailchimp.php at line 103 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file functions.php at line 91 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file ssv-mailchimp.php at line 76 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is securely encrypted with ['hash']. Found in file functions.php at line 144 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? True 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function ssv-mailchimp_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'ssv-mailchimp' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function ssv-mailchimp_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'ssv-mailchimp' ),
        'callback'             => 'ssv-mailchimp_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'ssv-mailchimp_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function ssv-mailchimp_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'ssv-mailchimp' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'ssv-mailchimp' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'ssv-mailchimp' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'ssv-mailchimp', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'ssv-mailchimp_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
