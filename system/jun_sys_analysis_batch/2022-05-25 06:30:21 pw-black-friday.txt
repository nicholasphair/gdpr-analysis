Timeout in resolving values
Timeout in running neo4j query
Running Main.py on pw-black-friday

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.773217.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.252777.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 46 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.451324.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.526095.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1380 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.404356.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.688497.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.101206.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 465 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:08.372383.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 8556
Added 6665 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 10234
Added 1678 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.983679.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/pw-black-friday.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/templates/woocommerce/pw-black-friday/countdown.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/templates/woocommerce/pw-black-friday/promo.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/templates/woocommerce/pw-black-friday/sale-price-html.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/ui/edit-countdowns.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/ui/edit-deal.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/ui/edit-event.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/ui/edit-promo.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/ui/first-event.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/ui/footer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/ui/header.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/ui/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/ui/intro.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/ui/deals/step1.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/ui/deals/step2.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/ui/deals/step3.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/pw-black-friday/ui/deals/step4.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.651565.

1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
8556 PHP_REACHES edges created
1000 PHP_REACHES edges created
1678 PHP_REACHES edges created
10234 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 3304 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.189618.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:05.589307.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 239 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:07.110101.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 154 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.186311.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.263510.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.832419.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.026499.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.042478.

393 PHP_REACHES edges created
393 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 377 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.163936.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.161903.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<option value=\'$category\' selected(in_array($category->term_id, $selected_category_ids), true, false)>$prefix $category</option>
'' cannot be parsed correct.
HTML code '$'$this->hierarchical_select($category->children, $selected_category_ids, $level + 1, $category->parent, $prefix" " . esc_html($category->name) . " &#8594;")'' cannot be parsed correct.
HTML code '$'$prefix $category<br>
'' cannot be parsed correct.
HTML code '$'$this->hierarchical_string($category->children, $selected_category_ids, $level + 1, $category->parent, $prefix" " . esc_html($category->name) . " &#8594;")'' cannot be parsed correct.
HTML code '$'apply_filters("the_content", stripslashes($_POST["pwbf-edit-promo-editor"]))'' cannot be parsed correct.
HTML code '$'sprintf(__("%s Sale Price", "pw-black-friday"), $event->post_title)'' cannot be parsed correct.
HTML code '$'$pw_black_friday->local_date_and_time($event->end_datetime)'' cannot be parsed correct.
HTML code '$'$pwbf_price'' cannot be parsed correct.
HTML code '$'$top_offset'' cannot be parsed correct.
HTML code '$'null_countdown_content'' cannot be parsed correct.
HTML code '$'$pw_black_friday->local_date_and_time($event->countdown_start, "m/d/Y", "G:i")'' cannot be parsed correct.
HTML code '$'$pw_black_friday->local_date_and_time($event->begin_datetime, "m/d/Y", "G:i")'' cannot be parsed correct.
HTML code '$'$pw_black_friday->local_date_and_time($event->end_datetime, "m/d/Y", "G:i")'' cannot be parsed correct.
HTML code '$'<option value=$product_id"selected(true, true, false)>wp_kses_post($product->get_formatted_name())</option>'' cannot be parsed correct.
HTML code '$'json_encode($json_ids)'' cannot be parsed correct.
HTML code '$'implode(",", array_keys($json_ids))'' cannot be parsed correct.
HTML code '$'<option value=$product_id"selected(true, true, false)>wp_kses_post($product->get_formatted_name())</option>'' cannot be parsed correct.
HTML code '$'json_encode($json_ids)'' cannot be parsed correct.
HTML code '$'implode(",", array_keys($json_ids))'' cannot be parsed correct.
HTML code '$'$pwbf_step'' cannot be parsed correct.
HTML code '$'$pwbf_step'' cannot be parsed correct.
HTML code '$'pwbf-hidden'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'$pwbf_event'' cannot be parsed correct.
HTML code '$'$pwbf_deal'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'pwbfAddButton(input, \'$holiday_title\', \'$holiday_date\');
'' cannot be parsed correct.
HTML code '$'pwbfAddButton(inst.input, \'$holiday_title\', \'$holiday_date\');
'' cannot be parsed correct.
HTML code '$'trailingslashit(get_site_url())'' cannot be parsed correct.
HTML code '$'$event'' cannot be parsed correct.
HTML code '$'$event'' cannot be parsed correct.
HTML code '$'pwbf-hidden'' cannot be parsed correct.
HTML code '$'pwbf-hidden'' cannot be parsed correct.
HTML code '$'wc_price(10)'' cannot be parsed correct.
HTML code '$'pwbf-hidden'' cannot be parsed correct.
HTML code '$'pwbf-hidden'' cannot be parsed correct.
HTML code '$'style="display: none;"'' cannot be parsed correct.
HTML code '$'display: none;'' cannot be parsed correct.
HTML code '$'get_woocommerce_currency_symbol()'' cannot be parsed correct.
HTML code '$'max(0, $pwbf_deal->free_shipping_min_amount)'' cannot be parsed correct.
HTML code '$'$pwbf_step'' cannot be parsed correct.
HTML code '$'$pwbf_step'' cannot be parsed correct.
HTML code '$'$pwbf_deal'' cannot be parsed correct.
HTML code '$'display: none;'' cannot be parsed correct.
HTML code '$'Coupon is not valid.'' cannot be parsed correct.
HTML code '$'$pwbf_step'' cannot be parsed correct.
HTML code '$'$pwbf_step'' cannot be parsed correct.
HTML code '$'$pwbf_step'' cannot be parsed correct.
HTML code '$'$pwbf_step'' cannot be parsed correct.
HTML code '$'trailingslashit(get_site_url())'' cannot be parsed correct.
HTML code '$'Preview'' cannot be parsed correct.
HTML code '$'Preview'' cannot be parsed correct.
HTML code '$'$pw_black_friday->relative_url("/assets/images/pimwick.png")'' cannot be parsed correct.
HTML code '$'PW_BLACK_FRIDAY_VERSION'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'$color'' cannot be parsed correct.
HTML code '$'$icon'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'$size'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$color'' cannot be parsed correct.
HTML code '$'$icon'' cannot be parsed correct.
HTML code '$'$size'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'$product->get_formatted_name()<br>'' cannot be parsed correct.
HTML code '$'$event'' cannot be parsed correct.
HTML code '$'$event'' cannot be parsed correct.
HTML code '$'$event'' cannot be parsed correct.
HTML code '$'$event'' cannot be parsed correct.
HTML code '$'$event'' cannot be parsed correct.
HTML code '$'$event'' cannot be parsed correct.
HTML code '$'htmlentities($event->upcoming_countdown)'' cannot be parsed correct.
HTML code '$'$event'' cannot be parsed correct.
HTML code '$'$event'' cannot be parsed correct.
HTML code '$'$event'' cannot be parsed correct.
HTML code '$'$pw_black_friday->get_local_date_in_format("l ", $event->begin_datetime) $pw_black_friday->local_date_and_time($event->begin_datetime)'' cannot be parsed correct.
HTML code '$'$pw_black_friday->get_local_date_in_format("l ", $event->end_datetime) $pw_black_friday->local_date_and_time($event->end_datetime)'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=pw-black-friday&event_id="$event->ID"&deal_id="$deal->ID"&step=1")'' cannot be parsed correct.
HTML code '$'$deal'' cannot be parsed correct.
HTML code '$'<a href="#" class="pwbf-limited-lines-toggle"> More</a></div><div class="pwbf-unlimited-lines">'' cannot be parsed correct.
HTML code '$'<a href="#" class="pwbf-limited-lines-toggle"> More</a></div><div class="pwbf-unlimited-lines">'' cannot be parsed correct.
HTML code '$'<a href="#" class="pwbf-limited-lines-toggle"> More</a></div><div class="pwbf-unlimited-lines">'' cannot be parsed correct.
HTML code '$'10% off'' cannot be parsed correct.
HTML code '$'wc_price(10) off'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$'(wc_price($deal->free_shipping_min_amount) minimum)'' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'$deal'' cannot be parsed correct.
HTML code '$'YesNo'' cannot be parsed correct.
HTML code '$'No limit$deal'' cannot be parsed correct.
HTML code '$'$deal'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'$holiday_color'' cannot be parsed correct.
HTML code '$'$holiday_icon'' cannot be parsed correct.
HTML code '$'$holiday_title'' cannot be parsed correct.
HTML code '$'Hi there!  I\'m just a plugin, not much I can do when called directly.'' cannot be parsed correct.
HTML code '$'<div id="pwbf-container">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'BOGO'' cannot be parsed correct.
HTML code '$'<br>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:12.666833.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.118186.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 8 do_action/apply_filters calls and 38 add_action/add_filter calls. Now connecting do-add pairs.
Added 1 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.577017.

1 PHP_REACHES edges created
1 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running HashDetector
### Start running PHPIncludedDetector
### Finish running PHPDataObjectDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PHPStorageDetector
### Start running PropertyDetector
### Finish running PHPRetrievalDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running maxdbDetector
### Start running UserInputDetector
### Finish running MySQLiDetector
### Start running VariableDetector
### Finish running PropertyDetector
### Start running WordpressHashingFnDetector
### Finish running PhpVarDetector
### Start running WordPressRemoteDetector
### Finish running TokyoTyrantDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running SqlServerDetector
### Start running WP_UserDetector
### Finish running WordPressRemoteDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running UserInputDetector
### Start running UninstallDetector
### Finish running VariableDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
pw-black-friday.php:90
  - RETRIEVAL call to get_option("woocommerce_enable_coupons", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
pw-black-friday.php:387
  - RETRIEVAL call to get_option("woocommerce_price_num_decimals", 2) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
pw-black-friday.php:421
  - RETRIEVAL call to get_option("woocommerce_prices_include_tax", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
pw-black-friday.php:559
  - RETRIEVAL call to get_option("direct_checkout_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
pw-black-friday.php:560
  - RETRIEVAL call to get_option("direct_checkout_cart_redirect_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
pw-black-friday.php:616
  - RETRIEVAL call to get_post($deal->post_parent) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:629
  - RETRIEVAL call to get_post($deal->post_parent) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:651
  - RETRIEVAL call to get_post(absint($deal_id)) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:652
  - RETRIEVAL call to get_post($deal->post_parent) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:816
  - RETRIEVAL call to get_post($event_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:872
  - RETRIEVAL call to get_post($event_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:875
  - RETRIEVAL call to get_posts(["post_parent" => $event->ID, "post_type" => PW_BLACK_FRIDAY_DEAL_POST_TYPE, "nopaging" => true]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
pw-black-friday.php:945
  - RETRIEVAL call to get_post($deal_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:994
  - RETRIEVAL call to get_post($deal_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:1002
  - RETRIEVAL call to get_post(absint($_POST["event_id"])) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:1191
  - RETRIEVAL call to get_post(absint($event)) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:1218
  - RETRIEVAL call to get_posts(["post_type" => PW_BLACK_FRIDAY_EVENT_POST_TYPE, "nopaging" => true, "post_status" => "publish"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
pw-black-friday.php:1256
  - RETRIEVAL call to get_post(absint($deal)) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:1274
  - RETRIEVAL call to get_posts(["post_parent" => $event_id, "post_type" => PW_BLACK_FRIDAY_DEAL_POST_TYPE, "nopaging" => true, "post_status" => "publish", "orderby" => "post_title", "order" => "ASC"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
pw-black-friday.php:1393
  - RETRIEVAL call to get_post($deal->post_parent) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:1461
  - RETRIEVAL call to get_post($deal->post_parent) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:1653
  - RETRIEVAL call to get_option("woocommerce_prices_include_tax", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
pw-black-friday.php:1915
  - RETRIEVAL call to get_option("timezone_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
pw-black-friday.php:1916
  - RETRIEVAL call to get_option("gmt_offset", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option 

pw-black-friday.php:819
  - STORAGE call to wp_update_post($event). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
pw-black-friday.php:831
  - STORAGE call to wp_insert_post($event). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
pw-black-friday.php:835
  - STORAGE call to update_post_meta($event_id, "begin_datetime", $begin_datetime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:836
  - STORAGE call to update_post_meta($event_id, "end_datetime", $end_datetime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:861
  - STORAGE call to update_post_meta($event_id, "upcoming_countdown", $upcoming_countdown) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:862
  - STORAGE call to update_post_meta($event_id, "upcoming_offset", $upcoming_offset) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:863
  - STORAGE call to update_post_meta($event_id, "ending_countdown", $ending_countdown) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:881
  - STORAGE call to wp_delete_post($deal->ID, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:884
  - STORAGE call to wp_delete_post($event_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:949
  - STORAGE call to wp_update_post($deal). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
pw-black-friday.php:963
  - STORAGE call to wp_insert_post($deal). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
pw-black-friday.php:967
  - STORAGE call to update_post_meta($deal_id, "product_categories_included", $product_categories_included) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:968
  - STORAGE call to update_post_meta($deal_id, "include_product_ids", $include_product_ids) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:969
  - STORAGE call to update_post_meta($deal_id, "exclude_product_ids", $exclude_product_ids) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:970
  - STORAGE call to update_post_meta($deal_id, "deal_type", $deal_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:971
  - STORAGE call to update_post_meta($deal_id, "use_regular_price", $use_regular_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:972
  - STORAGE call to update_post_meta($deal_id, "bogo_identical_products", $bogo_identical_products) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:973
  - STORAGE call to update_post_meta($deal_id, "bogo_identical_variations", $bogo_identical_variations) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:974
  - STORAGE call to update_post_meta($deal_id, "free_shipping", $free_shipping) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:975
  - STORAGE call to update_post_meta($deal_id, "free_shipping_min_amount", $free_shipping_min_amount) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:976
  - STORAGE call to update_post_meta($deal_id, "order_limit", $order_limit) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:977
  - STORAGE call to update_post_meta($deal_id, "coupon_code", $coupon_code) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:978
  - STORAGE call to update_post_meta($deal_id, "individual_use", $individual_use) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:979
  - STORAGE call to update_post_meta($deal_id, "individual_use_message", $individual_use_message) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:980
  - STORAGE call to update_post_meta($deal_id, "show_expiration", $show_expiration) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
pw-black-friday.php:996
  - STORAGE call to wp_delete_post($deal_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:1010
  - STORAGE call to wp_update_post($event). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error). 

pw-black-friday.php:881
  - DELETION call to wp_delete_post($deal->ID, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:884
  - DELETION call to wp_delete_post($event_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
pw-black-friday.php:996
  - DELETION call to wp_delete_post($deal_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post 

By data type:
none
	WordPressStorageDetector.wp_update_post($event) - set()
	WordPressStorageDetector.wp_update_post($deal) - set()
	WordPressStorageDetector.wp_insert_post($deal) - set()
	WordPressRetrievalDetector.get_posts(["post_parent" => $event_id, "post_type" => PW_BLACK_FRIDAY_DEAL_POST_TYPE, "nopaging" => true, "post_status" => "publish", "orderby" => "post_title", "order" => "ASC"]) - set()
	WordPressRetrievalDetector.get_posts(["post_parent" => $event->ID, "post_type" => PW_BLACK_FRIDAY_DEAL_POST_TYPE, "nopaging" => true]) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => PW_BLACK_FRIDAY_EVENT_POST_TYPE, "nopaging" => true, "post_status" => "publish"]) - set()
	WordPressStorageDetector.wp_update_post($event) - set()
	WordPressStorageDetector.wp_insert_post($event) - set()
option
	WordPressRetrievalDetector.get_option("woocommerce_enable_coupons", "no") - {'option'}
	WordPressRetrievalDetector.get_option("timezone_string") - {'option'}
	WordPressRetrievalDetector.get_option("direct_checkout_cart_redirect_url") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_price_num_decimals", 2) - {'option'}
	WordPressRetrievalDetector.get_option("gmt_offset", 0) - {'option'}
	WordPressRetrievalDetector.get_option("direct_checkout_enabled") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_prices_include_tax", "no") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_prices_include_tax", "no") - {'option'}
post
	WordPressRetrievalDetector.get_post($deal->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($deal->ID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($event_id) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($deal_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($deal->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(absint($_POST["event_id"])) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($deal->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($event_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(absint($deal_id)) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($event_id, true) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($deal->ID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($deal->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($event_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($deal_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($deal->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(absint($deal)) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($deal_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($deal_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(absint($event)) - {'post_meta', 'post', 'wp_post'}
post_meta
	WordPressStorageDetector.update_post_meta($deal_id, "product_categories_included", $product_categories_included) - {'post_meta'}
	WordPressRetrievalDetector.get_post($deal->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($deal->ID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($event_id) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($deal_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($deal->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(absint($_POST["event_id"])) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($event_id, "upcoming_offset", $upcoming_offset) - {'post_meta'}
	WordPressRetrievalDetector.get_post($deal->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($event_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($deal_id, "deal_type", $deal_type) - {'post_meta'}
	WordPressRetrievalDetector.get_post(absint($deal_id)) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($event_id, "end_datetime", $end_datetime) - {'post_meta'}
	DeletionDetector.wp_delete_post($event_id, true) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($deal->ID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($deal_id, "include_product_ids", $include_product_ids) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($deal_id, "order_limit", $order_limit) - {'post_meta'}
	WordPressRetrievalDetector.get_post($deal->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($event_id, "upcoming_countdown", $upcoming_countdown) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($deal_id, "exclude_product_ids", $exclude_product_ids) - {'post_meta'}
	WordPressRetrievalDetector.get_post($event_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($deal_id, "bogo_identical_products", $bogo_identical_products) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($deal_id, "coupon_code", $coupon_code) - {'post_meta'}
	WordPressRetrievalDetector.get_post($deal_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($deal->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($deal_id, "bogo_identical_variations", $bogo_identical_variations) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($deal_id, "free_shipping", $free_shipping) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($deal_id, "show_expiration", $show_expiration) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($deal_id, "use_regular_price", $use_regular_price) - {'post_meta'}
	WordPressRetrievalDetector.get_post(absint($deal)) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($deal_id, "individual_use", $individual_use) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($event_id, "begin_datetime", $begin_datetime) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($event_id, "ending_countdown", $ending_countdown) - {'post_meta'}
	WordPressRetrievalDetector.get_post($deal_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($deal_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($deal_id, "free_shipping_min_amount", $free_shipping_min_amount) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($deal_id, "individual_use_message", $individual_use_message) - {'post_meta'}
	WordPressRetrievalDetector.get_post(absint($event)) - {'post_meta', 'post', 'wp_post'}
wp_post
	WordPressRetrievalDetector.get_post($deal->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($deal->ID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($event_id) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($deal_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($deal->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(absint($_POST["event_id"])) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($deal->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($event_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(absint($deal_id)) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($event_id, true) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($deal->ID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($deal->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($event_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($deal_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($deal->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(absint($deal)) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($deal_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($deal_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(absint($event)) - {'post_meta', 'post', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:12.245428.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 286 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.373656.

286 STORE_REACHES edges created
286 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.005131.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:32.389795!
DELETION call to wp_delete_post($deal->ID, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post($event_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post($deal_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
RETRIEVAL call to get_post(absint($_POST["event_id"])) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post(absint($event)) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_posts(["post_type" => PW_BLACK_FRIDAY_EVENT_POST_TYPE, "nopaging" => true, "post_status" => "publish"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post(absint($deal)) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_posts(["post_parent" => $event_id, "post_type" => PW_BLACK_FRIDAY_DEAL_POST_TYPE, "nopaging" => true, "post_status" => "publish", "orderby" => "post_title", "order" => "ASC"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post($deal->post_parent) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($deal->post_parent) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("woocommerce_prices_include_tax", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("timezone_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gmt_offset", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_price_num_decimals", 2) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_prices_include_tax", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("direct_checkout_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("direct_checkout_cart_redirect_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($deal->post_parent) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($deal->post_parent) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post(absint($deal_id)) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($deal->post_parent) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($event_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($event_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_posts(["post_parent" => $event->ID, "post_type" => PW_BLACK_FRIDAY_DEAL_POST_TYPE, "nopaging" => true]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("woocommerce_enable_coupons", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post($deal_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($deal_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
STORAGE call to wp_update_post($event). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post($event). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($event). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($event_id, "begin_datetime", $begin_datetime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($event_id, "end_datetime", $end_datetime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($event_id, "upcoming_countdown", $upcoming_countdown) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($event_id, "upcoming_offset", $upcoming_offset) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($event_id, "ending_countdown", $ending_countdown) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_delete_post($deal->ID, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to wp_delete_post($event_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to wp_update_post($deal). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($deal). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($deal_id, "product_categories_included", $product_categories_included) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($deal_id, "include_product_ids", $include_product_ids) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($deal_id, "exclude_product_ids", $exclude_product_ids) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($deal_id, "deal_type", $deal_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($deal_id, "use_regular_price", $use_regular_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($deal_id, "bogo_identical_products", $bogo_identical_products) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($deal_id, "bogo_identical_variations", $bogo_identical_variations) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($deal_id, "free_shipping", $free_shipping) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($deal_id, "free_shipping_min_amount", $free_shipping_min_amount) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($deal_id, "order_limit", $order_limit) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($deal_id, "coupon_code", $coupon_code) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($deal_id, "individual_use", $individual_use) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($deal_id, "individual_use_message", $individual_use_message) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($deal_id, "show_expiration", $show_expiration) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_delete_post($deal_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
