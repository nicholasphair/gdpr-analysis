Timeout in resolving values
Timeout in running neo4j query
Running Main.py on phpsword-disable-comments

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.384385.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.008168.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 28 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.330524.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.526102.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 76 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.704719.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 1 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.648328.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.101412.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 52 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:01.000863.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 1028
Added 870 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 1028
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.036696.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/phpsword-disable-comments/index.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.143310.

28 PHP_REACHES edges created
1 REACHES edges created
76 PHP_REACHES edges created
1 CALLS edges created
922 PHP_REACHES edges created
1028 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 423 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.058614.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.563090.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 8 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.753342.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.130966.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.038159.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.219956.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.005185.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.034517.

8 PHP_REACHES edges created
8 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 15 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.147050.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
10 SQL operations to process.
UPDATE $wpdb SET comment_status = 'open'
SQL command (UPDATE $wpdb SET comment_status = 'open') cannot be parsed correct.
UPDATE $wpdb SET comment_status = 'closed'
SQL command (UPDATE $wpdb SET comment_status = 'closed') cannot be parsed correct.
UPDATE $wpdb SET comment_status = 'open'
SQL command (UPDATE $wpdb SET comment_status = 'open') cannot be parsed correct.
UPDATE $wpdb SET comment_status = 'closed' WHERE post_type = '$post_type'
SQL command (UPDATE $wpdb SET comment_status = 'closed' WHERE post_type = '$post_type') cannot be parsed correct.
UPDATE $wpdb SET ping_status = 'open'
SQL command (UPDATE $wpdb SET ping_status = 'open') cannot be parsed correct.
UPDATE $wpdb SET ping_status = 'closed'
SQL command (UPDATE $wpdb SET ping_status = 'closed') cannot be parsed correct.
UPDATE $wpdb SET ping_status = 'open'
SQL command (UPDATE $wpdb SET ping_status = 'open') cannot be parsed correct.
UPDATE $wpdb SET ping_status = 'closed' WHERE post_type = '$post_type'
SQL command (UPDATE $wpdb SET ping_status = 'closed' WHERE post_type = '$post_type') cannot be parsed correct.
UPDATE $wpdb SET comment_status = 'open' WHERE ID = get_the_ID() LIMIT 1
SQL command (UPDATE $wpdb SET comment_status = 'open' WHERE ID = get_the_ID() LIMIT 1) cannot be parsed correct.
UPDATE $wpdb SET comment_status = 'closed' WHERE ID = get_the_ID() LIMIT 1
SQL command (UPDATE $wpdb SET comment_status = 'closed' WHERE ID = get_the_ID() LIMIT 1) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [1164, 1193, 1227, 1253, 1310, 1339, 1373, 1399, 1739, 1775]
Added 0 SQL nodes. 0 out of 10 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:03.906793.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'get_option("PhpswDCOptions")_PhpswDCVersion'' cannot be parsed correct.
HTML code '$'<input type="checkbox" name="PhpswDCOptions[PhpswDCTPFrom][]" id="PhpswDCOptions[PhpswDCTPFrom]" 
	value="$post_type'' cannot be parsed correct.
HTML code '$' /> &nbsp;ucfirst($post_type) &nbsp; &nbsp;'' cannot be parsed correct.
HTML code '$'<input type="checkbox" name="PhpswDCOptions[PhpswDCFrom][]" id="PhpswDCOptions[PhpswDCFrom]" 
	value="$post_type'' cannot be parsed correct.
HTML code '$' /> &nbsp;ucfirst($post_type) &nbsp; &nbsp;'' cannot be parsed correct.
HTML code '$' selected '' cannot be parsed correct.
HTML code '$'>Disable Trackbacks &amp; Pingbacks</option>'' cannot be parsed correct.
HTML code '$'<option value="custom"'' cannot be parsed correct.
HTML code '$' selected '' cannot be parsed correct.
HTML code '$'>Custom Trackbacks &amp; Pingbacks Setting</option>'' cannot be parsed correct.
HTML code '$'</select>'' cannot be parsed correct.
HTML code '$' Checked'' cannot be parsed correct.
HTML code '$'<select name="PhpswDCOptions[PhpswDCType]">'' cannot be parsed correct.
HTML code '$'<option value="none"'' cannot be parsed correct.
HTML code '$' selected '' cannot be parsed correct.
HTML code '$'>Please Select</option>'' cannot be parsed correct.
HTML code '$'<option value="open"'' cannot be parsed correct.
HTML code '$' selected '' cannot be parsed correct.
HTML code '$'>Enable Comments</option>'' cannot be parsed correct.
HTML code '$'<option value="closed"'' cannot be parsed correct.
HTML code '$' selected '' cannot be parsed correct.
HTML code '$'>Disable Comments</option>'' cannot be parsed correct.
HTML code '$'<option value="custom"'' cannot be parsed correct.
HTML code '$' selected '' cannot be parsed correct.
HTML code '$'>Custom Comments Setting</option>'' cannot be parsed correct.
HTML code '$'</select>'' cannot be parsed correct.
HTML code '$'<p>
<strong>Please Note: </strong>"Enable Comments" or "Disable Comments" option will completely enable or disable comments from all pages &amp; post types. Also It will show / hide comments related menus, widget or links from website. To enable/disable comments on specific post or pages, select "Custom Comments Setting" option and modify following setting.<br />
</p>'' cannot be parsed correct.
HTML code '$' Checked'' cannot be parsed correct.
HTML code '$'<select name="PhpswDCOptions[PhpswDCTPType]">'' cannot be parsed correct.
HTML code '$'<option value="none"'' cannot be parsed correct.
HTML code '$' selected '' cannot be parsed correct.
HTML code '$'>Please Select</option>'' cannot be parsed correct.
HTML code '$'<option value="open"'' cannot be parsed correct.
HTML code '$' selected '' cannot be parsed correct.
HTML code '$'>Enable Trackbacks &amp; Pingbacks</option>'' cannot be parsed correct.
HTML code '$'<option value="closed"'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:02.856509.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.048718.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 7 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.618056.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running FirebirdInterBaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running DbplusDetector
### Start running IngresDetector
### Finish running InformixDetector
### Start running maxdbDetector
### Finish running IngresDetector
### Start running MongoDbDetector
### Finish running FrontBaseDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running ArrayElementDetector
### Start running PHPDataObjectDetector
### Finish running PasswordHashingDetector
### Start running PHPIncludedDetector
### Finish running PHPDataObjectDetector
### Start running PHPRetrievalDetector
### Finish running OpenSSLDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PhpCurlDetector
### Start running PhpVarDetector
### Finish running PHPIncludedDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPStorageDetector
### Start running SqliteDetector
### Finish running PHPRetrievalDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running SqliteDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running PropertyDetector
### Start running WordpressHashingFnDetector
### Finish running maxdbDetector
### Start running WordPressRemoteDetector
### Finish running MySQLiDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running SqlServerDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running VariableDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Finish running WordPressStorageDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
index.php:17
  - RETRIEVAL call to get_option("PhpswDCOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:34
  - RETRIEVAL call to get_option("PhpswDCOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:214
  - RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).
index.php:218
  - RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).
index.php:223
  - RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).
index.php:226
  - RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).
index.php:238
  - RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).
index.php:242
  - RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).
index.php:247
  - RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).
index.php:250
  - RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).
index.php:257
  - RETRIEVAL call to get_option("PhpswDCOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:264
  - RETRIEVAL call to get_option("PhpswDCOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:270
  - RETRIEVAL call to get_option("PhpswDCOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:280
  - RETRIEVAL call to get_option("PhpswDCOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:299
  - RETRIEVAL call to get_option("PhpswDCOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:311
  - RETRIEVAL call to get_post_field("comment_status", $postid) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: wp_post, post_meta, post
index.php:312
  - RETRIEVAL call to get_post_field("post_type", $postid) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: wp_post, post_meta, post
index.php:314
  - RETRIEVAL call to get_option("PhpswDCOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:319
  - RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).
index.php:325
  - RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array). 

index.php:212
  - STORAGE call to update_option("default_comment_status", "open") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:216
  - STORAGE call to update_option("default_comment_status", "closed") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:220
  - STORAGE call to update_option("default_comment_status", "open") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:236
  - STORAGE call to update_option("default_ping_status", "open") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:240
  - STORAGE call to update_option("default_ping_status", "closed") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:244
  - STORAGE call to update_option("default_ping_status", "open") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:353
  - STORAGE call to update_option("PhpswDCOptions", ["PhpswDCVersion" => "1.0", "PhpswDCVersionType" => "free", "PhpswDCType" => "none", "PhpswDCFrom" => [""], "PhpswDCTPType" => "none", "PhpswDCTPFrom" => [""]]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

By data type:
none
	WordPressRetrievalDetector.dbDelta($query) - set()
	WordPressRetrievalDetector.dbDelta($query) - set()
	WordPressRetrievalDetector.dbDelta($query) - set()
	WordPressRetrievalDetector.dbDelta($query) - set()
	WordPressRetrievalDetector.dbDelta($query) - set()
	WordPressRetrievalDetector.dbDelta($query) - set()
	WordPressRetrievalDetector.dbDelta($query) - set()
	WordPressRetrievalDetector.dbDelta($query) - set()
	WordPressRetrievalDetector.dbDelta($query) - set()
	WordPressRetrievalDetector.dbDelta($query) - set()
option
	WordPressStorageDetector.update_option("default_ping_status", "open") - {'option'}
	WordPressStorageDetector.update_option("default_comment_status", "closed") - {'option'}
	WordPressStorageDetector.update_option("default_ping_status", "open") - {'option'}
	WordPressRetrievalDetector.get_option("PhpswDCOptions") - {'option'}
	WordPressRetrievalDetector.get_option("PhpswDCOptions") - {'option'}
	WordPressStorageDetector.update_option("default_comment_status", "open") - {'option'}
	WordPressRetrievalDetector.get_option("PhpswDCOptions") - {'option'}
	WordPressStorageDetector.update_option("default_ping_status", "closed") - {'option'}
	WordPressStorageDetector.update_option("PhpswDCOptions", ["PhpswDCVersion" => "1.0", "PhpswDCVersionType" => "free", "PhpswDCType" => "none", "PhpswDCFrom" => [""], "PhpswDCTPType" => "none", "PhpswDCTPFrom" => [""]]) - {'option'}
	WordPressRetrievalDetector.get_option("PhpswDCOptions") - {'option'}
	WordPressRetrievalDetector.get_option("PhpswDCOptions") - {'option'}
	WordPressRetrievalDetector.get_option("PhpswDCOptions") - {'option'}
	WordPressRetrievalDetector.get_option("PhpswDCOptions") - {'option'}
	WordPressStorageDetector.update_option("default_comment_status", "open") - {'option'}
	WordPressRetrievalDetector.get_option("PhpswDCOptions") - {'option'}
post
	WordPressRetrievalDetector.get_post_field("comment_status", $postid) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post_field("post_type", $postid) - {'wp_post', 'post_meta', 'post'}
post_meta
	WordPressRetrievalDetector.get_post_field("comment_status", $postid) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post_field("post_type", $postid) - {'wp_post', 'post_meta', 'post'}
wp_post
	WordPressRetrievalDetector.get_post_field("comment_status", $postid) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post_field("post_type", $postid) - {'wp_post', 'post_meta', 'post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:06.762101.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 56 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.214791.

56 STORE_REACHES edges created
56 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.005420.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:29.713619!
RETRIEVAL call to get_option("PhpswDCOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("PhpswDCOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("PhpswDCOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("PhpswDCOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("PhpswDCOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("PhpswDCOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_field("comment_status", $postid) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).,None,None
RETRIEVAL call to get_post_field("post_type", $postid) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).,None,None
RETRIEVAL call to get_option("PhpswDCOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("PhpswDCOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option("default_comment_status", "open") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("default_comment_status", "closed") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("default_comment_status", "open") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("default_ping_status", "open") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("default_ping_status", "closed") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("default_ping_status", "open") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("PhpswDCOptions", ["PhpswDCVersion" => "1.0", "PhpswDCVersionType" => "free", "PhpswDCType" => "none", "PhpswDCFrom" => [""], "PhpswDCTPType" => "none", "PhpswDCTPFrom" => [""]]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
