Timeout in resolving values
Timeout in running neo4j query
Running Main.py on store-migrator-jigoshop-woocommerce

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.536598.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.228026.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 5 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.412743.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.770241.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 2024 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.624157.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 1 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.664376.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.118124.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 1021 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:20.783810.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 12924
Added 9872 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 12983
Added 59 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.180249.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/jigoshop-migrator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/includes/admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/includes/common-dashboard_widgets.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/includes/common.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/includes/coupon.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/includes/functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/includes/legacy.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/includes/matching.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/includes/order.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/includes/product.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/includes/template.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/templates/admin/Link_List_Table.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/templates/admin/tabs-backup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/templates/admin/tabs-migrate.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/templates/admin/tabs-overview.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/templates/admin/tabs.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/templates/admin/tabs-plugins.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/templates/admin/tabs-settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-migrator-jigoshop-woocommerce/templates/admin/tabs-upcoming.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:02.130935.

5 PHP_REACHES edges created
1 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2024 PHP_REACHES edges created
1 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
10893 PHP_REACHES edges created
59 PHP_REACHES edges created
12983 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 4928 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.325255.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:07.462626.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 300 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:06.800829.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 430 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.183096.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.816729.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:04.205782.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.062616.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.034134.

730 PHP_REACHES edges created
730 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 306 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.170895.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
12 SQL operations to process.
SELECT *, `id` as ID FROM `$wpdbwpsc_purchase_logs`
SQL command (SELECT *, `id` as ID FROM `$wpdbwpsc_purchase_logs`) cannot be parsed correct.
SELECT *, `unique_name` as wpsc_unique_name FROM `$wpdbwpsc_checkout_forms` WHERE `checkout_set` = 0 AND `active` = 1
SQL command (SELECT *, `unique_name` as wpsc_unique_name FROM `$wpdbwpsc_checkout_forms` WHERE `checkout_set` = 0 AND `active` = 1) cannot be parsed correct.
SELECT * FROM `$wpdbwpsc_cart_contents` WHERE `purchaseid` = $wpsc_sale
SELECT * FROM `$wpdbwpsc_cart_contents` WHERE `purchaseid` = $wpsc_sale
SQL command (SELECT * FROM `$wpdbwpsc_cart_contents` WHERE `purchaseid` = $wpsc_sale) cannot be parsed correct.
$coupon_sql
SQL command ($coupon_sql) cannot be parsed correct.
SELECT * FROM `$wpdbwpsc_cart_contents` WHERE  `purchaseid` = $wpsc_sale
SELECT * FROM `$wpdbwpsc_cart_contents` WHERE  `purchaseid` = $wpsc_sale
SQL command (SELECT * FROM `$wpdbwpsc_cart_contents` WHERE `purchaseid` = $wpsc_sale) cannot be parsed correct.
SELECT `user_email`, `user_id` FROM `$wpdbjigoshop_downloadable_product_permissions` WHERE `order_key` = '$jigo_sale_order_key'
SELECT `user_email`, `user_id` FROM `$wpdbjigoshop_downloadable_product_permissions` WHERE `order_key` = '$jigo_sale_order_key'
SQL command (SELECT `user_email`, `user_id` FROM `$wpdbjigoshop_downloadable_product_permissions` WHERE `order_key` = '$jigo_sale_order_key') cannot be parsed correct.
DELETE FROM `$wpdbjigoshop_downloadable_product_permissions` WHERE `product_id` = '' AND `order_key` = '$jigo_sale_order_key' AND `user_email` = '$check_download_user_email'
SQL command (DELETE FROM `$wpdbjigoshop_downloadable_product_permissions` WHERE `product_id` = '' AND `order_key` = '$jigo_sale_order_key' AND `user_email` = '$check_download_user_email') cannot be parsed correct.
SELECT *, `id` as ID FROM `$wpdbwpsc_coupon_codes`
SQL command (SELECT *, `id` as ID FROM `$wpdbwpsc_coupon_codes`) cannot be parsed correct.
SELECT * FROM `$wpdbjigoshop_downloadable_product_permissions` ORDER BY user_id
SQL command (SELECT * FROM `$wpdbjigoshop_downloadable_product_permissions` ORDER BY user_id) cannot be parsed correct.
TRUNCATE TABLE $wpdbjigoshop_downloadable_product_permissions
SQL command (TRUNCATE TABLE $wpdbjigoshop_downloadable_product_permissions) cannot be parsed correct.
DELETE FROM `$wpdbpostmeta` WHERE `post_id` = '$delete_meta_key_0' AND `meta_key` = '$delete_meta_key_1'
SQL command (DELETE FROM `$wpdbpostmeta` WHERE `post_id` = '$delete_meta_key_0' AND `meta_key` = '$delete_meta_key_1') cannot be parsed correct.
DELETE FROM `$wpdbpostmeta` WHERE `post_id` = '$delete_meta_key_0' AND `meta_key` LIKE '$delete_meta_key_1'
SQL command (DELETE FROM `$wpdbpostmeta` WHERE `post_id` = '$delete_meta_key_0' AND `meta_key` LIKE '$delete_meta_key_1') cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [4865, 4921, 5257, 5325, 5448, 6474, 6665, 6756, 10706, 10975, 15629, 15655]
Added 0 SQL nodes. 0 out of 12 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:04.358700.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'updated'' cannot be parsed correct.
HTML code '$'No Product\'s Visibility were updated'' cannot be parsed correct.
HTML code '$'base64_decode($output)'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$' nav-tab-active'' cannot be parsed correct.
HTML code '$'<div class="rss-widget">'' cannot be parsed correct.
HTML code '$'<div class="updated settings-error"><p>sprintf(__("%d Sales have been migrated."), $migrate->count)</p></div>'' cannot be parsed correct.
HTML code '$'<h3>Corrupt file downloads</h3>'' cannot be parsed correct.
HTML code '$'<p>These customers do not have User accounts and will need to be notified in order to download Plugin updates via My Account.</p>'' cannot be parsed correct.
HTML code '$'
						<tr>
							<td>$output_log</td>
							<td>$output_log_order_key</td>
							<td><a href=$output_log_user_email"$output_log_user_email</a></td>
						</tr>
'' cannot be parsed correct.
HTML code '$'
					</tbody>
					<thead>
						<tr>
							<td colspan="3">Total: 0</td>
						</tr>
					</thead>
				</table>'' cannot be parsed correct.
HTML code '$'<div class="updated settings-error"><p>sprintf(__("%d Coupons have been migrated."), $migrate->count)</p></div>'' cannot be parsed correct.
HTML code '$'$product_tax_status_exists'' cannot be parsed correct.
HTML code '$'$product_total_sales_exists'' cannot be parsed correct.
HTML code '$'$product_purchase_note_exists'' cannot be parsed correct.
HTML code '$'$product_virtual_exists'' cannot be parsed correct.
HTML code '$'$product_attribute_exists'' cannot be parsed correct.
HTML code '$'$product_variations_exists'' cannot be parsed correct.
HTML code '$'$product_downloadable_exists'' cannot be parsed correct.
HTML code '$'$product_sku_exists'' cannot be parsed correct.
HTML code '$'$product_price_exists'' cannot be parsed correct.
HTML code '$'$product_sale_price_exists'' cannot be parsed correct.
HTML code '$'$product_sale_price_period_exists'' cannot be parsed correct.
HTML code '$'$product_featured_exists'' cannot be parsed correct.
HTML code '$'$product_stock_exists'' cannot be parsed correct.
HTML code '$'$product_weight_exists'' cannot be parsed correct.
HTML code '$'$product_dimension_exists'' cannot be parsed correct.
HTML code '$'$product_external_url_exists'' cannot be parsed correct.
HTML code '$'$product_visibility_exists'' cannot be parsed correct.
HTML code '$'$product_customizable_exists'' cannot be parsed correct.
HTML code '$'$coupon_type_exists'' cannot be parsed correct.
HTML code '$'$coupon_amount_exists'' cannot be parsed correct.
HTML code '$'$coupon_expiry_date_exists'' cannot be parsed correct.
HTML code '$'$coupon_usage_limit_exists'' cannot be parsed correct.
HTML code '$'$coupon_individual_use_exists'' cannot be parsed correct.
HTML code '$'$coupon_free_shipping_exists'' cannot be parsed correct.
HTML code '$'$coupon_minimum_amount_exists'' cannot be parsed correct.
HTML code '$'$order_status_exists'' cannot be parsed correct.
HTML code '$'$order_key_exists'' cannot be parsed correct.
HTML code '$'$order_customer_exists'' cannot be parsed correct.
HTML code '$'$order_currency_exists'' cannot be parsed correct.
HTML code '$'$order_shipping_method_exists'' cannot be parsed correct.
HTML code '$'$order_discount_exists'' cannot be parsed correct.
HTML code '$'$order_post_meta_exists'' cannot be parsed correct.
HTML code '$'$order_copy_billing_shipping_address_exists'' cannot be parsed correct.
HTML code '$'$order_item_exists'' cannot be parsed correct.
HTML code '$'$order_download_exists'' cannot be parsed correct.
HTML code '$'add_query_arg("post_type", "shop_coupon", "edit.php")'' cannot be parsed correct.
HTML code '$'add_query_arg("post_type", "product", "edit.php")'' cannot be parsed correct.
HTML code '$'add_query_arg("page", "wc-settings", "admin.php")'' cannot be parsed correct.
HTML code '$'add_query_arg(["page" => "woo_sm", "tab" => "overview"], "admin.php")'' cannot be parsed correct.
HTML code '$'add_query_arg(["page" => "woo_sm", "tab" => "backup"], "admin.php")'' cannot be parsed correct.
HTML code '$'add_query_arg(["page" => "woo_sm", "tab" => "migrate"], "admin.php")'' cannot be parsed correct.
HTML code '$'add_query_arg(["page" => "woo_sm", "tab" => "plugins"], "admin.php")'' cannot be parsed correct.
HTML code '$'$coupon_maximum_amount_exists'' cannot be parsed correct.
HTML code '$'$coupon_exclude_categories_exists'' cannot be parsed correct.
HTML code '$'$coupon_include_categories_exists'' cannot be parsed correct.
HTML code '$'$coupon_exclude_products_exists'' cannot be parsed correct.
HTML code '$'$coupon_include_products_exists'' cannot be parsed correct.
HTML code '$'$coupon_usage_count_exists'' cannot be parsed correct.
HTML code '$'$coupon_used_by_exists'' cannot be parsed correct.
HTML code '$'add_query_arg("tab", "backup")'' cannot be parsed correct.
HTML code '$'add_query_arg("tab", "migrate")'' cannot be parsed correct.
HTML code '$'add_query_arg("tab", "backup")'' cannot be parsed correct.
HTML code '$'add_query_arg("tab", "migrate")'' cannot be parsed correct.
HTML code '$'add_query_arg("post_type", "shop_order", "edit.php")'' cannot be parsed correct.
HTML code '$'
				<table>
					<thead>
						<tr>
							<th>Product ID</th>
							<th>Session ID</th>
							<th>E-mail</th>
						</tr>
					</thead>
					<tbody>'' cannot be parsed correct.
HTML code '$'disabled="disabled"'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:07.794739.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.039677.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 6 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.423602.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ArrayElementDetector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running HashDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPStorageDetector
### Start running PhpVarDetector
### Finish running PHPRetrievalDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPIncludedDetector
### Start running SqliteDetector
### Finish running OpenSSLDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running maxdbDetector
### Start running VariableDetector
### Finish running MySQLiDetector
### Start running WordpressHashingFnDetector
### Finish running TokyoTyrantDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running WordpressHashingFnDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Start running GenericEncryptionDetector
### Finish running PropertyDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
includes/product.php:1283
  - MD5 called with parameters [download_url]. Ignore if [download_url] does not contain personal information. 

includes/legacy.php:376
  - object property '$user_info->user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:376
  - object property '$check_download_user_email->user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:377
  - object property '$check_download_user_email->user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:381
  - object property '$user_info->user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:385
  - object property '$check_download_user_email->user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:392
  - object property '$check_download_user_email->user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:397
  - object property '$user_info->user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:400
  - object property '$check_download_user_email->user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:407
  - object property '$check_download_user_email->user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:412
  - object property '$check_download_user_email->user_email' of personal types {'email'} is found.
  - Data types: email
includes/order.php:779
  - object property '$download->user_email' of personal types {'email'} is found.
  - Data types: email
includes/order.php:821
  - object property '$download->user_email' of personal types {'email'} is found.
  - Data types: email 

includes/admin.php:273
  - variable '$order_copy_billing_shipping_address_exists' of personal types {'address'} is found.
  - Data types: address
includes/legacy.php:370
  - variable '$check_downloadable_user_email_sql' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:371
  - variable '$check_downloadable_user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:371
  - variable '$check_downloadable_user_email_sql' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:372
  - variable '$check_downloadable_user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:373
  - variable '$check_downloadable_user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:373
  - variable '$check_download_user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:374
  - variable '$check_download_user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:375
  - variable '$check_download_user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:376
  - variable '$check_download_user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:377
  - variable '$check_download_user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:385
  - variable '$check_download_user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:392
  - variable '$check_download_user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:400
  - variable '$check_download_user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:407
  - variable '$check_download_user_email' of personal types {'email'} is found.
  - Data types: email
includes/legacy.php:412
  - variable '$check_download_user_email' of personal types {'email'} is found.
  - Data types: email
includes/order.php:495
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
includes/order.php:496
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
includes/order.php:498
  - variable '$address_1' of personal types {'address'} is found.
  - Data types: address
includes/order.php:499
  - variable '$address_2' of personal types {'address'} is found.
  - Data types: address
includes/order.php:501
  - variable '$postcode' of personal types {'postcode'} is found.
  - Data types: postcode
includes/order.php:502
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
includes/order.php:507
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
includes/order.php:509
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
includes/order.php:513
  - variable '$address_1' of personal types {'address'} is found.
  - Data types: address
includes/order.php:515
  - variable '$address_2' of personal types {'address'} is found.
  - Data types: address
includes/order.php:519
  - variable '$postcode' of personal types {'postcode'} is found.
  - Data types: postcode
includes/order.php:521
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
includes/order.php:526
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
includes/order.php:526
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
includes/order.php:526
  - variable '$address_1' of personal types {'address'} is found.
  - Data types: address
includes/order.php:526
  - variable '$address_2' of personal types {'address'} is found.
  - Data types: address
includes/order.php:526
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
includes/order.php:526
  - variable '$postcode' of personal types {'postcode'} is found.
  - Data types: postcode
templates/admin/tabs-migrate.php:68
  - variable '$order_copy_billing_shipping_address_exists' of personal types {'address'} is found.
  - Data types: address
templates/admin/tabs-migrate.php:68
  - variable '$order_copy_billing_shipping_address_exists' of personal types {'address'} is found.
  - Data types: address
templates/admin/tabs-migrate.php:68
  - variable '$order_copy_billing_shipping_address_exists' of personal types {'address'} is found.
  - Data types: address
templates/admin/tabs-migrate.php:75
  - variable '$order_copy_billing_shipping_address_exists' of personal types {'address'} is found.
  - Data types: address 

includes/admin.php:89
  - RETRIEVAL call to get_transient(WOO_SM_PREFIX . "_notice") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
includes/admin.php:133
  - RETRIEVAL call to get_transient(WOO_SM_PREFIX . "_notice") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
includes/coupon.php:26
  - RETRIEVAL call to get_post_meta($coupon, "type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/coupon.php:74
  - RETRIEVAL call to get_post_meta($coupon, "amount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/coupon.php:121
  - RETRIEVAL call to get_post_meta($coupon, "date_to", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/coupon.php:172
  - RETRIEVAL call to get_post_meta($coupon, "usage_limit", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/coupon.php:225
  - RETRIEVAL call to get_post_meta($coupon, "individual_use", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/coupon.php:285
  - RETRIEVAL call to get_post_meta($coupon, "free_shipping", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/coupon.php:343
  - RETRIEVAL call to get_post_meta($coupon, "order_total_min", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/coupon.php:391
  - RETRIEVAL call to get_post_meta($coupon, "order_total_max", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/coupon.php:439
  - RETRIEVAL call to get_post_meta($coupon, "exclude_categories", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/coupon.php:487
  - RETRIEVAL call to get_post_meta($coupon, "include_categories", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/coupon.php:535
  - RETRIEVAL call to get_post_meta($coupon, "exclude_products", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/coupon.php:598
  - RETRIEVAL call to get_post_meta($coupon, "include_products", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/coupon.php:661
  - RETRIEVAL call to get_post_meta($coupon, "usage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/coupon.php:709
  - RETRIEVAL call to get_post_meta($coupon, "used_by", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/functions.php:101
  - RETRIEVAL call to get_option(WOO_SM_PREFIX . $separator . $option, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/legacy.php:31
  - RETRIEVAL call to get_post($output_log["product_id"]) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
includes/legacy.php:229
  - RETRIEVAL call to get_post($wpsc_cart_item->prodid) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
includes/legacy.php:326
  - RETRIEVAL call to get_posts($duplicate_exists_args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
includes/legacy.php:356
  - RETRIEVAL call to get_post($product_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
includes/legacy.php:375
  - RETRIEVAL call to get_userdata($check_download_user_email->user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user_meta, user
includes/legacy.php:377
  - RETRIEVAL call to get_user_by("email", $check_download_user_email->user_email) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
includes/legacy.php:392
  - RETRIEVAL call to get_user_by("email", $check_download_user_email->user_email) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
includes/legacy.php:457
  - RETRIEVAL call to get_posts($duplicate_exists_args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
includes/order.php:193
  - RETRIEVAL call to get_post_meta($order, "order_key", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:245
  - RETRIEVAL call to get_post_meta($order, "customer_user", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:344
  - RETRIEVAL call to get_post_meta($order, "order_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:421
  - RETRIEVAL call to get_post_meta($order, "order_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:438
  - RETRIEVAL call to get_post_meta($order, "_order_discount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:495
  - RETRIEVAL call to get_post_meta($order, "_billing_first_name", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:496
  - RETRIEVAL call to get_post_meta($order, "_billing_last_name", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:497
  - RETRIEVAL call to get_post_meta($order, "_billing_company", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:498
  - RETRIEVAL call to get_post_meta($order, "_billing_address_1", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:499
  - RETRIEVAL call to get_post_meta($order, "_billing_address_2", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:500
  - RETRIEVAL call to get_post_meta($order, "_billing_city", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:501
  - RETRIEVAL call to get_post_meta($order, "_billing_postcode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:502
  - RETRIEVAL call to get_post_meta($order, "_billing_country", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:503
  - RETRIEVAL call to get_post_meta($order, "_billing_state", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:506
  - RETRIEVAL call to get_post_meta($order, "_shipping_first_name", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:508
  - RETRIEVAL call to get_post_meta($order, "_shipping_last_name", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:510
  - RETRIEVAL call to get_post_meta($order, "_shipping_company", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:512
  - RETRIEVAL call to get_post_meta($order, "_shipping_address_1", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:514
  - RETRIEVAL call to get_post_meta($order, "_shipping_address_2", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:516
  - RETRIEVAL call to get_post_meta($order, "_shipping_city", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:518
  - RETRIEVAL call to get_post_meta($order, "_shipping_postcode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:520
  - RETRIEVAL call to get_post_meta($order, "_shipping_country", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:522
  - RETRIEVAL call to get_post_meta($order, "_shipping_state", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:572
  - RETRIEVAL call to get_post_meta($order, "order_items", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:627
  - RETRIEVAL call to get_post_meta($order, "order_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:718
  - RETRIEVAL call to get_post_meta($order, "order_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/order.php:806
  - RETRIEVAL call to get_post($download->order_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
includes/order.php:808
  - RETRIEVAL call to get_post_meta($download->product_id, "_downloadable_files", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:43
  - RETRIEVAL call to get_post_meta($product, "regular_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:126
  - RETRIEVAL call to get_post_meta($product, "sale_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:179
  - RETRIEVAL call to get_post_meta($product, "sale_price_dates_from", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:180
  - RETRIEVAL call to get_post_meta($product, "sale_price_dates_to", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:240
  - RETRIEVAL call to get_post_meta($product, "featured", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:301
  - RETRIEVAL call to get_post_meta($product, "customizable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:358
  - RETRIEVAL call to get_post_meta($product, "tax_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:412
  - RETRIEVAL call to get_post_meta($product, "weight", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:466
  - RETRIEVAL call to get_post_meta($product, "length", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:467
  - RETRIEVAL call to get_post_meta($product, "width", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:468
  - RETRIEVAL call to get_post_meta($product, "height", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:532
  - RETRIEVAL call to get_post_meta($product, "sku", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:586
  - RETRIEVAL call to get_post_meta($product, "stock", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:587
  - RETRIEVAL call to get_post_meta($product, "manage_stock", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:588
  - RETRIEVAL call to get_post_meta($product, "stock_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:652
  - RETRIEVAL call to get_post_meta($product, "visibility", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:708
  - RETRIEVAL call to get_post_meta($product, "_js_total_sales", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:724
  - RETRIEVAL call to get_post_meta($product, "total_sales", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:777
  - RETRIEVAL call to get_post_meta($product, "_purchase_note", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:905
  - RETRIEVAL call to get_post_meta($product, "external_url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:958
  - RETRIEVAL call to get_post_meta($product, "product_attributes", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:1040
  - RETRIEVAL call to get_post_meta($product, "variation_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:1238
  - RETRIEVAL call to get_post_meta($product, "file_path", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/product.php:1255
  - RETRIEVAL call to get_post_meta($product, "download_limit", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta 

includes/admin.php:94
  - STORAGE call to set_transient(WOO_SM_PREFIX . "_notice", base64_encode($output), MINUTE_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
includes/admin.php:135
  - STORAGE call to delete_transient(WOO_SM_PREFIX . "_notice") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
includes/coupon.php:32
  - STORAGE call to update_post_meta($coupon, "discount_type", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/coupon.php:35
  - STORAGE call to delete_post_meta($coupon, "type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:80
  - STORAGE call to update_post_meta($coupon, "coupon_amount", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/coupon.php:83
  - STORAGE call to delete_post_meta($coupon, "amount") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:129
  - STORAGE call to update_post_meta($coupon, "expiry_date", $output) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/coupon.php:132
  - STORAGE call to delete_post_meta($coupon, "date_to") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:235
  - STORAGE call to update_post_meta($coupon, "individual_use", $output) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/coupon.php:303
  - STORAGE call to update_post_meta($coupon, "free_shipping", $coupon) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/coupon.php:349
  - STORAGE call to update_post_meta($coupon, "minimum_amount", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/coupon.php:352
  - STORAGE call to delete_post_meta($coupon, "order_total_min") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:397
  - STORAGE call to update_post_meta($coupon, "maximum_amount", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/coupon.php:400
  - STORAGE call to delete_post_meta($coupon, "order_total_max") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:445
  - STORAGE call to update_post_meta($coupon, "exclude_product_categories", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/coupon.php:448
  - STORAGE call to delete_post_meta($coupon, "exclude_categories") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:493
  - STORAGE call to update_post_meta($coupon, "product_categories", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/coupon.php:496
  - STORAGE call to delete_post_meta($coupon, "include_categories") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:555
  - STORAGE call to add_post_meta($coupon, "exclude_product_ids", $woo_entry, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: post_meta
includes/coupon.php:559
  - STORAGE call to delete_post_meta($coupon, "exclude_products") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:618
  - STORAGE call to add_post_meta($coupon, "product_ids", $woo_entry, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: post_meta
includes/coupon.php:621
  - STORAGE call to delete_post_meta($coupon, "include_products") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:667
  - STORAGE call to update_post_meta($coupon, "usage_count", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/coupon.php:670
  - STORAGE call to delete_post_meta($coupon, "usage") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:715
  - STORAGE call to update_post_meta($coupon, "_used_by", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/coupon.php:718
  - STORAGE call to delete_post_meta($coupon, "used_by") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/functions.php:27
  - STORAGE call to delete_option(WOO_SM_PREFIX . $separator . sprintf("lock_action-%s", $action)) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/functions.php:37
  - STORAGE call to update_option(WOO_SM_PREFIX . $separator . "current_actions", $action) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/functions.php:47
  - STORAGE call to update_option(WOO_SM_PREFIX . $separator . "current_action", $action) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/functions.php:56
  - STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_actions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/functions.php:64
  - STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_action") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/functions.php:73
  - STORAGE call to update_option(WOO_SM_PREFIX . $separator . "current_id", $id) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/functions.php:82
  - STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/functions.php:114
  - STORAGE call to update_option(WOO_SM_PREFIX . $separator . $option, $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/legacy.php:329
  - STORAGE call to wp_insert_post($post_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
includes/legacy.php:331
  - STORAGE call to update_post_meta($post_id, "order_items", $jigo_sale["order_items"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:332
  - STORAGE call to update_post_meta($post_id, "order_data", $jigo_sale["order_data"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:333
  - STORAGE call to update_post_meta($post_id, "customer_user", $jigo_sale["customer_user"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:334
  - STORAGE call to update_post_meta($post_id, "order_key", $jigo_sale["order_key"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:335
  - STORAGE call to update_post_meta($post_id, "old_id", $jigo_sale["old_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:460
  - STORAGE call to wp_insert_post($post_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
includes/legacy.php:461
  - STORAGE call to update_post_meta($post_id, "date_from", strtotime("Y-m-d H:i:s", $wpsc_coupon->start)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:462
  - STORAGE call to update_post_meta($post_id, "date_to", strtotime("Y-m-d H:i:s", $wpsc_coupon->expiry)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:463
  - STORAGE call to update_post_meta($post_id, "usage_limit", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:464
  - STORAGE call to update_post_meta($post_id, "amount", $wpsc_coupon->value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:465
  - STORAGE call to update_post_meta($post_id, "individual_use", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:466
  - STORAGE call to update_post_meta($post_id, "type", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:467
  - STORAGE call to update_post_meta($post_id, "free_shipping", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:468
  - STORAGE call to update_post_meta($post_id, "order_total_min", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:469
  - STORAGE call to update_post_meta($post_id, "order_total_max", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:470
  - STORAGE call to update_post_meta($post_id, "include_products", "a:0:{}") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:471
  - STORAGE call to update_post_meta($post_id, "exclude_products", "a:0:{}") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:472
  - STORAGE call to update_post_meta($post_id, "include_categories", "a:0:{}") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:473
  - STORAGE call to update_post_meta($post_id, "exclude_categories", "a:0:{}") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/legacy.php:474
  - STORAGE call to update_post_meta($post_id, "pay_methods", "a:0:{}") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/order.php:78
  - STORAGE call to wp_update_post($args). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
includes/order.php:198
  - STORAGE call to update_post_meta($order, "_order_key", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/order.php:202
  - STORAGE call to delete_post_meta($order, "order_key") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/order.php:250
  - STORAGE call to update_post_meta($order, "_customer_user", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/order.php:254
  - STORAGE call to delete_post_meta($order, "customer_user") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/order.php:297
  - STORAGE call to update_post_meta($order, "_order_currency", get_woocommerce_currency(), true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/order.php:366
  - STORAGE call to update_post_meta($order, "order_data", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/order.php:451
  - STORAGE call to update_post_meta($order, "order_data", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/order.php:507
  - STORAGE call to update_post_meta($order, "_shipping_first_name", $first_name) alters data types {'first_name', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: first_name, post_meta
includes/order.php:509
  - STORAGE call to update_post_meta($order, "_shipping_last_name", $last_name) alters data types {'last_name', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: last_name, post_meta
includes/order.php:511
  - STORAGE call to update_post_meta($order, "_shipping_company", $company) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/order.php:513
  - STORAGE call to update_post_meta($order, "_shipping_address_1", $address_1) alters data types {'address', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: address, post_meta
includes/order.php:515
  - STORAGE call to update_post_meta($order, "_shipping_address_2", $address_2) alters data types {'address', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: address, post_meta
includes/order.php:517
  - STORAGE call to update_post_meta($order, "_shipping_city", $city) alters data types {'city', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: city, post_meta
includes/order.php:519
  - STORAGE call to update_post_meta($order, "_shipping_postcode", $postcode) alters data types {'postcode', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: postcode, post_meta
includes/order.php:521
  - STORAGE call to update_post_meta($order, "_shipping_country", $country) alters data types {'country', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: country, post_meta
includes/order.php:523
  - STORAGE call to update_post_meta($order, "_shipping_state", $state) alters data types {'state', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: state, post_meta
includes/order.php:630
  - STORAGE call to update_post_meta($order, "_order_tax", $total_tax) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/order.php:636
  - STORAGE call to update_post_meta($order, "order_data", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/order.php:640
  - STORAGE call to update_post_meta($order, "_prices_include_tax", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/order.php:727
  - STORAGE call to update_post_meta($order, $wc_key, $meta_value[$jigoshop_key]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/order.php:733
  - STORAGE call to update_post_meta($order, "_cart_discount", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/order.php:740
  - STORAGE call to update_post_meta($order, "order_data", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:46
  - STORAGE call to update_post_meta($product, "_regular_price", $meta_value, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:47
  - STORAGE call to update_post_meta($product, "_price", $meta_value, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:48
  - STORAGE call to delete_post_meta($product, "regular_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:56
  - STORAGE call to update_post_meta($product, "_regular_price", $meta_value, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:57
  - STORAGE call to update_post_meta($product, "_price", $meta_value, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:63
  - STORAGE call to update_post_meta($product, "_regular_price", $meta_value, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:64
  - STORAGE call to update_post_meta($product, "_price", $meta_value, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:78
  - STORAGE call to delete_post_meta($product, "regular_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:79
  - STORAGE call to delete_post_meta($product, "price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:131
  - STORAGE call to update_post_meta($product, "_sale_price", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:135
  - STORAGE call to delete_post_meta($product, "sale_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:188
  - STORAGE call to update_post_meta($product, "_sale_price_dates_from", $meta_value_from) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:189
  - STORAGE call to update_post_meta($product, "_sale_price_dates_to", $meta_value_to) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:193
  - STORAGE call to delete_post_meta($product, "sale_price_dates_from") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:194
  - STORAGE call to delete_post_meta($product, "sale_price_dates_to") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:250
  - STORAGE call to update_post_meta($product, "_featured", $output) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:252
  - STORAGE call to delete_post_meta($product, "featured") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:306
  - STORAGE call to update_post_meta($product, "_customizable", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:310
  - STORAGE call to delete_post_meta($product, "customizable") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:363
  - STORAGE call to update_post_meta($product, "tax_status", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:367
  - STORAGE call to delete_post_meta($product, "tax_status") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:417
  - STORAGE call to update_post_meta($product, "_weight", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:421
  - STORAGE call to delete_post_meta($product, "weight") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:479
  - STORAGE call to update_post_meta($product, "_length", $length) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:480
  - STORAGE call to update_post_meta($product, "_width", $width) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:481
  - STORAGE call to update_post_meta($product, "_height", $height) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:485
  - STORAGE call to delete_post_meta($product, "length") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:486
  - STORAGE call to delete_post_meta($product, "width") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:487
  - STORAGE call to delete_post_meta($product, "height") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:537
  - STORAGE call to update_post_meta($product, "_sku", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:541
  - STORAGE call to delete_post_meta($product, "sku") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:599
  - STORAGE call to update_post_meta($product, "_stock", $stock) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:600
  - STORAGE call to update_post_meta($product, "_manage_stock", $manage_stock) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:601
  - STORAGE call to update_post_meta($product, "_stock_status", $stock_status) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:605
  - STORAGE call to delete_post_meta($product, "stock") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:606
  - STORAGE call to delete_post_meta($product, "manage_stock") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:607
  - STORAGE call to delete_post_meta($product, "stock_status") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:657
  - STORAGE call to update_post_meta($product, "_visibility", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:661
  - STORAGE call to delete_post_meta($product, "visibility") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:725
  - STORAGE call to update_post_meta($product, "total_sales", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:728
  - STORAGE call to delete_post_meta($product, "_js_total_sales") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:778
  - STORAGE call to update_post_meta($product, "_purchase_note", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:910
  - STORAGE call to update_post_meta($product, "_product_url", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:914
  - STORAGE call to delete_post_meta($product, "_product_url") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:977
  - STORAGE call to update_post_meta($product, "_product_attributes", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:980
  - STORAGE call to update_post_meta($product, "_product_attributes", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:982
  - STORAGE call to delete_post_meta($product, "product_attributes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:1048
  - STORAGE call to update_post_meta($product, $new_attribute_key, $attribute) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:1053
  - STORAGE call to delete_post_meta($product, "variation_data") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:1251
  - STORAGE call to update_post_meta($product, "_downloadable", $output) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:1252
  - STORAGE call to update_post_meta($product, "_virtual", $output) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:1261
  - STORAGE call to update_post_meta($product, "_download_limit", $download_limit, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:1287
  - STORAGE call to update_post_meta($product, "_downloadable_files", $_file_paths) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/product.php:1293
  - STORAGE call to delete_post_meta($product, "file_path") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:1294
  - STORAGE call to delete_post_meta($product, "download_limit") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:1346
  - STORAGE call to update_post_meta($product, "_virtual", $output) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
jigoshop-migrator.php:83
  - STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_action") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
jigoshop-migrator.php:84
  - STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_actions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
jigoshop-migrator.php:85
  - STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
jigoshop-migrator.php:137
  - STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_action") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
jigoshop-migrator.php:138
  - STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_actions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
jigoshop-migrator.php:139
  - STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

includes/coupon.php:35
  - DELETION call to delete_post_meta($coupon, "type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:83
  - DELETION call to delete_post_meta($coupon, "amount") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:132
  - DELETION call to delete_post_meta($coupon, "date_to") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:352
  - DELETION call to delete_post_meta($coupon, "order_total_min") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:400
  - DELETION call to delete_post_meta($coupon, "order_total_max") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:448
  - DELETION call to delete_post_meta($coupon, "exclude_categories") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:496
  - DELETION call to delete_post_meta($coupon, "include_categories") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:559
  - DELETION call to delete_post_meta($coupon, "exclude_products") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:621
  - DELETION call to delete_post_meta($coupon, "include_products") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:670
  - DELETION call to delete_post_meta($coupon, "usage") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/coupon.php:718
  - DELETION call to delete_post_meta($coupon, "used_by") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/functions.php:27
  - DELETION call to delete_option(WOO_SM_PREFIX . $separator . sprintf("lock_action-%s", $action)) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/functions.php:56
  - DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_actions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/functions.php:64
  - DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_action") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/functions.php:82
  - DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/order.php:114
  - DELETION call to wp_delete_term($term, $term_taxonomy) alters data types {'term'}. Passed arguments: 0: $term (int), 1: $taxonomy (string). Returns (bool|int|WP_Error).
  - Data types: term
includes/order.php:202
  - DELETION call to delete_post_meta($order, "order_key") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/order.php:254
  - DELETION call to delete_post_meta($order, "customer_user") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:48
  - DELETION call to delete_post_meta($product, "regular_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:78
  - DELETION call to delete_post_meta($product, "regular_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:79
  - DELETION call to delete_post_meta($product, "price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:135
  - DELETION call to delete_post_meta($product, "sale_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:193
  - DELETION call to delete_post_meta($product, "sale_price_dates_from") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:194
  - DELETION call to delete_post_meta($product, "sale_price_dates_to") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:252
  - DELETION call to delete_post_meta($product, "featured") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:310
  - DELETION call to delete_post_meta($product, "customizable") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:367
  - DELETION call to delete_post_meta($product, "tax_status") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:421
  - DELETION call to delete_post_meta($product, "weight") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:485
  - DELETION call to delete_post_meta($product, "length") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:486
  - DELETION call to delete_post_meta($product, "width") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:487
  - DELETION call to delete_post_meta($product, "height") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:541
  - DELETION call to delete_post_meta($product, "sku") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:605
  - DELETION call to delete_post_meta($product, "stock") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:606
  - DELETION call to delete_post_meta($product, "manage_stock") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:607
  - DELETION call to delete_post_meta($product, "stock_status") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:661
  - DELETION call to delete_post_meta($product, "visibility") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:728
  - DELETION call to delete_post_meta($product, "_js_total_sales") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:914
  - DELETION call to delete_post_meta($product, "_product_url") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:982
  - DELETION call to delete_post_meta($product, "product_attributes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:1053
  - DELETION call to delete_post_meta($product, "variation_data") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:1293
  - DELETION call to delete_post_meta($product, "file_path") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/product.php:1294
  - DELETION call to delete_post_meta($product, "download_limit") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
jigoshop-migrator.php:83
  - DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_action") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
jigoshop-migrator.php:84
  - DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_actions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
jigoshop-migrator.php:85
  - DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
jigoshop-migrator.php:137
  - DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_action") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
jigoshop-migrator.php:138
  - DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_actions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
jigoshop-migrator.php:139
  - DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
address
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	WordPressStorageDetector.update_post_meta($order, "_shipping_address_1", $address_1) - {'address', 'post_meta'}
	VariableDetector.(unknown) - {'address'}
	WordPressStorageDetector.update_post_meta($order, "_shipping_address_2", $address_2) - {'address', 'post_meta'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
city
	WordPressStorageDetector.update_post_meta($order, "_shipping_city", $city) - {'city', 'post_meta'}
country
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	WordPressStorageDetector.update_post_meta($order, "_shipping_country", $country) - {'country', 'post_meta'}
email
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
first_name
	VariableDetector.(unknown) - {'first_name'}
	VariableDetector.(unknown) - {'first_name'}
	WordPressStorageDetector.update_post_meta($order, "_shipping_first_name", $first_name) - {'first_name', 'post_meta'}
	VariableDetector.(unknown) - {'first_name'}
last_name
	VariableDetector.(unknown) - {'last_name'}
	VariableDetector.(unknown) - {'last_name'}
	VariableDetector.(unknown) - {'last_name'}
	WordPressStorageDetector.update_post_meta($order, "_shipping_last_name", $last_name) - {'last_name', 'post_meta'}
none
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.get_posts($duplicate_exists_args) - set()
	WordPressStorageDetector.wp_insert_post($post_data) - set()
	WordPressRetrievalDetector.get_posts($duplicate_exists_args) - set()
	WordPressStorageDetector.wp_insert_post($post_data) - set()
	WordPressStorageDetector.wp_update_post($args) - set()
option
	DeletionDetector.delete_option(WOO_SM_PREFIX . $separator . sprintf("lock_action-%s", $action)) - {'option'}
	DeletionDetector.delete_option(WOO_SM_PREFIX . $separator . "current_id") - {'option'}
	DeletionDetector.delete_option(WOO_SM_PREFIX . $separator . "current_actions") - {'option'}
	DeletionDetector.delete_option(WOO_SM_PREFIX . $separator . "current_action") - {'option'}
	DeletionDetector.delete_option(WOO_SM_PREFIX . $separator . "current_action") - {'option'}
	DeletionDetector.delete_option(WOO_SM_PREFIX . $separator . "current_id") - {'option'}
	DeletionDetector.delete_option(WOO_SM_PREFIX . $separator . "current_action") - {'option'}
	DeletionDetector.delete_option(WOO_SM_PREFIX . $separator . "current_actions") - {'option'}
	WordPressStorageDetector.delete_option(WOO_SM_PREFIX . $separator . "current_id") - {'option'}
	WordPressStorageDetector.update_option(WOO_SM_PREFIX . $separator . "current_action", $action) - {'option'}
	WordPressStorageDetector.update_option(WOO_SM_PREFIX . $separator . $option, $value) - {'option'}
	WordPressStorageDetector.delete_option(WOO_SM_PREFIX . $separator . sprintf("lock_action-%s", $action)) - {'option'}
	WordPressStorageDetector.update_option(WOO_SM_PREFIX . $separator . "current_actions", $action) - {'option'}
	WordPressRetrievalDetector.get_option(WOO_SM_PREFIX . $separator . $option, $default) - {'option'}
	DeletionDetector.delete_option(WOO_SM_PREFIX . $separator . "current_actions") - {'option'}
	WordPressStorageDetector.delete_option(WOO_SM_PREFIX . $separator . "current_action") - {'option'}
	WordPressStorageDetector.update_option(WOO_SM_PREFIX . $separator . "current_id", $id) - {'option'}
	WordPressStorageDetector.delete_option(WOO_SM_PREFIX . $separator . "current_actions") - {'option'}
	WordPressStorageDetector.delete_option(WOO_SM_PREFIX . $separator . "current_id") - {'option'}
	WordPressStorageDetector.delete_option(WOO_SM_PREFIX . $separator . "current_action") - {'option'}
	WordPressStorageDetector.delete_option(WOO_SM_PREFIX . $separator . "current_action") - {'option'}
	WordPressStorageDetector.delete_option(WOO_SM_PREFIX . $separator . "current_id") - {'option'}
	WordPressStorageDetector.delete_option(WOO_SM_PREFIX . $separator . "current_actions") - {'option'}
	WordPressStorageDetector.delete_option(WOO_SM_PREFIX . $separator . "current_actions") - {'option'}
	DeletionDetector.delete_option(WOO_SM_PREFIX . $separator . "current_id") - {'option'}
post
	WordPressRetrievalDetector.get_post($download->order_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($output_log["product_id"]) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($product_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($wpsc_cart_item->prodid) - {'post', 'wp_post', 'post_meta'}
post_meta
	DeletionDetector.delete_post_meta($product, "_js_total_sales") - {'post_meta'}
	WordPressStorageDetector.add_post_meta($coupon, "exclude_product_ids", $woo_entry, true) - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "stock_status") - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "file_path") - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "regular_price") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($coupon, "exclude_products") - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "visibility") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($coupon, "individual_use", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "sale_price_dates_to", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "_product_url") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($coupon, "expiry_date", $output) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "type", "") - {'post_meta'}
	DeletionDetector.delete_post_meta($order, "customer_user") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($download->product_id, "_downloadable_files", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "manage_stock") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($coupon, "exclude_categories", true) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($coupon, "product_ids", $woo_entry, true) - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "featured") - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "price") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "stock_status", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "sale_price") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($coupon, "include_products", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($coupon, "usage") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "product_attributes", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "external_url", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_billing_city", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "_purchase_note", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "download_limit", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($coupon, "free_shipping", $coupon) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "total_sales", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "sale_price") - {'post_meta'}
	DeletionDetector.delete_post_meta($coupon, "date_to") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "_js_total_sales", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "sku") - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "stock") - {'post_meta'}
	DeletionDetector.delete_post_meta($coupon, "include_categories") - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "sale_price_dates_to") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "visibility", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "_shipping_company", $company) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_billing_company", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($coupon, "amount") - {'post_meta'}
	DeletionDetector.delete_post_meta($coupon, "exclude_products") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($coupon, "discount_type", $meta_value) - {'post_meta'}
	DeletionDetector.delete_post_meta($coupon, "order_total_min") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_billing_address_1", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($coupon, "type") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_billing_last_name", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($coupon, "include_products") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "_shipping_city", $city) - {'city', 'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "_shipping_postcode", $postcode) - {'postcode', 'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "_js_total_sales") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($coupon, "used_by") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "total_sales", $meta_value) - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "download_limit") - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "length") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "order_data", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_product_attributes", $meta_value) - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "height") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($coupon, "include_categories") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "variation_data", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "file_path", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($coupon, "type") - {'post_meta'}
	DeletionDetector.delete_post_meta($coupon, "exclude_categories") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($coupon, "usage_limit", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($coupon, "_used_by", $meta_value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_regular_price", $meta_value, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_shipping_last_name", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "order_data", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_billing_state", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($download->order_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_billing_country", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "order_items", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_shipping_address_1", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_featured", $output) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_shipping_company", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "sale_price_dates_from", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_shipping_state", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_shipping_country", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_customizable", $meta_value) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_shipping_city", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_shipping_address_2", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($coupon, "amount") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "sale_price", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_sale_price_dates_to", $meta_value_to) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_shipping_first_name", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "sale_price_dates_from") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "sale_price_dates_to") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_sale_price_dates_from", $meta_value_from) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_shipping_postcode", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "order_total_max", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "_shipping_address_1", $address_1) - {'address', 'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "exclude_products", "a:0:{}") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "order_data", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($coupon, "coupon_amount", $meta_value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($coupon, "product_categories", $meta_value) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_billing_postcode", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_downloadable", $output) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "download_limit") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "individual_use", 1) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "visibility") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "order_total_min", "") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "customer_user", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_virtual", $output) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "free_shipping", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_visibility", $meta_value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, $new_attribute_key, $attribute) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_price", $meta_value, true) - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "width") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_virtual", $output) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "regular_price") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "product_attributes") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "date_from", strtotime("Y-m-d H:i:s", $wpsc_coupon->start)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "_shipping_address_2", $address_2) - {'address', 'post_meta'}
	WordPressRetrievalDetector.get_post($output_log["product_id"]) - {'post', 'wp_post', 'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "usage_limit", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_downloadable_files", $_file_paths) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "variation_data") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "date_to", strtotime("Y-m-d H:i:s", $wpsc_coupon->expiry)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "pay_methods", "a:0:{}") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_download_limit", $download_limit, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_billing_address_2", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($coupon, "used_by") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($coupon, "order_total_max", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "tax_status") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "sku", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "_cart_discount", 0) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "price") - {'post_meta'}
	WordPressRetrievalDetector.get_post($product_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_order_discount", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($coupon, "usage") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "featured") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "height", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "order_data", $meta_value) - {'post_meta'}
	WordPressRetrievalDetector.get_post($wpsc_cart_item->prodid) - {'post', 'wp_post', 'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "regular_price") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "sku") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_sku", $meta_value) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "weight", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "tax_status", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "regular_price", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_sale_price", $meta_value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($coupon, "usage_count", $meta_value) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "width", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($order, "order_key") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($coupon, "usage", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "regular_price") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($coupon, "used_by", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "stock", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "_shipping_first_name", $first_name) - {'first_name', 'post_meta'}
	WordPressStorageDetector.delete_post_meta($coupon, "exclude_categories") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "featured", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "length", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($coupon, "order_total_min", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "customizable", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($coupon, "include_products") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "order_data", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "customizable") - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "sale_price_dates_from") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($coupon, "free_shipping", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($coupon, "include_categories", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "length") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($coupon, "minimum_amount", $meta_value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "order_data", $meta_value) - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "product_attributes") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($coupon, "maximum_amount", $meta_value) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "height") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_weight", $meta_value) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "tax_status") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "weight") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "tax_status", $meta_value) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($coupon, "order_total_min") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_height", $height) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "width") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "_billing_first_name", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "weight") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_length", $length) - {'post_meta'}
	DeletionDetector.delete_post_meta($coupon, "order_total_max") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_width", $width) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($coupon, "exclude_products", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($product, "variation_data") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "_order_currency", get_woocommerce_currency(), true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "customer_user", $jigo_sale["customer_user"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_price", $meta_value, true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "_product_url") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "_shipping_state", $state) - {'state', 'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "manage_stock") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "include_categories", "a:0:{}") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_purchase_note", $meta_value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "old_id", $jigo_sale["old_id"]) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "stock_status") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "_shipping_country", $country) - {'country', 'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_product_url", $meta_value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "_order_key", $meta_value) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($order, "order_key") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "order_key", $jigo_sale["order_key"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "exclude_categories", "a:0:{}") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, $wc_key, $meta_value[$jigoshop_key]) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "stock") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($coupon, "date_to", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_product_attributes", $meta_value) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product, "manage_stock", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "order_data", $jigo_sale["order_data"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "_customer_user", $meta_value) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "customizable") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "_shipping_last_name", $last_name) - {'last_name', 'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_price", $meta_value, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order, "order_key", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "include_products", "a:0:{}") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($order, "customer_user") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($product, "file_path") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "amount", $wpsc_coupon->value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "_prices_include_tax", "no") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_regular_price", $meta_value, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_stock_status", $stock_status) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "order_data", $meta_value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "order_data", $meta_value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order, "_order_tax", $total_tax) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($coupon, "order_total_max") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($coupon, "exclude_product_categories", $meta_value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_regular_price", $meta_value, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($coupon, "type", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($coupon, "individual_use", $output) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($coupon, "amount", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($coupon, "date_to") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_manage_stock", $manage_stock) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product, "_stock", $stock) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "order_items", $jigo_sale["order_items"]) - {'post_meta'}
postcode
	VariableDetector.(unknown) - {'postcode'}
	VariableDetector.(unknown) - {'postcode'}
	WordPressStorageDetector.update_post_meta($order, "_shipping_postcode", $postcode) - {'postcode', 'post_meta'}
	VariableDetector.(unknown) - {'postcode'}
site
	WordPressStorageDetector.delete_transient(WOO_SM_PREFIX . "_notice") - {'site'}
	WordPressStorageDetector.set_transient(WOO_SM_PREFIX . "_notice", base64_encode($output), MINUTE_IN_SECONDS) - {'site'}
	WordPressRetrievalDetector.get_transient(WOO_SM_PREFIX . "_notice") - {'site'}
	WordPressRetrievalDetector.get_transient(WOO_SM_PREFIX . "_notice") - {'site'}
state
	WordPressStorageDetector.update_post_meta($order, "_shipping_state", $state) - {'state', 'post_meta'}
term
	DeletionDetector.wp_delete_term($term, $term_taxonomy) - {'term'}
user
	WordPressRetrievalDetector.get_user_by("email", $check_download_user_email->user_email) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($check_download_user_email->user_id) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("email", $check_download_user_email->user_email) - {'user_meta', 'user'}
user_meta
	WordPressRetrievalDetector.get_user_by("email", $check_download_user_email->user_email) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($check_download_user_email->user_id) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("email", $check_download_user_email->user_email) - {'user_meta', 'user'}
wp_post
	WordPressRetrievalDetector.get_post($download->order_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($output_log["product_id"]) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($product_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($wpsc_cart_item->prodid) - {'post', 'wp_post', 'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:37.034466.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 8367 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:01.346598.

1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
3000 STORE_REACHES edges created
4000 STORE_REACHES edges created
5000 STORE_REACHES edges created
6000 STORE_REACHES edges created
7000 STORE_REACHES edges created
8000 STORE_REACHES edges created
8367 STORE_REACHES edges created
8367 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 470 nodes as PERSONAL
In total, tainted 470 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1 nodes as ENCRYPTED
In total, tainted 1 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:20.919268.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:02:13.188196!
DELETION call to delete_post_meta($coupon, "date_to") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($coupon, "type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($coupon, "order_total_min") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($coupon, "order_total_max") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($coupon, "exclude_categories") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($coupon, "include_categories") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($coupon, "exclude_products") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($coupon, "include_products") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($coupon, "usage") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($coupon, "used_by") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($coupon, "amount") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_option(WOO_SM_PREFIX . $separator . sprintf("lock_action-%s", $action)) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_actions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_action") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to wp_delete_term($term, $term_taxonomy) alters data types {'term'}. Passed arguments: 0: $term (int), 1: $taxonomy (string). Returns (bool|int|WP_Error).,None,None
DELETION call to delete_post_meta($order, "order_key") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($order, "customer_user") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "variation_data") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "file_path") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "download_limit") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "sale_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "sale_price_dates_from") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "sale_price_dates_to") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "featured") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "customizable") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "tax_status") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "weight") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "regular_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "length") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "width") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "height") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "sku") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "stock") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "manage_stock") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "stock_status") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "visibility") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "_js_total_sales") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "regular_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "_product_url") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($product, "product_attributes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_action") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_actions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_action") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_actions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(WOO_SM_PREFIX . $separator . "current_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
MD5 called with parameters [download_url]. Ignore if [download_url] does not contain personal information.,md5,None
object property '$user_info->user_email' of personal types {'email'} is found.,,None
object property '$check_download_user_email->user_email' of personal types {'email'} is found.,,None
object property '$check_download_user_email->user_email' of personal types {'email'} is found.,,None
object property '$user_info->user_email' of personal types {'email'} is found.,,None
object property '$check_download_user_email->user_email' of personal types {'email'} is found.,,None
object property '$check_download_user_email->user_email' of personal types {'email'} is found.,,None
object property '$user_info->user_email' of personal types {'email'} is found.,,None
object property '$check_download_user_email->user_email' of personal types {'email'} is found.,,None
object property '$check_download_user_email->user_email' of personal types {'email'} is found.,,None
object property '$check_download_user_email->user_email' of personal types {'email'} is found.,,None
object property '$download->user_email' of personal types {'email'} is found.,,None
object property '$download->user_email' of personal types {'email'} is found.,,None
variable '$order_copy_billing_shipping_address_exists' of personal types {'address'} is found.,,None
variable '$check_downloadable_user_email_sql' of personal types {'email'} is found.,,None
variable '$check_downloadable_user_email' of personal types {'email'} is found.,,None
variable '$check_downloadable_user_email_sql' of personal types {'email'} is found.,,None
variable '$check_downloadable_user_email' of personal types {'email'} is found.,,None
variable '$check_download_user_email' of personal types {'email'} is found.,,None
variable '$check_downloadable_user_email' of personal types {'email'} is found.,,None
variable '$check_download_user_email' of personal types {'email'} is found.,,None
variable '$check_download_user_email' of personal types {'email'} is found.,,None
variable '$check_download_user_email' of personal types {'email'} is found.,,None
variable '$check_download_user_email' of personal types {'email'} is found.,,None
variable '$check_download_user_email' of personal types {'email'} is found.,,None
variable '$check_download_user_email' of personal types {'email'} is found.,,None
variable '$check_download_user_email' of personal types {'email'} is found.,,None
variable '$check_download_user_email' of personal types {'email'} is found.,,None
variable '$check_download_user_email' of personal types {'email'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$address_1' of personal types {'address'} is found.,,None
variable '$address_2' of personal types {'address'} is found.,,None
variable '$postcode' of personal types {'postcode'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$address_1' of personal types {'address'} is found.,,None
variable '$address_2' of personal types {'address'} is found.,,None
variable '$postcode' of personal types {'postcode'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$address_2' of personal types {'address'} is found.,,None
variable '$postcode' of personal types {'postcode'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$address_1' of personal types {'address'} is found.,,None
variable '$order_copy_billing_shipping_address_exists' of personal types {'address'} is found.,,None
variable '$order_copy_billing_shipping_address_exists' of personal types {'address'} is found.,,None
variable '$order_copy_billing_shipping_address_exists' of personal types {'address'} is found.,,None
variable '$order_copy_billing_shipping_address_exists' of personal types {'address'} is found.,,None
RETRIEVAL call to get_transient(WOO_SM_PREFIX . "_notice") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient(WOO_SM_PREFIX . "_notice") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($coupon, "date_to", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($coupon, "usage_limit", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($coupon, "individual_use", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($coupon, "type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($coupon, "free_shipping", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($coupon, "order_total_min", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($coupon, "order_total_max", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($coupon, "exclude_categories", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($coupon, "include_categories", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($coupon, "exclude_products", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($coupon, "include_products", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($coupon, "usage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($coupon, "used_by", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($coupon, "amount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(WOO_SM_PREFIX . $separator . $option, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post($wpsc_cart_item->prodid) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($output_log["product_id"]) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_posts($duplicate_exists_args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post($product_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_userdata($check_download_user_email->user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("email", $check_download_user_email->user_email) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("email", $check_download_user_email->user_email) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_posts($duplicate_exists_args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($order, "order_key", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "customer_user", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "order_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "order_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_order_discount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_billing_first_name", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_billing_last_name", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_billing_company", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_billing_address_1", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_billing_address_2", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_billing_city", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_billing_postcode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_billing_country", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_billing_state", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_shipping_first_name", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_shipping_last_name", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_shipping_company", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_shipping_address_1", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_shipping_address_2", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_shipping_city", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_shipping_postcode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_shipping_country", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "_shipping_state", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "order_items", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "order_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order, "order_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($download->order_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($download->product_id, "_downloadable_files", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "variation_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "file_path", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "download_limit", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "sale_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "sale_price_dates_from", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "sale_price_dates_to", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "featured", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "customizable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "tax_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "weight", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "regular_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "length", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "width", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "height", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "sku", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "stock", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "manage_stock", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "stock_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "visibility", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "_js_total_sales", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "total_sales", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "_purchase_note", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "external_url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product, "product_attributes", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to delete_transient(WOO_SM_PREFIX . "_notice") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to set_transient(WOO_SM_PREFIX . "_notice", base64_encode($output), MINUTE_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_post_meta($coupon, "expiry_date", $output) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($coupon, "date_to") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($coupon, "individual_use", $output) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($coupon, "free_shipping", $coupon) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($coupon, "discount_type", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($coupon, "minimum_amount", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($coupon, "type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($coupon, "order_total_min") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($coupon, "maximum_amount", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($coupon, "order_total_max") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($coupon, "exclude_product_categories", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($coupon, "exclude_categories") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($coupon, "product_categories", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($coupon, "include_categories") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_post_meta($coupon, "exclude_product_ids", $woo_entry, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to delete_post_meta($coupon, "exclude_products") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_post_meta($coupon, "product_ids", $woo_entry, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to delete_post_meta($coupon, "include_products") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($coupon, "usage_count", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($coupon, "usage") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($coupon, "_used_by", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($coupon, "used_by") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($coupon, "coupon_amount", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($coupon, "amount") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_option(WOO_SM_PREFIX . $separator . $option, $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option(WOO_SM_PREFIX . $separator . sprintf("lock_action-%s", $action)) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option(WOO_SM_PREFIX . $separator . "current_actions", $action) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(WOO_SM_PREFIX . $separator . "current_action", $action) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_actions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_action") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option(WOO_SM_PREFIX . $separator . "current_id", $id) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to wp_insert_post($post_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, "order_items", $jigo_sale["order_items"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "order_data", $jigo_sale["order_data"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "customer_user", $jigo_sale["customer_user"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "order_key", $jigo_sale["order_key"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "old_id", $jigo_sale["old_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post($post_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, "date_from", strtotime("Y-m-d H:i:s", $wpsc_coupon->start)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "date_to", strtotime("Y-m-d H:i:s", $wpsc_coupon->expiry)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "usage_limit", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "amount", $wpsc_coupon->value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "individual_use", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "type", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "free_shipping", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "order_total_min", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "order_total_max", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "include_products", "a:0:{}") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "exclude_products", "a:0:{}") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "include_categories", "a:0:{}") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "exclude_categories", "a:0:{}") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "pay_methods", "a:0:{}") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "_order_key", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($order, "order_key") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($order, "_customer_user", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($order, "customer_user") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($order, "_order_currency", get_woocommerce_currency(), true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "order_data", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "order_data", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "_shipping_first_name", $first_name) alters data types {'first_name', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "_shipping_last_name", $last_name) alters data types {'last_name', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "_shipping_company", $company) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "_shipping_address_1", $address_1) alters data types {'address', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "_shipping_address_2", $address_2) alters data types {'address', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "_shipping_city", $city) alters data types {'city', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "_shipping_postcode", $postcode) alters data types {'postcode', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "_shipping_country", $country) alters data types {'country', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "_shipping_state", $state) alters data types {'state', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "_order_tax", $total_tax) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "order_data", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "_prices_include_tax", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, $wc_key, $meta_value[$jigoshop_key]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "_cart_discount", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order, "order_data", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_post($args). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($product, $new_attribute_key, $attribute) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "variation_data") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($product, "_downloadable", $output) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product, "_virtual", $output) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product, "_download_limit", $download_limit, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product, "_downloadable_files", $_file_paths) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "file_path") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($product, "download_limit") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($product, "_sale_price", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product, "_virtual", $output) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "sale_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($product, "_sale_price_dates_from", $meta_value_from) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product, "_sale_price_dates_to", $meta_value_to) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "sale_price_dates_from") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($product, "sale_price_dates_to") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($product, "_featured", $output) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "featured") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($product, "_customizable", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "customizable") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($product, "tax_status", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "tax_status") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($product, "_weight", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "weight") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($product, "_regular_price", $meta_value, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product, "_price", $meta_value, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product, "_length", $length) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "regular_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($product, "_width", $width) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product, "_height", $height) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "length") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($product, "width") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($product, "height") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($product, "_sku", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "sku") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($product, "_regular_price", $meta_value, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product, "_price", $meta_value, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product, "_stock", $stock) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product, "_manage_stock", $manage_stock) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product, "_stock_status", $stock_status) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "stock") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($product, "manage_stock") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($product, "stock_status") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($product, "_regular_price", $meta_value, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product, "_price", $meta_value, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product, "_visibility", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "visibility") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($product, "total_sales", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "_js_total_sales") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($product, "_purchase_note", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "regular_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($product, "price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($product, "_product_url", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "_product_url") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($product, "_product_attributes", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product, "_product_attributes", $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($product, "product_attributes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_action") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_actions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_action") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_actions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(WOO_SM_PREFIX . $separator . "current_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($coupon, "expiry_date", $output)", found in file includes/coupon.php at line 129. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($order, "_shipping_company", $company)", found in file includes/order.php at line 511. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($coupon, "discount_type", $meta_value)", found in file includes/coupon.php at line 32. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($order, "_shipping_city", $city)", found in file includes/order.php at line 517. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($order, "_shipping_postcode", $postcode)", found in file includes/order.php at line 519. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "total_sales", $meta_value)", found in file includes/product.php at line 725. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_product_attributes", $meta_value)", found in file includes/product.php at line 980. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($coupon, "_used_by", $meta_value)", found in file includes/coupon.php at line 715. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_regular_price", $meta_value, true)", found in file includes/product.php at line 63. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_featured", $output)", found in file includes/product.php at line 250. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_customizable", $meta_value)", found in file includes/product.php at line 306. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_sale_price_dates_to", $meta_value_to)", found in file includes/product.php at line 189. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_sale_price_dates_from", $meta_value_from)", found in file includes/product.php at line 188. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($order, "_shipping_address_1", $address_1)", found in file includes/order.php at line 513. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($coupon, "coupon_amount", $meta_value)", found in file includes/coupon.php at line 80. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($coupon, "product_categories", $meta_value)", found in file includes/coupon.php at line 493. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_visibility", $meta_value)", found in file includes/product.php at line 657. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_price", $meta_value, true)", found in file includes/product.php at line 47. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($order, "_shipping_address_2", $address_2)", found in file includes/order.php at line 515. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_download_limit", $download_limit, true)", found in file includes/product.php at line 1261. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_sku", $meta_value)", found in file includes/product.php at line 537. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_sale_price", $meta_value)", found in file includes/product.php at line 131. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($coupon, "usage_count", $meta_value)", found in file includes/coupon.php at line 667. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($order, "_shipping_first_name", $first_name)", found in file includes/order.php at line 507. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($coupon, "minimum_amount", $meta_value)", found in file includes/coupon.php at line 349. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($order, "order_data", $meta_value)", found in file includes/order.php at line 451. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($coupon, "maximum_amount", $meta_value)", found in file includes/coupon.php at line 397. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_weight", $meta_value)", found in file includes/product.php at line 417. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "tax_status", $meta_value)", found in file includes/product.php at line 363. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_height", $height)", found in file includes/product.php at line 481. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_length", $length)", found in file includes/product.php at line 479. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_width", $width)", found in file includes/product.php at line 480. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($order, "_shipping_state", $state)", found in file includes/order.php at line 523. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($order, "_shipping_country", $country)", found in file includes/order.php at line 521. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_product_url", $meta_value)", found in file includes/product.php at line 910. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($order, "_order_key", $meta_value)", found in file includes/order.php at line 198. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($order, $wc_key, $meta_value[$jigoshop_key])", found in file includes/order.php at line 727. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_product_attributes", $meta_value)", found in file includes/product.php at line 977. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($order, "_customer_user", $meta_value)", found in file includes/order.php at line 250. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($order, "_shipping_last_name", $last_name)", found in file includes/order.php at line 509. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_price", $meta_value, true)", found in file includes/product.php at line 64. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_stock_status", $stock_status)", found in file includes/product.php at line 601. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($coupon, "exclude_product_categories", $meta_value)", found in file includes/coupon.php at line 445. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_regular_price", $meta_value, true)", found in file includes/product.php at line 46. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($coupon, "individual_use", $output)", found in file includes/coupon.php at line 235. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_manage_stock", $manage_stock)", found in file includes/product.php at line 600. 

[has_storage] PII of types (['address', 'city', 'last_name', 'state', 'postcode', 'email', 'first_name', 'country']) stored through WordPress function "update_post_meta($product, "_stock", $stock)", found in file includes/product.php at line 599. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($coupon, "expiry_date", $output) does not have corresponding deletion method. Storage method found in file includes/coupon.php at line 129. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order, "_shipping_company", $company) does not have corresponding deletion method. Storage method found in file includes/order.php at line 511. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($coupon, "discount_type", $meta_value) does not have corresponding deletion method. Storage method found in file includes/coupon.php at line 32. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order, "_shipping_city", $city) does not have corresponding deletion method. Storage method found in file includes/order.php at line 517. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order, "_shipping_postcode", $postcode) does not have corresponding deletion method. Storage method found in file includes/order.php at line 519. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "total_sales", $meta_value) does not have corresponding deletion method. Storage method found in file includes/product.php at line 725. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_product_attributes", $meta_value) does not have corresponding deletion method. Storage method found in file includes/product.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($coupon, "_used_by", $meta_value) does not have corresponding deletion method. Storage method found in file includes/coupon.php at line 715. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_regular_price", $meta_value, true) does not have corresponding deletion method. Storage method found in file includes/product.php at line 63. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_featured", $output) does not have corresponding deletion method. Storage method found in file includes/product.php at line 250. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_customizable", $meta_value) does not have corresponding deletion method. Storage method found in file includes/product.php at line 306. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_sale_price_dates_to", $meta_value_to) does not have corresponding deletion method. Storage method found in file includes/product.php at line 189. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_sale_price_dates_from", $meta_value_from) does not have corresponding deletion method. Storage method found in file includes/product.php at line 188. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order, "_shipping_address_1", $address_1) does not have corresponding deletion method. Storage method found in file includes/order.php at line 513. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($coupon, "coupon_amount", $meta_value) does not have corresponding deletion method. Storage method found in file includes/coupon.php at line 80. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($coupon, "product_categories", $meta_value) does not have corresponding deletion method. Storage method found in file includes/coupon.php at line 493. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_visibility", $meta_value) does not have corresponding deletion method. Storage method found in file includes/product.php at line 657. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_price", $meta_value, true) does not have corresponding deletion method. Storage method found in file includes/product.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order, "_shipping_address_2", $address_2) does not have corresponding deletion method. Storage method found in file includes/order.php at line 515. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_download_limit", $download_limit, true) does not have corresponding deletion method. Storage method found in file includes/product.php at line 1261. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_sku", $meta_value) does not have corresponding deletion method. Storage method found in file includes/product.php at line 537. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_sale_price", $meta_value) does not have corresponding deletion method. Storage method found in file includes/product.php at line 131. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($coupon, "usage_count", $meta_value) does not have corresponding deletion method. Storage method found in file includes/coupon.php at line 667. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order, "_shipping_first_name", $first_name) does not have corresponding deletion method. Storage method found in file includes/order.php at line 507. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($coupon, "minimum_amount", $meta_value) does not have corresponding deletion method. Storage method found in file includes/coupon.php at line 349. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order, "order_data", $meta_value) does not have corresponding deletion method. Storage method found in file includes/order.php at line 451. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($coupon, "maximum_amount", $meta_value) does not have corresponding deletion method. Storage method found in file includes/coupon.php at line 397. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_weight", $meta_value) does not have corresponding deletion method. Storage method found in file includes/product.php at line 417. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "tax_status", $meta_value) has deletion method delete_post_meta($product, "tax_status"). Storage method found in file includes/product.php at line 363. Deletion method found in file includes/product.php at line 367. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_height", $height) does not have corresponding deletion method. Storage method found in file includes/product.php at line 481. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_length", $length) does not have corresponding deletion method. Storage method found in file includes/product.php at line 479. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_width", $width) does not have corresponding deletion method. Storage method found in file includes/product.php at line 480. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order, "_shipping_state", $state) does not have corresponding deletion method. Storage method found in file includes/order.php at line 523. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order, "_shipping_country", $country) does not have corresponding deletion method. Storage method found in file includes/order.php at line 521. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_product_url", $meta_value) has deletion method delete_post_meta($product, "_product_url"). Storage method found in file includes/product.php at line 910. Deletion method found in file includes/product.php at line 914. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order, "_order_key", $meta_value) does not have corresponding deletion method. Storage method found in file includes/order.php at line 198. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order, $wc_key, $meta_value[$jigoshop_key]) does not have corresponding deletion method. Storage method found in file includes/order.php at line 727. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_product_attributes", $meta_value) does not have corresponding deletion method. Storage method found in file includes/product.php at line 977. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order, "_customer_user", $meta_value) does not have corresponding deletion method. Storage method found in file includes/order.php at line 250. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order, "_shipping_last_name", $last_name) does not have corresponding deletion method. Storage method found in file includes/order.php at line 509. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_price", $meta_value, true) does not have corresponding deletion method. Storage method found in file includes/product.php at line 64. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_stock_status", $stock_status) does not have corresponding deletion method. Storage method found in file includes/product.php at line 601. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($coupon, "exclude_product_categories", $meta_value) does not have corresponding deletion method. Storage method found in file includes/coupon.php at line 445. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_regular_price", $meta_value, true) does not have corresponding deletion method. Storage method found in file includes/product.php at line 46. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($coupon, "individual_use", $output) does not have corresponding deletion method. Storage method found in file includes/coupon.php at line 235. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_manage_stock", $manage_stock) does not have corresponding deletion method. Storage method found in file includes/product.php at line 600. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($product, "_stock", $stock) does not have corresponding deletion method. Storage method found in file includes/product.php at line 599. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2104. Found in file includes/coupon.php at line 129 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9536. Found in file includes/order.php at line 511 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1760. Found in file includes/coupon.php at line 32 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9611. Found in file includes/order.php at line 517 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9636. Found in file includes/order.php at line 519 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13919. Found in file includes/product.php at line 725 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 14643. Found in file includes/product.php at line 980 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4127. Found in file includes/coupon.php at line 715 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11285. Found in file includes/product.php at line 63 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11989. Found in file includes/product.php at line 250 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 12189. Found in file includes/product.php at line 306 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11750. Found in file includes/product.php at line 189 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11741. Found in file includes/product.php at line 188 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9561. Found in file includes/order.php at line 513 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1927. Found in file includes/coupon.php at line 80 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3277. Found in file includes/coupon.php at line 493 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13627. Found in file includes/product.php at line 657 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11217. Found in file includes/product.php at line 47 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9586. Found in file includes/order.php at line 515 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 15944. Found in file includes/product.php at line 1261 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13121. Found in file includes/product.php at line 537 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11516. Found in file includes/product.php at line 131 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3960. Found in file includes/coupon.php at line 667 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9486. Found in file includes/order.php at line 507 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2776. Found in file includes/coupon.php at line 349 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9194. Found in file includes/order.php at line 451 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2943. Found in file includes/coupon.php at line 397 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 12609. Found in file includes/product.php at line 417 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 12396. Found in file includes/product.php at line 363 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 12884. Found in file includes/product.php at line 481 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 12866. Found in file includes/product.php at line 479 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 12875. Found in file includes/product.php at line 480 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9686. Found in file includes/order.php at line 523 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9661. Found in file includes/order.php at line 521 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 14330. Found in file includes/product.php at line 910 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8224. Found in file includes/order.php at line 198 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 10574. Found in file includes/order.php at line 727 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 14628. Found in file includes/product.php at line 977 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8421. Found in file includes/order.php at line 250 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9511. Found in file includes/order.php at line 509 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11297. Found in file includes/product.php at line 64 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13396. Found in file includes/product.php at line 601 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3110. Found in file includes/coupon.php at line 445 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11205. Found in file includes/product.php at line 46 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2443. Found in file includes/coupon.php at line 235 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13387. Found in file includes/product.php at line 600 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13378. Found in file includes/product.php at line 599 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function store-migrator-jigoshop-woocommerce_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'store-migrator-jigoshop-woocommerce' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function store-migrator-jigoshop-woocommerce_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'store-migrator-jigoshop-woocommerce' ),
        'callback'             => 'store-migrator-jigoshop-woocommerce_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'store-migrator-jigoshop-woocommerce_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function store-migrator-jigoshop-woocommerce_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'store-migrator-jigoshop-woocommerce' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'store-migrator-jigoshop-woocommerce' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'store-migrator-jigoshop-woocommerce' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'store-migrator-jigoshop-woocommerce', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'store-migrator-jigoshop-woocommerce_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
