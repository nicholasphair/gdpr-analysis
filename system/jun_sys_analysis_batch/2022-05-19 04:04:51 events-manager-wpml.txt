Timeout in resolving values
Timeout in running neo4j query
Running Main.py on events-manager-wpml

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.387902.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.956570.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 1 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.267210.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.584568.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1023 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.216939.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 10 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.060803.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.081973.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 417 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:06.187055.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 6261
Added 4809 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 6261
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.541546.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/events-manager-wpml/em-wpml-admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/events-manager-wpml/em-wpml-io.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/events-manager-wpml/em-wpml-permalinks.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/events-manager-wpml/events-manager-wpml.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.403715.

1 PHP_REACHES edges created
1 REACHES edges created
1000 PHP_REACHES edges created
1023 PHP_REACHES edges created
10 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
5226 PHP_REACHES edges created
6261 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 2374 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.177338.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:09.587803.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 6 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.586978.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 7 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.152508.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.836988.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.061862.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.008171.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.046184.

13 PHP_REACHES edges created
13 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 6 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.174607.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
32 SQL operations to process.
SELECT language_code FROM $wpdbicl_translations GROUP BY language_code
SQL command (SELECT language_code FROM $wpdbicl_translations GROUP BY language_code) cannot be parsed correct.
UPDATE EM_EVENTS_TABLE SET event_language={"1": ["$sitepress->get_locale_from_language_code($lang)"], "2": ["$lang"], "3": ["post_"]} WHERE post_id IN (SELECT element_id FROM $wpdbicl_translations WHERE language_code=%s AND (element_type=%s OR element_type='post_event-recurring')) 
None
UPDATE EM_LOCATIONS_TABLE SET location_language={"1": ["$sitepress->get_locale_from_language_code($lang)"], "2": ["$lang"], "3": ["post_"]} WHERE post_id IN (SELECT element_id FROM $wpdbicl_translations WHERE language_code=%s AND element_type=%s) AND (blog_id IS NULL OR blog_id=0 OR blog_id=absint(get_current_blog_id()))
None

				SELECT child.element_id AS child_id, parent.element_id AS parent_id, child.element_type AS type
				FROM $wpdbicl_translations child
				LEFT JOIN $wpdbicl_translations parent ON parent.trid=child.trid
			    WHERE
			        parent.source_language_code IS NULL
			        AND child.source_language_code IS NOT NULL
			        AND parent.element_type IN ('post_EM_POST_TYPE_EVENT', '%s', 'post_event-recurring')
			        AND child.element_type IN ('%s', '%s', 'post_event-recurring')
			        AND child.element_id IS NOT NULL;
			

				SELECT child.element_id AS child_id, parent.element_id AS parent_id, child.element_type AS type
				FROM $wpdbicl_translations child
				LEFT JOIN $wpdbicl_translations parent ON parent.trid=child.trid
			    WHERE
			        parent.source_language_code IS NULL
			        AND child.source_language_code IS NOT NULL
			        AND parent.element_type IN ('post_EM_POST_TYPE_EVENT', 'post_EM_POST_TYPE_LOCATION', 'post_event-recurring')
			        AND child.element_type IN ('%s', '%s', 'post_event-recurring')
			        AND child.element_id IS NOT NULL;
			

				SELECT chipost_EM_POST_TYPE_EVENT.element_id AS child_id, parent.element_id AS parent_id, child.element_type AS type
				FROM $wpdbicl_translations child
				LEFT JOIN $wpdbicl_translations parent ON parent.trid=child.trid
			    WHERE
			        parent.source_language_code IS NULL
			        AND child.source_language_code IS NOT NULL
			        AND parent.element_type IN ('post_EM_POST_TYPE_EVENT', 'post_EM_POST_TYPE_LOCATION', 'post_event-recurring')
			        AND child.element_type IN ('%s', '%s', 'post_event-recurring')
			        AND child.element_id IS NOT NULL;
			

post_EM_POST_TYPE_LOCATION		SELECT chipost_EM_POST_TYPE_EVENT.element_id AS child_id, parent.element_id AS parent_id, child.element_type AS type
				FROM $wpdbicl_translations child
				LEFT JOIN $wpdbicl_translations parent ON parent.trid=child.trid
			    WHERE
			        parent.source_language_code IS NULL
			        AND child.source_language_code IS NOT NULL
			        AND parent.element_type IN ('post_EM_POST_TYPE_EVENT', 'post_EM_POST_TYPE_LOCATION', 'post_event-recurring')
			        AND child.element_type IN ('%s', '%s', 'post_event-recurring')
			        AND child.element_id IS NOT NULL;
			

post_EM_POST_TYPE_LOCATION		SELECT chipost_EM_POST_TYPE_EVENT.element_id AS child_id, parent.element_id AS parent_id, child.element_type AS type
				FROM $wpdbicl_translations child
				LEFT JOIN $wpdbicl_translations parent ON parent.trid=child.trid
			    WHERE
			        parent.source_language_code IS NULL
			        AND child.source_language_code IS NOT NULL
			        AND parent.element_type IN ('post_EM_POST_TYPE_EVENT', 'post_EM_POST_TYPE_LOCATION', 'post_event-recurring')
			        AND child.element_type IN ('%s', '%s', 'post_event-recurring')
			        AND child.element_id IS NOT NULL;
			
SQL command ( post_EM_POST_TYPE_LOCATION SELECT chipost_EM_POST_TYPE_EVENT.element_id AS child_id, parent.element_id AS parent_id, child.element_type AS type FROM $wpdbicl_translations child LEFT JOIN $wpdbicl_translations parent ON parent.trid=child.trid WHERE parent.source_language_code IS NULL AND child.source_language_code IS NOT NULL AND parent.element_type IN ('post_EM_POST_TYPE_EVENT', 'post_EM_POST_TYPE_LOCATION', 'post_event-recurring') AND child.element_type IN ('%s', '%s', 'post_event-recurring') AND child.element_id IS NOT NULL; ) cannot be parsed correct.
SELECT post_id, location_id AS id FROM EM_LOCATIONS_TABLE WHERE post_id IN ({"1": ["$relation"], "2": ["$relation"]},%s)
None
SELECT post_id, event_id AS id FROM EM_EVENTS_TABLE WHERE post_id IN ({"1": ["$relation"], "2": ["$relation"]},%s)AND blog_id=absint(get_current_blog_id())
None
INSERT INTO EM_EVENTS_TABLE (event_id, post_id, event_parent, event_translation) VALUES implode(",", $parent_inserts["events"]) ON DUPLICATE KEY UPDATE event_parent=VALUES(event_parent), event_translation=1
SQL command (INSERT INTO EM_EVENTS_TABLE (event_id, post_id, event_parent, event_translation) VALUES implode(",", $parent_inserts["events"]) ON DUPLICATE KEY UPDATE event_parent=VALUES(event_parent), event_translation=1) cannot be parsed correct.
INSERT INTO EM_LOCATIONS_TABLE (location_id, post_id, location_parent, location_translation) VALUES implode(",", $parent_inserts["locations"]) ON DUPLICATE KEY UPDATE location_parent=VALUES(location_parent), location_translation=1
SQL command (INSERT INTO EM_LOCATIONS_TABLE (location_id, post_id, location_parent, location_translation) VALUES implode(",", $parent_inserts["locations"]) ON DUPLICATE KEY UPDATE location_parent=VALUES(location_parent), location_translation=1) cannot be parsed correct.
DELETE FROM $wpdb WHERE meta_key IN ('_event_language', '_event_parent', '_event_translation') AND post_id IN ( SELECT post_id FROM EM_EVENTS_TABLE WHERE blog_id=absint(get_current_blog_id()) )
SQL command (DELETE FROM $wpdb WHERE meta_key IN ('_event_language', '_event_parent', '_event_translation') AND post_id IN ( SELECT post_id FROM EM_EVENTS_TABLE WHERE blog_id=absint(get_current_blog_id()) )) cannot be parsed correct.
DELETE FROM $wpdb WHERE meta_key IN ('_location_language', '_location_parent', '_location_translation') AND post_id IN ( SELECT post_id FROM EM_LOCATIONS_TABLE WHERE (blog_id IS NULL OR blog_id=0 OR blog_id=absint(get_current_blog_id())) )
SQL command (DELETE FROM $wpdb WHERE meta_key IN ('_location_language', '_location_parent', '_location_translation') AND post_id IN ( SELECT post_id FROM EM_LOCATIONS_TABLE WHERE (blog_id IS NULL OR blog_id=0 OR blog_id=absint(get_current_blog_id())) )) cannot be parsed correct.
INSERT INTO $wpdb (post_id, meta_key, meta_value) (SELECT post_id, '_event_language', event_language FROM EM_EVENTS_TABLE WHERE blog_id=absint(get_current_blog_id()))
SQL command (INSERT INTO $wpdb (post_id, meta_key, meta_value) (SELECT post_id, '_event_language', event_language FROM EM_EVENTS_TABLE WHERE blog_id=absint(get_current_blog_id()))) cannot be parsed correct.
INSERT INTO $wpdb (post_id, meta_key, meta_value) (SELECT post_id, '_event_parent', event_parent FROM EM_EVENTS_TABLE WHERE event_parent IS NOT NULL AND (blog_id IS NULL OR blog_id=0 OR blog_id=absint(get_current_blog_id())))
SQL command (INSERT INTO $wpdb (post_id, meta_key, meta_value) (SELECT post_id, '_event_parent', event_parent FROM EM_EVENTS_TABLE WHERE event_parent IS NOT NULL AND (blog_id IS NULL OR blog_id=0 OR blog_id=absint(get_current_blog_id())))) cannot be parsed correct.
INSERT INTO $wpdb (post_id, meta_key, meta_value) (SELECT post_id, '_event_translation', 1 FROM EM_EVENTS_TABLE WHERE event_translation=1 AND (blog_id IS NULL OR blog_id=0 OR blog_id=absint(get_current_blog_id())))
SQL command (INSERT INTO $wpdb (post_id, meta_key, meta_value) (SELECT post_id, '_event_translation', 1 FROM EM_EVENTS_TABLE WHERE event_translation=1 AND (blog_id IS NULL OR blog_id=0 OR blog_id=absint(get_current_blog_id())))) cannot be parsed correct.
INSERT INTO $wpdb (post_id, meta_key, meta_value) (SELECT post_id, '_location_language', location_language FROM EM_LOCATIONS_TABLE WHERE blog_id=absint(get_current_blog_id()))
SQL command (INSERT INTO $wpdb (post_id, meta_key, meta_value) (SELECT post_id, '_location_language', location_language FROM EM_LOCATIONS_TABLE WHERE blog_id=absint(get_current_blog_id()))) cannot be parsed correct.
INSERT INTO $wpdb (post_id, meta_key, meta_value) (SELECT post_id, '_location_parent', location_parent FROM EM_LOCATIONS_TABLE WHERE location_parent IS NOT NULL AND (blog_id IS NULL OR blog_id=0 OR blog_id=absint(get_current_blog_id())))
SQL command (INSERT INTO $wpdb (post_id, meta_key, meta_value) (SELECT post_id, '_location_parent', location_parent FROM EM_LOCATIONS_TABLE WHERE location_parent IS NOT NULL AND (blog_id IS NULL OR blog_id=0 OR blog_id=absint(get_current_blog_id())))) cannot be parsed correct.
INSERT INTO $wpdb (post_id, meta_key, meta_value) (SELECT post_id, '_location_translation', 1 FROM EM_LOCATIONS_TABLE WHERE location_translation=1 AND (blog_id IS NULL OR blog_id=0 OR blog_id=absint(get_current_blog_id())))
SQL command (INSERT INTO $wpdb (post_id, meta_key, meta_value) (SELECT post_id, '_location_translation', 1 FROM EM_LOCATIONS_TABLE WHERE location_translation=1 AND (blog_id IS NULL OR blog_id=0 OR blog_id=absint(get_current_blog_id())))) cannot be parsed correct.
SELECT element_id FROM $wpdbicl_translations WHERE element_id IS NOT NULL AND element_type=post_$post_type
SELECT element_id FROM $wpdbicl_translations WHERE element_id IS NOT NULL AND element_type=post_$post_type
SQL command (SELECT element_id FROM $wpdbicl_translations WHERE element_id IS NOT NULL AND element_type=post_$post_type) cannot be parsed correct.
SELECT element_id FROM $wpdbicl_translations WHERE element_id IS NOT NULL AND element_type=post_$post_type
SQL command (SELECT element_id FROM $wpdbicl_translations WHERE element_id IS NOT NULL AND element_type=post_$post_type) cannot be parsed correct.
SELECT element_id, trid FROM $wpdbicl_translations WHERE element_id IN (implode(",", $post_ids)) AND element_type=post_$post_type
SELECT element_id, trid FROM $wpdbicl_translations WHERE element_id IN (implode(",", $post_ids)) AND element_type=post_$post_type
SQL command (SELECT element_id, trid FROM $wpdbicl_translations WHERE element_id IN (implode(",", $post_ids)) AND element_type=post_$post_type) cannot be parsed correct.
SELECT element_id FROM $wpdbicl_translations WHERE element_id IS NOT NULL AND element_type=post_$post_type
SQL command (SELECT element_id FROM $wpdbicl_translations WHERE element_id IS NOT NULL AND element_type=post_$post_type) cannot be parsed correct.
SELECT element_id, trid FROM $wpdbicl_translations WHERE element_id IN (implode(",", $post_ids)) AND element_type=post_$post_type
SQL command (SELECT element_id, trid FROM $wpdbicl_translations WHERE element_id IN (implode(",", $post_ids)) AND element_type=post_$post_type) cannot be parsed correct.
INSERT INTO $wpdbicl_translations (element_type, element_id, trid, language_code, source_language_code) VALUES implode(",", $inserts)
SQL command (INSERT INTO $wpdbicl_translations (element_type, element_id, trid, language_code, source_language_code) VALUES implode(",", $inserts)) cannot be parsed correct.
SELECT blog_id FROM $wpdb WHERE site_id=$current_site
SQL command (SELECT blog_id FROM $wpdb WHERE site_id=$current_site) cannot be parsed correct.
UPDATE $wpdbicl_translations SET source_language_code = NULL WHERE element_id = "placeholder_0"
UPDATE $wpdbicl_translations SET source_language_code = NULL WHERE element_id = "placeholder_0"
SQL command (UPDATE $wpdbicl_translations SET source_language_code = NULL WHERE element_id = "placeholder_0") cannot be parsed correct.
DELETE FROM $wpdbicl_translations WHERE element_id IN (implode(",", $post_ids))
SQL command (DELETE FROM $wpdbicl_translations WHERE element_id IN (implode(",", $post_ids))) cannot be parsed correct.
SELECT name, id FROM $wpdbicl_strings WHERE id IN (implode(",", array_keys($string_ids)))
SQL command (SELECT name, id FROM $wpdbicl_strings WHERE id IN (implode(",", array_keys($string_ids)))) cannot be parsed correct.
SELECT job_id FROM $wpdbicl_translate WHERE field_type='original_id' AND field_data=absint($EM_Event->post_id) ORDER BY job_id DESC
SQL command (SELECT job_id FROM $wpdbicl_translate WHERE field_type='original_id' AND field_data=absint($EM_Event->post_id) ORDER BY job_id DESC) cannot be parsed correct.
SELECT id, name FROM $wpdbicl_strings WHERE context=EM_POST_TYPE_EVENT-tickets- AND name LIKE %s
SELECT id, name FROM $wpdbicl_strings WHERE context=EM_POST_TYPE_EVENT-tickets- AND name LIKE ticket_%
SELECT id, name FROM $wpdbicl_strings WHERE context=EM_POST_TYPE_EVENT-tickets- AND name LIKE ticket_%
SQL command (SELECT id, name FROM $wpdbicl_strings WHERE context=EM_POST_TYPE_EVENT-tickets- AND name LIKE ticket_%) cannot be parsed correct.
SELECT REPLACE(field_type, 'package-string-$package->get_package_id()-', '') as string_id FROM $wpdbicl_translate WHERE job_id=%d AND field_type LIKE %s
SELECT REPLACE(field_type, 'package-string-$package->get_package_id()-', '') as string_id FROM $wpdbicl_translate WHERE job_id=$job_id AND field_type LIKE %s
SELECT REPLACE(field_type, 'package-string-$package->get_package_id()-', '') as string_id FROM $wpdbicl_translate Wpackage-string-$package->get_package_id()-%RE job_id=$job_id AND field_type LIKE %s
SELECT REPLACE(field_type, 'package-string-$package->get_package_id()-', '') as string_id FROM $wpdbicl_translate Wpackage-string-$package->get_package_id()-%RE job_id=$job_id AND field_type LIKE %s
SQL command (SELECT REPLACE(field_type, 'package-string-$package->get_package_id()-', '') as string_id FROM $wpdbicl_translate Wpackage-string-$package->get_package_id()-%RE job_id=$job_id AND field_type LIKE %s) cannot be parsed correct.
SELECT element_id, trid, language_code FROM $wpdbicl_translations WHERE element_id IN (implode(",", array_keys($post_ids))) AND element_type=post_$post_type
SELECT element_id, trid, language_code FROM $wpdbicl_translations WHERE element_id IN (implode(",", array_keys($post_ids))) AND element_type=post_$post_type
SQL command (SELECT element_id, trid, language_code FROM $wpdbicl_translations WHERE element_id IN (implode(",", array_keys($post_ids))) AND element_type=post_$post_type) cannot be parsed correct.
DELETE FROM $wpdbicl_translations WHERE element_id IN (implode(",", $post_ids)) AND element_type=post_$post_type
DELETE FROM $wpdbicl_translations WHERE element_id IN (implode(",", $post_ids)) AND element_type=post_$post_type
SQL command (DELETE FROM $wpdbicl_translations WHERE element_id IN (implode(",", $post_ids)) AND element_type=post_$post_type) cannot be parsed correct.
INSERT INTO $wpdbicl_translations (element_id, trid, element_type, language_code, source_language_code) VALUES implode(",", $inserts)
SQL command (INSERT INTO $wpdbicl_translations (element_id, trid, element_type, language_code, source_language_code) VALUES implode(",", $inserts)) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [346, 419, 479, 539, 609, 647, 732, 765, 795, 826, 857, 888, 919, 950, 981, 1012, 1306, 1337, 1509, 1574, 1667, 1884, 2103, 3019, 4445, 4898, 5753, 5867, 5933, 9094, 9104, 9326]
Added 0 SQL nodes. 0 out of 32 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:09.660162.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'sprintf(esc_html__("Your last attempt to sync languages on all blogs did not complete successfully. You can attempt to reset only those blogs that weren\\'t completed by %s from the dropdowns below", "events-manager-wpml"), "<code>" . esc_html__("Resume Previous Attempt (All Blogs)", "events-manager") . "</code>")'' cannot be parsed correct.
HTML code '$'<option value=$WP_Site"$WP_Site</option>'' cannot be parsed correct.
HTML code '$'wp_create_nonce("sync_translations")'' cannot be parsed correct.
HTML code '$'<div class="notice notice-error"><p>sprintf(__("This version of the %s plugin requires at least %s to work properly, please update as soon as possible.", "events-manager-wpml"), "<code>Events Manager and WPML</code>", "<code>Events Manager 5.9.7</code>")</p></div>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:00.626479.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.046911.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 6 do_action/apply_filters calls and 43 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.237974.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
### Finish running HashDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PHPStorageDetector
### Start running PropertyDetector
### Finish running PHPRetrievalDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running PropertyDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SqlServerDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running MySQLiDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Start running GenericEncryptionDetector
### Finish running VariableDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running PhpVarDetector
### Finish running GenericDatabaseUsageDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finished running detectors
em-wpml-admin.php:398
  - RETRIEVAL call to get_option("em_wpml_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
em-wpml-permalinks.php:42
  - RETRIEVAL call to get_post(get_option("dbem_events_page")) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
em-wpml-permalinks.php:42
  - RETRIEVAL call to get_option("dbem_events_page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
events-manager-wpml.php:58
  - RETRIEVAL call to get_option("em_wpml_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
events-manager-wpml.php:117
  - RETRIEVAL call to get_option("dbem_rsvp_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
events-manager-wpml.php:480
  - RETRIEVAL call to get_option("dbem_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
events-manager-wpml.php:480
  - RETRIEVAL call to get_option("dbem_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

em-wpml-admin.php:399
  - STORAGE call to delete_option("em_wpml_disable_recurrence_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
events-manager-wpml.php:500
  - STORAGE call to update_option("em_wpml_version", EM_WPML_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

em-wpml-admin.php:399
  - DELETION call to delete_option("em_wpml_disable_recurrence_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
em-wpml-io.php:383
  - Data from table $wpdbicl_translate deleted: "$wpdb->delete($wpdb->prefix . "icl_translate", ["field_type" => $field_name])" 

By data type:
none
	DeletionDetector.$wpdb->delete($wpdb->prefix . "icl_translate", ["field_type" => $field_name]) - set()
option
	WordPressRetrievalDetector.get_option("dbem_rsvp_enabled") - {'option'}
	WordPressStorageDetector.delete_option("em_wpml_disable_recurrence_notice") - {'option'}
	WordPressRetrievalDetector.get_option("em_wpml_version") - {'option'}
	WordPressRetrievalDetector.get_option("dbem_version") - {'option'}
	WordPressRetrievalDetector.get_option("em_wpml_version") - {'option'}
	WordPressStorageDetector.update_option("em_wpml_version", EM_WPML_VERSION) - {'option'}
	WordPressRetrievalDetector.get_option("dbem_version") - {'option'}
	WordPressRetrievalDetector.get_option("dbem_events_page") - {'option'}
	DeletionDetector.delete_option("em_wpml_disable_recurrence_notice") - {'option'}
post
	WordPressRetrievalDetector.get_post(get_option("dbem_events_page")) - {'post_meta', 'wp_post', 'post'}
post_meta
	WordPressRetrievalDetector.get_post(get_option("dbem_events_page")) - {'post_meta', 'wp_post', 'post'}
wp_post
	WordPressRetrievalDetector.get_post(get_option("dbem_events_page")) - {'post_meta', 'wp_post', 'post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:07.518932.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 12 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.092587.

12 STORE_REACHES edges created
12 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.005301.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:53.795829!
DELETION call to delete_option("em_wpml_disable_recurrence_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Data from table $wpdbicl_translate deleted: "$wpdb->delete($wpdb->prefix . "icl_translate", ["field_type" => $field_name])",None,None
RETRIEVAL call to get_option("em_wpml_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post(get_option("dbem_events_page")) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("dbem_events_page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("dbem_rsvp_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("dbem_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("dbem_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("em_wpml_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to delete_option("em_wpml_disable_recurrence_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("em_wpml_version", EM_WPML_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
